<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>하는 동안</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="While 작업을 설명하는 페이지" />
  <meta name="rh-index-keywords" content="GML 비주얼 액션 - 동안" />
  <meta name="search-keywords" content="하는 동안" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1><img alt="While Icon" class="icon" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Loops/i_Loops_While.png" /> 하는 동안</h1><p> <b>While</b> 작업은 특정 조건이 반환될 때만 종료되는 루프를 수행하는 데 사용됩니다. <span class="inline">true</span>. 예를 들어, 변수를 사용하고 다음으로 설정할 수 있습니다. <span class="inline">false</span> 그런 다음 While 루프를 실행하고 이 변수를 확인하도록 한 다음 루프의 어느 시점에서 변수를 다음으로 설정합니다. <span class="inline">true</span> 루프가 종료됩니다. while 루프 내에서 조건을 설정한 위치에 관계없이 루프 내의 <i>모든</i> 작업은 나머지 스크립트 또는 이벤트가 계속되기 전에 끝까지 실행되며 조건을 변경해도 루프가 즉시 중단되지는 않습니다.</p><p> 코드에 While 작업을 추가할 때 검사할 변수, 수행할 검사의 종류(보다 작음, 큼, 같음 등) 및 변수를 검사할 값(사용자 조건이 true가 <i>아닌지</i> 확인하기 위해 While 루프를 검사 <i>하지 않도록</i> 플래그를 지정할 수도 있습니다. 그런 다음 &quot;if&quot;에 작업을 추가하는 것처럼 While 루프 내에서 수행할 작업을 추가합니다.</p><p><img alt="While drop actions" class="center" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Loops/While_Drop.png" /> 측면에 추가된 모든 작업은 While에 포함되며 이벤트 또는 스크립트가 아래에 추가된 작업으로 계속되기 전에 수행됩니다(아래 예 참조). <a href="Break.htm">Break</a> 작업을 호출하면 루프를 조기에 종료할 수 있습니다.</p><p></p><h4> 동작 구문:</h4><p><img alt="While Action" class="center" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Loops/a_Loops_While.png" /></p><h4> 인수:</h4><table><tbody><tr><th> 논쟁</th><th> 설명</th></tr><tr><td> <span class="notranslate">Variable</span></td><td> 검사에 사용할 변수</td></tr><tr><td> <span class="notranslate">Is</span></td><td> 수행할 평가 유형(보다 작음, 큼, 같음, 크거나 같음 및 작거나 같음)</td></tr><tr><td> <span class="notranslate">Value</span></td><td> 변수를 확인할 값</td></tr></tbody></table><p></p><h4> 예시:</h4><p><img alt="While Example" class="center" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Loops/e_Loops_While.png" /> 위의 액션 블록 코드는 임시 로컬 변수를 생성하고 다음으로 설정합니다. <span class="inline">false</span>. 그런 다음 이 변수는 While 루프 작업에서 확인되고 false를 반환하는 동안 루프가 실행됩니다. 루프에서 방의 임의 x/y 위치에 대한 두 개의 임시 로컬 변수를 얻은 다음 충돌 위치를 확인합니다. 충돌이 발견되지 않으면 초기 변수가 다음으로 설정됩니다. <span class="inline">true</span>, 루프를 종료합니다. 루프가 종료되면 충돌이 없는 것으로 확인된 임의의 위치에 새 인스턴스가 생성됩니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Loop_Actions.htm">루프 동작</a></div><div style="float:right"> <a href="For.htm">다음</a>:</div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
Action - While
-->
  <!-- TAGS
action_while_loop
-->
</body>
</html>