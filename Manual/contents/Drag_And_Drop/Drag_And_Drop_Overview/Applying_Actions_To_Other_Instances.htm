<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>다른 인스턴스에 작업 적용</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="다른 인스턴스에 작업을 적용하는 방법을 설명하는 문서" />
  <meta name="rh-index-keywords" content="GML 시각적 개요 - 다른 인스턴스에 작업 적용" />
  <meta name="search-keywords" content="수신 거부,코드 수신 거부,수신 거부 적용" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> 다른 인스턴스에 작업 적용</h1><p> GML Visual 라이브러리의 대부분의 작업에는 다양한 방식으로 작업을 적용할 수 있는 옵션이 있습니다. 이를 <strong>작업 범위</strong> 설정이라고 하며 다음 중 하나가 될 수 있습니다.</p><p><img alt="GML Visual Applies To" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Applies_To.png" /> 본질적으로 <span data-keyref="GameMaker Name">GameMaker</span> 에 말하는 것은 어떤 인스턴스가 작업을 실행해야 하는지입니다. 기본 작업 범위는 <span class="inline">self</span>, 즉 개체가 방의 인스턴스로 생성되면 해당 인스턴스가 작업 코드를 실행합니다. 그러나 이것이 항상 원하는 것은 아니며 일부 작업이 룸의 다른 또는 모든 인스턴스에 영향을 미치기를 원할 수 있습니다. 여기에서 작업 범위를 변경해야 합니다.</p><p> 작업 수행을 위한 다양한 범위가 아래에 나열되어 있지만 이러한 방식으로 작업의 범위를 변경하면 해당 작업에만 새 범위가 적용 <em>되고 체인의 후속 작업에는 적용되지 않습니다</em>. 여러 연결 작업에 작업 범위 변경 사항을 적용하려면 먼저 <a href="../Drag_And_Drop_Reference/Common/Apply_To...htm">적용 대상...</a> 작업을 사용합니다.</p><p></p><p><img alt="Self Icon" class="icon" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Scope_Self.png" /> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">본인</a></p><div class="droptext" data-targetname="drop-down"><p class="dropspot"> 이것은 작업의 기본 범위이며 코드를 실행하는 인스턴스에서만 작업을 호출해야 함을 나타냅니다.</p><p class="dropspot"></p></div><p><img alt="Other Icon" class="icon" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Scope_Other.png" /> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">다른</a></p><div class="droptext" data-targetname="drop-down1"><p class="dropspot"> 그만큼 <span class="inline">other</span> 범위에는 두 가지 주요 기능이 있으며 반환 값은 사용 위치와 방법에 따라 다릅니다. <strong>충돌 이벤트</strong> 에서 <span class="inline">other</span> 고유한 인스턴스 ID 값(모든 개체의 개별 인스턴스를 구별하는 데 사용되는 고유한 값)을 반환하므로 예를 들어 &quot;총알&quot; 인스턴스를 만들고 &quot;플레이어&quot; 인스턴스와 충돌 이벤트를 가질 수 있습니다. 사용 <span class="inline">other</span> 범위는 &quot;플레이어&quot; 개체에서 히트 포인트를 제거한 다음 <span class="inline">self</span> &quot;bullet&quot; 인스턴스를 파괴하는 범위.</p><p class="dropspot"> 충돌 이벤트 외부 <span class="inline">other</span> 설정은 로 설정된 것처럼 작동합니다. <span class="inline">noone</span> 범위가 지정된 작업 블록 내에서 호출되지 않는 한. 이것이 의미하는 바는 작업 그룹의 범위를 특정 개체로 변경하면 해당 작업이 호출되는 동안 <span class="inline">other</span> 범위는 처음에 작업 그룹을 호출한 인스턴스의 인스턴스 ID를 반환합니다. 예를 들어 <a href="../Drag_And_Drop_Reference/Common/Apply_To...htm">적용 대상...</a> 작업을 실행한 다음 다음 코드 블록에서 범위를 다음으로 설정할 수 있습니다. <span class="inline">other</span> 코드 블록에 적용에서 범위가 지정된 인스턴스가 아니라 전체 이벤트 블록을 실행하는 인스턴스에서 작업을 수행합니다. 아래 이미지는 예를 보여줍니다.</p><p class="dropspot"><img alt="GML Visual Scope" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Scope_Other.png" /> 이미지에서 인스턴스에서 마우스 누르기를 확인하고 있으며 감지되면 <strong>적용 대상...</strong> 작업을 사용하여 범위를 변경합니다. 다음 두 개의 액션 블록은 이제 &quot;obj_Player&quot; 인스턴스에서 호출되며(둘 이상이면 모두에 대해 실행됨) 개체는 스프라이트를 변경한 다음 다른 위치에 개체를 만듭니다.: 이벤트를 실행하고 마우스 눌림을 감지한 객체의 위치.</p><p class="dropspot"></p></div><p><img alt="All Icon" class="icon" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Scope_All.png" /> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">모두</a></p><div class="droptext" data-targetname="drop-down2"><p class="dropspot"> 모두에 대한 작업 범위를 지정하면 <span data-keyref="GameMaker Name">GameMaker</span> 에 <strong>현재 방 내의 모든 단일 활성 인스턴스</strong> 에 대해 해당 블록을 실행하도록 지시하는 것입니다. 예를 들어 <a href="../Drag_And_Drop_Reference/Instance/Destroy_Object_Instance.htm">Destroy Object Instance</a> 작업을 만들고 범위를 다음으로 설정합니다. <span class="inline">all</span> 어떤 개체에서 생성되었는지에 관계없이 방의 모든 인스턴스가 사라집니다.</p><p class="dropspot"></p></div><p><img alt="Object Icon" class="icon" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Scope_Object.png" /> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">물체</a></p><div class="droptext" data-targetname="drop-down3"><p class="dropspot"> 작업은 범위로 <strong>개체</strong> 를 지정할 수도 있습니다. 이것이 의미하는 바는 주어진 개체의 모든 인스턴스가 호출되는 동시에 해당 작업을 실행한다는 것입니다. 예를 들어 방에 100개의 적 인스턴스가 있고 모두 특정 지점을 가리키도록 설정하려는 경우입니다. <a href="../Drag_And_Drop_Reference/Movement/Set_Point_Direction.htm">Set Point Direction</a> 을 호출하고 작업 범위를 &quot;obj_Enemy&quot; 개체로 설정하면 호출될 때 해당 개체의 모든 인스턴스가 방향을 변경합니다.</p><p class="dropspot"></p></div><p> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">표현</a></p><div class="droptext" data-targetname="drop-down4"><p class="dropspot"> 표현식 입력 필드는 작업을 수행하려는 특정 인스턴스의 ID를 입력하기 위한 것입니다. Room Editor에서 인스턴스에 할당된 고유 ID 값이거나 변수에 저장한 인스턴스의 ID(변수가 입력 값이 됨)이거나 다음을 사용하는 표현식일 수도 있습니다. 아래 이미지와 같이 코드:</p><p class="dropspot"><img alt="GML Visual Target" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Scope_Target.png" /> 이 경우 인스턴스는 표현식에 대해 제공된 코드로 생성된 인스턴스에서 <a href="../Drag_And_Drop_Reference/Instance/Set_Sprite.htm">Set Sprite</a> 를 호출합니다. 이 경우 생성되는 인스턴스는 작업이 적용되기 전에 먼저 생성 이벤트를 실행합니다. </p><p class="dropspot"></p></div><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="../../Content.htm">인덱스</a></div><div style="float:right"> 다음: <a href="Action_Block_Functions.htm">액션 블록 스크립트</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
GML Visual Applying Actions
-->
  <!-- TAGS
drag_and_drop_applying
-->
</body>
</html>