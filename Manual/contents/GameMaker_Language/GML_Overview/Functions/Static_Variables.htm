<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>정적 변수</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="정적 변수의 사용을 설명하는 페이지" />
  <meta name="rh-index-keywords" content="정적 변수" />
  <meta name="search-keywords" content="정적 변수,static" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> 정적 변수</h1><p> <a href="../Script_Functions.htm">스크립트 함수</a> 와 <a href="../Method_Variables.htm">메서드 변수</a> 의 흥미로운 특징은 <strong>정적 변수</strong> 를 가질 수 있다는 것입니다. 정적 변수는 함수가 처음 호출될 때 정의되고 그 이후부터 값을 유지하는 변수입니다. 정적 변수를 생성하려면 다음을 사용하여 정의해야 합니다. <span class="inline">static</span> 이 간단한 예와 같이 키워드:</p><p class="code">counter = function()<br />
    {<br />
        static num = 0;<br />
        return num++;<br />
    }</p><p> 위의 예에서 변수 <span class="inline">num</span> 정적 변수이므로 다음과 같이 정의됩니다. <span class="inline">0</span> 함수가 처음 호출될 때지만 그 이후에 함수가 호출될 때마다 변수 초기화는 무시됩니다. 따라서 이 함수를 다음과 같이 호출하면:</p><p class="code">for (var i = 0; i &lt; 10; ++i;)<br />
    {<br />
        show_debug_message(counter());<br />
    }</p><p> 출력은 다음과 같습니다.</p><p class="code">0<br />
    1<br />
    2<br />
    3<br />
    4<br />
    5<br />
    6<br />
    7<br />
    8<br />
    9</p><p> 사용하지 않았다면 <span class="inline">static</span> 여기에 키워드를 입력하면 출력은 단순히 <span class="inline">0</span> 루프의 모든 반복에 대해 변수 <span class="inline">num</span> 로 정의될 것이다. <span class="inline">0</span> 함수가 반환되기 전에 호출될 때마다. 정적 변수는 원래 함수 내에서만 변경할 수 있으며, 이를 반환하면 단순히 해당 값의 복사본을 제공합니다. 본질적으로 공유 정적 변수는 해당 변수를 포함하는 함수에서만 변경할 수 있습니다.</p><p> 정적 변수는 항상 함수의 맨 위에서 초기화되므로 함수에서 정적 변수를 정의하는 위치에 관계없이 함수 전체에서 항상 읽고 변경할 수 있습니다(정의되기 전에 사용된 경우에도). 다음 예를 참조하십시오.</p><p class="code">function add_health()<br />
    {<br />
        my_health++;<br />
        show_debug_message(my_health);<br />
        static my_health = 1;<br />
    }</p><p> 여기서 정적 변수 &quot;<span class="inline">my_health</span> &quot;는 초기화 <em>되기 전에</em> 변경되어 컴파일러 출력에 인쇄됩니다. 잘못된 것처럼 보이지만 정적 변수는 함수 코드가 실행되기 전에 초기화 <em>되기</em> 때문에 완벽합니다. 함수에 정적 변수가 여러 개 있는 경우 정의된 항목은 맨 위에서 초기화될 때 유지됩니다.</p><p> 당신은 또한 사용할 수 있습니다 <span class="inline">static</span> 변수와 마찬가지로 <strong>정적 함수</strong> 를 생성하는 함수 내 키워드는 단순히 함수가 처음으로 호출되는 한 번만 정의된다는 것을 의미합니다. 예를 들면 다음과 같습니다.</p><p class="code">function(_x, _y) Vector2 constructor<br />
    {<br />
        x = _x;<br />
        y = _y;<br />
    <br />
        static Add = function( _other )<br />
        {<br />
            x += _other.x;<br />
            y += _other.y;<br />
        }<br />
    }
  </p><p> 위의 예에서 생성자 함수는<span class="inline"><span class="inline">Vector2</span> 구조체를 만드는 데 사용할 수 있으며 구조체에는 몇 가지 변수가 있습니다. 그 중 하나는 메서드 변수입니다. <span class="inline"><span class="inline">Add</span>. 이 변수는 정적으로 정의되었기 때문에 이 변수에 포함된 함수는 처음 <em>한 번만</em> 초기화됩니다. <span class="inline">Vector2</span> 함수가 호출되고 이 생성자로 생성된 모든 추가 구조체는 함수를 참조합니다. <span class="inline">Add</span> 각 구조체에 대해 새 함수를 만드는 대신 처음에 생성된 <span class="inline">constructor</span> 키워드는 여기를 참조 <a href="../Structs.htm">하십시오</a> ).</p><p> 생성자와 함께 상속을 사용할 때 자식 생성자의 정적 변수는 부모 생성자가 실행된 후에만 초기화되므로 자식 생성자의 정적 변수는 부모의 정적 변수를 재정의하지 않습니다. 다음 예를 참조하십시오.</p><p class="code">function Parent() constructor<br />
    {<br />
        show_debug_message(value);<br />
        static value = 10;<br />
    }<br />
    <br />
    function Child() : Parent() constructor<br />
    {<br />
        show_debug_message(value);<br />
        static value = 20;<br />
    }<br />
    <br />
    var _child = new Child();
  </p><p> 전화 걸기 <span class="inline">Child()</span> 생성자는 이것을 출력 로그에 출력합니다:</p><p class="code">10<br />
    20</p><p> 첫 번째 값은 부모 생성자에서 가져오고 두 번째 값은 자식 생성자에서 가져옵니다. 이것은 아이의 정적 변수가 <span class="inline">value</span> 부모 생성자가 완료될 때까지 초기화되지 않았으며 각 생성자에서 정적 변수가 <span class="inline">show_debug_message()</span> 전화. </p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="../GML_Overview.htm">GML 개요</a></div><div style="float:right"> 다음: <a data-xref="{title}" href="../Arrays.htm">어레이</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Static Variables
static
-->
  <!-- TAGS
static
-->
</body>
</html>