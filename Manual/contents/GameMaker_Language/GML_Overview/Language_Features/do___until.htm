<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>do / until</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="do / until 기능을 설명하는 페이지" />
  <meta name="rh-index-keywords" content="do,until" />
  <meta name="search-keywords" content="do,until" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>do / until</h1><p> ㅏ <span class="inline">do</span> 함수는 하나 이상의 <a class="glossterm" data-glossterm="성명" href="#">명령문을</a> <span class="glossextra">여러</span> 번 반복하는 또 다른 방법이며 실제로 &quot;<span class="inline">do... until</span> &quot; 특정 <a class="glossterm" data-glossterm="표현" href="#">표현식</a> 이 반환될 때까지 <span data-keyref="GameMaker Name">GameMaker</span> 에게 무언가를 하라고 지시하기 때문에 다른 하나 없이는 하나를 가질 수 없습니다. <span class="inline">true</span>. 다음과 같은 형식이 있습니다.</p><p class="code">do<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }<br />
    until (&lt;expression&gt;);</p><p> 명령문(중괄호 안에 있는 여러 명령문의 코드 블록일 수 있음 <span class="inline">{}</span> ) 표현식이 다음과 같이 발견될 때까지 실행됩니다. <span class="inline">true</span>, 그리고 초기 문장은 <strong>항상 적어도 한 번은 실행됩니다</strong>. 아래에서 일반적인 사용 방법의 예를 찾을 수 있습니다. <span class="inline">do... until</span>:</p><p class="code">do<br />
    {<br />
        x = random(room_width);<br />
        y = random(room_height);<br />
    }<br />
    until (place_free(x, y));</p><p> 위의 코드는 현재 객체를 자유 위치에 배치하려고 시도하고 x/ <a class="glossterm" data-glossterm="반복" href="#">y</a> <span class="glossextra">변수</span> 를 적어도 한 번 설정한 다음 <span class="inline">place_free()</span> 표현식 반환 <span class="inline">true</span>.</p><p> <strong>언제 사용해야합니까 <span class="inline">do</span> / <span class="inline">until</span> 고리?</strong> 하나 이상의 명령문을 반복하고 싶지만 실제로 몇 번을 반복해야 하는지 모르고 루프가 끝나기 전에 명령문이 <em>최소한 한 번</em> 실행되도록 하려는 경우에 사용해야 합니다.</p><p> 당신은 또한 사용할 수 있습니다<a href="break.htm"><span class="inline">break</span></a> 그리고<a href="continue.htm"><span class="inline">continue</span></a> 귀하의 진술 <span class="inline">do</span> 루프. 사용 <span class="inline">break</span> 루프를 즉시 종료하고 루프가 완료된 후 이벤트 또는 함수에 있는 코드로 이동합니다. 예:</p><p class="code">var _id = noone;<br />
    do<br />
    {<br />
        _id = list[| 0];<br />
        if (instance_exists(_id))<br />
        {<br />
            break;<br />
        }<br />
        ds_list_delete(list, 0);<br />
    }<br />
    until (ds_list_empty(list));<br />
    <br />
    target = _id;
  </p><p> 위의 코드에서 지역 변수를 만들고 키워드 <a href="../Instance_Keywords.htm"><span class="notranslate">noone</span></a> 을 유지하도록 설정합니다. 우리는 다음 수행 <span class="inline">do / until</span> 유효한 인스턴스 ID를 보유하고 있는지 확인하기 위해 DS 목록의 첫 번째 위치를 루프 확인하고 보유하고 있는 경우 <span class="inline">break</span> 루프, 그렇지 않으면 목록 위치에 대한 값이 삭제됩니다. 루프가 종료된 후( <span class="inline">break</span> 또는 목록이 비어 있기 때문에) 지역 변수 값이 인스턴스 변수에 할당됩니다. <span class="inline">target</span>.</p><p> 에서 계속을 사용하는 예 <span class="inline">do / until</span> 루프는 다음과 같습니다.</p><p class="code">do<br />
    {<br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
    <br />
        if (instance_position(_x, _y, obj_Enemy))<br />
        {<br />
            continue;<br />
        }<br />
    <br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }<br />
    until (instance_count(obj_Enemy) &gt;= 10);</p><p> 이 코드는 임의의 방 위치를 생성한 다음 개체의 인스턴스가 <span class="inline">obj_Enemy</span> 그 위치에 존재합니다. 그렇다면 현재 루프 반복은 다음을 사용하여 종료됩니다. <span class="inline">continue</span> 새 반복이 시작되고 시작되지 않으면 개체의 인스턴스 <span class="inline">obj_Enemy</span> 임의의 위치에 생성됩니다. 루프는 룸에 10개 이상의 개체 인스턴스가 있을 때만 종료됩니다.</p><p> 마지막 참고 사항: <span class="inline">do</span> 루프를 영원히 반복할 수 있으므로 게임이 중단되고 더 이상 사용자 입력에 반응하지 않으며 게임을 강제 종료해야 합니다.</p><p> 루프 키워드의 더 많은 예는 섹션을 참조하십시오.<a href="repeat.htm"><span class="inline">repeat</span></a>,<a href="while.htm"><span class="inline">while</span></a>, 그리고<a href="for.htm"><span class="inline">for</span></a>. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="../Language_Features.htm">언어 기능</a></div><div style="float:right"> 다음 <a href="for.htm"><span class="notranslate">for</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
do
until
-->
  <!-- TAGS
do
until
-->
</body>
</html>