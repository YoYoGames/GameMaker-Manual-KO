<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>if / else and Conditional Operators</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="If / Else 및 조건부 연산자를 설명하는 페이지" />
  <meta name="rh-index-keywords" content="?,if,else,삼항 연산자,then" />
  <meta name="search-keywords" content="if,else,then,?,세 개 한 벌,가정 어구" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> if / else 및 조건부 연산자</h1><p> 대부분의 프로그래밍 언어의 기본 기능은 부울 값을 제공하는 간단한 질문을 할 수 있다는 것입니다. <span class="inline">true</span> 또는 <span class="inline">false</span> 대답하고 GML에서 이것은 다음을 사용하여 달성됩니다. <span class="inline">if</span> 예어. 간단한 <span class="inline">if</span> 조건은 표현식을 취하고 <a class="glossterm" data-glossterm="표현" href="#">표현식</a> 이 다음과 같이 해결되는 경우 하나 이상의 <a class="glossterm" data-glossterm="성명" href="#">명령문</a> 을 수행 <span class="glossextra">합니다</span>. <span class="inline">true</span>, 다음 기본 형식:</p><p class="code">if (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p><p><br /> 여기에서 표현이 다음과 같이 해결되면 <span class="inline">true</span> 그런 다음 무언가를하십시오. 조건의 &quot;then&quot; 부분은 <em>암시적이</em> 지만 <span class="inline">then</span> (거의 항상 생략되지만) 사용할 수 있는 키워드이므로 다음과 같은 조건문을 만들 수도 있습니다.</p><p class="code">if (&lt;expression&gt;) then<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p><p> 와는 별개로 <span class="inline">if</span> 그리고 <span class="inline">then</span>, 당신은 또한 사용할 수 있습니다 <span class="inline">else</span> 검사 중인 표현식이 다음과 같이 평가되는 경우 다른 작업을 수행하는 키워드<span class="inline">false</span>. 이 &quot;<span class="inline">if... then... else...</span> &quot; 형식은 다음과 같습니다.</p><p class="code">if (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
    }<br />
    else<br />
    {<br />
        &lt;statement&gt;;<br />
    }</p><p> 이 경우 표현식이 평가되고 다음과 같이 평가되면 <span class="inline">false</span>, 다음 문장 <span class="inline">else</span> 가 실행되고 그렇지 않으면 초기 문이 실행됩니다( <span class="inline">true</span> ).</p><p class="note"> <span class="note">참고</span> GameMaker 언어에서 0보다 작거나 같은 값은 다음과 같이 평가됩니다. <span class="inline">false</span>, 0보다 큰 값은 다음과 같이 평가됩니다. <span class="inline">true</span>.</p><p> 표현식 주위에는 항상 괄호를 사용하고 문장 주위에는 중괄호 {}를 사용하는 것이 좋은 습관입니다. <span class="inline">if</span> (그렇지 않으면 첫 번째 명령문만 실행됨) 각 명령문에 대해 블록에서 새 줄을 사용합니다. 예를 들면 다음과 같습니다.</p><p class="code">// This will work<br />
    if &lt;expression&gt; &lt;statement&gt;;<br />
    <br />
    // Example:<br />
    if test == true variable = false else variable = true;
  </p><p class="code">// This is better<br />
    if (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;<br />
    }<br />
    else<br />
    {<br />
        &lt;statement&gt;<br />
    }<br />
    <br />
    // Example<br />
    if (test == true)<br />
    {<br />
        variable = false;<br />
    }<br />
    else<br />
    {<br />
        variable = true;<br />
    }
  </p><p> 이것은 약간 더 장황하지만 코드에 모호함이 없고 항상 모든 플랫폼에서 올바르게 컴파일된다는 것을 의미합니다. 그러나 <a href="../Expressions_And_Operators.htm">표현식 및 연산자</a> 페이지의 섹션에 설명된 대로 초기 예제는 그렇지 않을 수 있습니다.</p><p class="note"> <strong>참고</strong>: 두 값을 비교하여 동일한지 확인하려면 &quot;<span class="inline">==</span> &quot; 연산자를 사용하고 &quot;<span class="inline">=</span> &quot; 할당을 위한 것입니다. 현재 GameMaker는 이들을 상호 교환 가능한 것으로 취급하지만, 이는 미래에 변경될 수 있으며 비교 및 할당을 위해 올바른 연산자를 사용할 때 코드가 더 깨끗하고 명확해집니다.</p><p> 사용의 적절한 예를 제공하려면 <span class="inline">if</span>, 인스턴스를 위치로 이동하는 다음 코드를 고려하십시오. <span class="inline">x=200</span> 단계 이벤트에 배치될 때 방에서:</p><p class="code">if (x &lt; 200)<br />
    {<br />
        x += 4;<br />
    }<br />
    else<br />
    {<br />
        x = 200;<br />
    }</p><p> 에서 <i>복합</i> 검사를 수행할 수도 있습니다. <span class="inline">if</span>, ie: 같은 문장에서 다양한 값이나 표현을 확인합니다. 이러한 검사는 다양한 <a href="../Expressions_And_Operators.htm">결합 연산자</a> (<span class="inline">&amp;&amp;</span> 그리고, <span class="inline">||</span> 또는 <span class="inline">^^</span> xor). 이렇게 하면 <span data-keyref="GameMaker Name">GameMaker</span> 가 각 항목을 한 번에 하나씩 평가하고 평가 방법에 따라 나머지는 건너뛸 수 있습니다. 예를 들어:</p><p class="code">if (keyboard_check_pressed(vk_enter)) &amp;&amp; (instance_exists(obj_Player))<br />
    {<br />
        go = false;<br />
        alarm[0] = room_speed;<br />
    }</p><p> 여기에서 우리는 다음을 사용하여 확인하고 있습니다. <span class="inline">&amp;&amp;</span> &quot;and&quot; 연산자이므로 두 조건이 <em>모두</em> <span class="inline">if</span> 평가하다 <span class="inline">true</span>, 그리고 첫 번째 경우 <span class="inline">false</span> 두 번째 것은 확인조차 되지 않습니다. 이것을 코드 &quot;단락&quot;이라고 합니다. 따라서 확인하기 위해 표현식을 결합할 때 성능에 대해 &quot;가장 저렴한&quot; 것이 항상 첫 번째로 평가되는 경우 더 비싼 것을 평가하지 않도록 해야 합니다. <span class="inline">false</span>. 비슷한 맥락에서 조건이 다음과 같이 평가될 수 있다면<span class="inline">true</span> 또는 <span class="inline">false</span> 컴파일 시간에 전체 조건이 코드에서 제거됩니다. 예를 들어 <a href="../Variables/Constants.htm">매크로</a> 가 있다고 가정해 보겠습니다. <span class="inline">DEBUG_ON </span> 디버깅을 위해 다음 중 하나가 될 수 있습니다. <span class="inline">true</span> 또는 <span class="inline">false</span> - 로 설정되었을 때 <span class="inline">false</span> 다음 코드 블록은 컴파일될 때 게임에서 제거됩니다.</p><p class="code">if DEBUG_ON == true<br />
    {<br />
        show_debug_message(&quot;Instances = &quot; + string(instance_count));<br />
    }</p><p> 기본적으로 기본적으로 수행하는 &quot;바로 가기&quot; 방법인 <b>조건부 연산</b> ( <b>삼항</b> 연산이라고도 함)을 수행할 수도 있습니다. <span class="inline">if</span>. 다음 구문이 있습니다.</p><p class="code">variable = &lt;condition&gt; ? &lt;statement1 (if <i>true</i>)&gt; : &lt;statement2 (if <i>false</i>)&gt;</p><p> 조건 연산자 &quot;<span class="inline">?</span> &quot;는 조건식이 다음과 같이 평가되는지 여부에 따라 주어진 두 값 중 하나를 반환합니다. <span class="inline">true</span> 또는 <span class="inline">false</span>, 예를 들어:</p><p class="code">var temp_x = (x &lt; (room_width / 2)) ? 32 : (room_width - 32);</p><p> 위의 코드는 &quot;x&quot; 값을 방 너비의 절반 값과 비교한 다음 더 작으면 &quot;x&quot; 값을 설정합니다.<span class="inline">temp_x</span> &quot; 그렇지 않으면 32 &quot;<span class="inline">temp_x</span> &quot;는 방 너비 - 32입니다. 다음은 몇 가지 사용 예입니다.</p><p class="code">draw_text(x, y, &quot;The fee is &quot; + (global.Member ? &quot;$2.00&quot; : &quot;$10.00&quot;));<br />
    path_start(((global.level &gt; 10) ? path_hard : path_easy;), 2, path_action_reverse, true);<br />
    (--hp &lt;= 0) ? instance_destroy() : score += 10;</p><p> 조건부 연산을 중첩할 수 있지만 그렇게 하면 각 연산을 대괄호로 묶어야 합니다. 예를 들면 다음과 같습니다. </p><p class="code">var c = a ? &quot;foo&quot; : (b ? &quot;bar&quot; : &quot;whee&quot;); // Correct<br />
    var c = a ? &quot;foo&quot; : b ? &quot;bar&quot; : &quot;whee&quot;;   // Will cause an error</p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a data-xref="{title}" href="../GML_Overview.htm">GML 개요</a></div><div style="float:right"> 다음: <a data-xref="{title}" href="../Addressing_Variables_In_Other_Instances.htm">다른 인스턴스의 변수 주소 지정</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
if
else
then
ternary operators
conditional operators
-->
  <!-- TAGS
if
else
then
-->
</body>
</html>