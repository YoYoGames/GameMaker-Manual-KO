<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>file_text_write_real</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="file_text_write_real에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="file_text_write_real" />
  <meta name="search-keywords" content="file_text_write_real" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>file_text_write_real</h1><p> 이 기능을 사용하면 이전에 열린 텍스트 파일에 숫자를 쓸 수 있습니다. 기록할 값은 실수일 수 있으므로 모든 소수는 &quot;.&quot;로 기록됩니다. 점을 구분자로 지정합니다. 파일에 이미 정보가 포함되어 있으면 이 정보가 지워지고 파일을 열지 않는 한 파일 시작 부분에 문자열이 기록됩니다.<a href="file_text_open_append.htm"><span class="inline">file_text_open_append()</span></a>. 당신은 또한 사용하여 이것을 피할 수 있습니다<a href="file_text_readln.htm"><span class="inline">file_text_readln()</span></a> 와 함께 기능<a href="file_text_eof.htm"><span class="inline">file_text_eof()</span></a> 파일의 내용을 끝까지 반복한 다음 쓰기를 시작하는 함수입니다.</p><p> 이 기능을 사용하여 텍스트 파일에 매우 큰 숫자를 쓸 때 &quot;6.6624e+003&quot;과 같이 <span data-keyref="GameMaker Name">GameMaker</span> 에서 올바르게 다시 읽을 수 없는 표준 단순화 형식으로 변환될 수 있다는 점에 유의하는 것이 중요합니다. 이와 같은 문제를 방지하려면 대신 값을 문자열로 변환하고 함수를 사용해야 합니다.<a href="file_text_write_string.htm"><span class="inline">file_text_write_string()</span></a> 대신에.</p><p></p><h4> 통사론:</h4><p class="code">file_text_write_real(fileid, val);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">fileid</span></td><td><span data-keyref="Type_ID_File_Text"></span></td><td> <span class="notranslate">The id of the file to edit.</span></td></tr><tr><td> <span class="notranslate">val</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The real value to write to the file.</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Real"></span></p><p></p><h4> 예시:</h4><p class="code">var file = file_text_open_write(working_directory + &quot;hiscore.txt&quot;);<br />
    for (var i = 0; i &lt; 10; ++i;)<br />
    {<br />
        file_text_write_real(file, scr[i]);<br />
        file_text_writeln(file);<br />
        file_text_write_string(file, scr_name[i]);<br />
        file_text_writeln(file);<br />
    }<br />
    file_text_close(file);</p><p> 위의 코드는 쓰기 위해 파일을 연 다음 두 개의 배열을 반복하여 각 배열 값을 파일의 새 줄에 씁니다. 그런 다음 루프가 완료되면 파일이 닫힙니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Text_Files.htm">텍스트 파일</a></div><div style="float:right"> 다음: <a href="file_text_write_string.htm"><span class="notranslate">file_text_write_string</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
file_text_write_real
-->
  <!-- TAGS
file_text_write_real
-->
</body>
</html>