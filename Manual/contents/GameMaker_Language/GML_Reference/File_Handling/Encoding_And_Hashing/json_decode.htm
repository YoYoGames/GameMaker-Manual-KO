<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_decode</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="json_decode에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="json_decode" />
  <meta name="search-keywords" content="json_decode" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>json_decode</h1><h3> <strong>중요한!</strong> 이 기능은 여전히 유효하지만 기능으로 대체되었습니다. <span class="inline"><a href="json_parse.htm">json_parse()</a></span>, 이 기능은 레거시 지원에만 사용하는 것이 좋습니다.</h3><p> JSON(JavaScript Object Notation)은 사람과 기계 모두에서 읽고 쓰기 쉬운 경량 데이터 교환 형식입니다. 두 가지 기본 구조를 기반으로 합니다.</p><ul class="colour"><li> 라고 하는 이름/값 쌍의 모음<a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> <span data-keyref="GameMaker Name">GameMaker</span> 에 있지만 &quot;사전&quot; 또는 &quot;객체&quot;라고도 합니다.</li><li> 라고 하는 정렬된 값 목록<a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><span class="inline">DS List</span></a> <span data-keyref="GameMaker Name">GameMaker</span> 에 있지만 &quot;배열&quot; 또는 &quot;시퀀스&quot;라고도 합니다.</li></ul><p> 이 기능을 사용하면 JSON 조각을 디코딩하여 다음으로 변환할 수 있습니다. <span class="inline">DS Map</span>, <span data-keyref="GameMaker Name">GameMaker</span> 에서 사용할 준비가 되었습니다. 디코딩할 JSON이 중앙 DS 맵 내의 목록 및 맵 계층 구조를 필요로 하는 경우 다음 규칙을 사용하여 이들도 디코딩되고 생성됩니다(이 규칙은 최상위 구조에만 적용됨).</p><ul class="colour"><li> <strong><i>JSON은 단일 값입니다. 값인</i></strong> 단일 항목 &quot;기본값&quot;이 있는 DS 맵을 반환합니다.</li><li> <strong><i>JSON은 개체 또는 값의 배열입니다. 개체 또는 값</i></strong> 의 DS 목록인 단일 항목 &quot;기본값&quot;이 있는 DS 맵을 반환합니다.</li><li> <strong><i>JSON은 개체</i></strong> 입니다. 개체 항목이 포함된 DS 맵을 반환합니다.</li></ul><p class="note"> <b>참고</b>: JSON 배열을 디코딩할 때 배열이 최상위 구조인 경우에만 &quot;default&quot; 키가 있는 맵이 있으며 해당 최상위 배열에만 해당합니다. 내부 목록은 DS 맵에 포함되지 않고 DS 맵으로 직접 디코딩됩니다.</p><p class="note"> <strong>참고</strong>: GameMaker 어레이를 최상위 레벨에 작성했거나 DS 맵 또는 DS 목록의 내용으로 작성한 경우 어레이가 <strong>아닌</strong> DS 목록으로 디코딩됩니다.</p><p> 일반적으로 JSON이 디코딩하는 키를 알고 있지만 그렇지 않은 경우 사용할 수 있습니다.<a href="../../Data_Structures/DS_Maps/ds_map_size.htm"><span class="inline">ds_map_size()</span></a>,<a href="../../Data_Structures/DS_Maps/ds_map_find_first.htm"><span class="inline">ds_map_find_first()</span></a> 그리고<a href="../../Data_Structures/DS_Maps/ds_map_find_next.htm"><span class="inline">ds_map_find_next()</span></a> 지도를 구문 분석하고 필요한 정보를 얻는 기능.</p><p class="note"> <b>참고</b>: <span data-keyref="GameMaker Name">GameMaker</span> 는 JSON에서 필요한 DS 맵과 목록을 생성하고, 정리를 위해 <b>최상위</b> 맵 또는 목록만 삭제하면 <span data-keyref="GameMaker Name">GameMaker</span> 는 메모리에서 그 아래의 모든 맵과 목록을 자동으로 삭제합니다.</p><p class="note"> <strong>참고</strong>: 이 기능을 사용하면 최대 중첩 제한이 128인 JSON 파일을 로드할 수 있습니다.</p><p class="note"> <b>중요</b>: JSON 형식으로 처리되지 않기 때문에 올바르게 작동하지 않기 때문에 JSON에 64비트 숫자를 가질 수 없습니다.</p><p></p><h4> 통사론:</h4><p class="code">json_decode(string)</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td><td> <span class="notranslate">The JSON format string that you are passing to the function for decoding</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_ID_DS_Map">DS Map ID</span> or -1 (if it fails)</p><p></p><h4> 예시:</h4><p class="code">var resultMap = json_decode(requestResult);<br />
    var list = ds_map_find_value(resultMap, &quot;default&quot;);<br />
    var size = ds_list_size(list);<br />
    for (var n = 0; n &lt; ds_list_size(list); n++;)<br />
    {<br />
        var map = ds_list_find_value(list, n);<br />
        var curr = ds_map_find_first(map);<br />
        while (is_string(curr))<br />
        {<br />
            global.Name[n] = ds_map_find_value(map, &quot;name&quot;);<br />
            curr = ds_map_find_next(map, curr);<br />
        }<br />
    }<br />
    ds_map_destroy(resultMap);</p><p> 위의 코드는 JSON 문자열을 디코딩하고 구문 분석하여 전역 배열을 생성합니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Encoding_And_Hashing.htm">파일 인코딩</a></div><div style="float:right"> 다음: <a href="json_stringify.htm"><span class="notranslate">json_stringify</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
json_decode
-->
  <!-- TAGS
json_decode
-->
</body>
</html>