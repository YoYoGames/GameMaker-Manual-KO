<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sha1_string_unicode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="sha1_string_unicode에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="sha1_string_unicode" />
  <meta name="search-keywords" content="sha1_string_unicode" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>sha1_string_unicode</h1><p> 암호화 분야에서 SHA-1은 미국 <i>국가안보국(National Security Agency)</i> 에서 설계한 암호화 해시 함수이며 파일 변경 사항을 확인하는 데 사용되는 인기 있는 <b>Git</b> 과 같이 널리 사용되는 여러 응용 프로그램 및 프로토콜에 사용됩니다. 이 함수는 입력 유니코드 문자열을 사용하여 ASCII 형식의 160비트 메시지 다이제스트를 반환합니다. 예를 들면 다음과 같습니다.</p><p class="code">sha1 input string = &quot;The quick brown fox jumps over the lazy dog&quot;<br/> sha1 output hash = &quot;2fd4e1c6 7a2d28fc ed849ee1 bb76e739 1b93eb12&quot;</p><p> 이러한 방식으로 저장하고 외부 서버(예: 외부 서버)로 보내거나 받는 정보의 무결성을 확인하는 데 사용할 수 있는 보안 키를 생성할 수 있습니다.</p><p class="note"> <b>참고</b>: sha1 인코딩에는 UTF-8 및 유니코드의 두 가지 형식이 있습니다. 둘 다 서로 다른 서버 설정과의 통신을 용이하게 하기 위해 제공되지만 가장 일반적으로 사용되는 것은 유니코드입니다.</p><p class="note"> <strong>참고</strong>: SHA-1은 완전히 안전하지 않으며 깨질 수 있습니다. 자세한 내용은 <a href="https://en.wikipedia.org/wiki/SHA-1">이 페이지</a> 를 참조하세요.</p><p></p><h4> 통사론:</h4><p class="code">sha1_string_unicode(string)</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td><td> <span class="notranslate">The string to hash.</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_String"></span></p><p></p><h4> 예시:</h4><p class="code">var hash, str;<br/> str = base64_encode(game_data);<br/> hash = sha1_string_unicode(str);<br/> http_get(&quot;http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?hash=&quot; + hash); http_get(&quot;http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?data=&quot;
    + str);</p><p> 위의 코드는 문자열을 base64로 인코딩한 다음 sha1 해시를 생성합니다. 마지막으로 해시와 인코딩된 문자열이 모두 서버로 전송됩니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Encoding_And_Hashing.htm">파일 인코딩</a></div><div style="float:right"> 다음: <a href="sha1_file.htm"><span class="notranslate">sha1_file</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
sha1_string_unicode
-->
  <!-- TAGS
sha1_string_unicode
-->
</body>
</html>