<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_get_tex_mip_filter_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="함수 gpu_get_tex_mip_filter_ext에 대한 참조" />
  <meta name="rh-index-keywords" content="gpu_get_tex_mip_filter_ext,tf_point,tf_linear,tf_anisotropic" />
  <meta name="search-keywords" content="gpu_get_tex_mip_filter_ext,tf_point,tf_linear,tf_anisotropic" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>gpu_get_tex_mip_filter_ext</h1><p> 이 함수를 사용하면 주어진 셰이더 샘플러에 대한 현재 밉 필터 모드를 얻을 수 있습니다. 셰이더 샘플러에 대한 인덱스 값을 제공합니다(함수에서 반환된 <a href="../../Asset_Management/Shaders/shader_get_sampler_index.htm"><span class="inline">shader_get_sampler_index()</span></a>, 그리고 함수는 아래 나열된 모드 값 상수 중 하나를 반환합니다.</p><p></p><h4> 통사론:</h4><p class="code">gpu_get_tex_mip_filter_ext(sampler_index);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">sampler_index</span></td><td><span data-keyref="Type_Handle_Shader_Sampler"></span></td><td> <span class="notranslate">The index of the shader sampler to get</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Constant_Mipmapping_Filter">Mipmapping Filter Constant</span> (listed below):</p><table><tbody><tr><th> 일정한</th><th> 설명</th></tr><tr><td> <span class="notranslate">tf_point</span></td><td> 즉, 밉맵 수준 간의 혼합이 비활성화되어 시각적 텍스처 전환이 발생할 수 있지만 최상의 성능을 제공합니다.</td></tr><tr><td> <span class="notranslate">tf_linear</span></td><td> 즉, 밉맵 수준 간의 혼합이 활성화되어(이를 <i>삼선형 필터링</i> 이라고도 함) 텍스처 전환을 부드럽게 하지만 성능에는 약간의 영향을 줍니다.</td></tr><tr><td> <span class="notranslate">tf_anisotropic</span></td><td> 즉, 이방성 필터링이 활성화되어 텍스처 전환 품질이 크게 향상되고 다른 필터링 모드에서 볼 수 있는 흐림 현상을 줄일 수 있지만 성능에 가장 큰 영향을 미칩니다.</td></tr></tbody></table><p></p><p></p><h4> 예시:</h4><p class="code">var _sampleIndex = shader_get_sampler_index(shd_Glass, &quot;s_Background&quot;);<br />
    var _spriteTex = sprite_get_texture(sprite_index, 0);<br />
    shader_set(shd_Glass);<br />
    if (gpu_get_tex_mip_filter_ext(_sampleIndex) != tf_point) <br />
    {<br />
        gpu_set_tex_mip_filter_ext(_sampleIndex, tf_point);<br />
    }<br />
    texture_set_stage(_sampleIndex , _spriteTex);<br />
    shader_reset();</p><p> 위의 코드는 밉 필터 모드를 다음으로 설정합니다. <span class="inline">tf_point</span> (mipmapping 비활성화) 주어진 셰이더 텍스처 샘플러가 아직 설정되지 않은 경우. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Mipmapping.htm">밉매핑</a></div><div style="float:right"> 다음: <a href="gpu_get_tex_mip_bias.htm"><span class="notranslate">gpu_get_tex_mip_bias</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gpu_get_tex_mip_filter_ext
tf_point
tf_linear
tf_anisotropic
-->
  <!-- TAGS
gpu_get_tex_mip_filter_ext
-->
</body>
</html>