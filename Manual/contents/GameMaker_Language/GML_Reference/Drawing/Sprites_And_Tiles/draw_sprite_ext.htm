<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>draw_sprite_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="draw_sprite_ext에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="draw_sprite_ext" />
  <meta name="search-keywords" content="draw_sprite_ext" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>draw_sprite_ext</h1><p> 이 함수는 함수에서와 같이 주어진 스프라이트를 그립니다.<a href="draw_sprite.htm"><span class="inline">draw_sprite()</span></a> 그러나 그려지는 스프라이트의 크기, 혼합, 회전 및 알파를 변경하는 추가 옵션이 있습니다. 이 값을 변경해도 리소스는 어떤 식으로든 수정되지 <i>않으며</i> (그리는 방법만), 함수의 모든 인수에 대한 직접 값 대신 사용 가능한 <a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/Sprite_Instance_Variables.htm">스프라이트 변수</a> 를 사용할 수 있습니다. 아래 이미지는 다양한 값이 스프라이트 그리기에 어떤 영향을 미치는지 보여줍니다. </p><p><img alt="sraw_sprite_ext examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/spr_ext.png" /></p><p id="p"><span data-conref="../../../../assets/snippets/This_function_supports_nineslice.hts"> </span></p><p class="note"><b>참고</b>: 색상 혼합은 WebGL이 활성화된 경우에만 HTML5 대상에 대해 권장되지만 활성화되지 않은 경우 혼합 색상을 설정할 수 있으며 스프라이트가 정상적으로 혼합됩니다. 그러나 이러한 방식으로 모든 블렌딩은 중복 스프라이트를 생성한 다음 캐시에 저장하고 필요할 때 사용합니다. 이것은 최적이 아니며 여러 색상 변경을 사용하는 경우 WebGL을 활성화하지 않는 한 게임 성능이 느려집니다. WebGL을 사용하지 않으려면 글꼴 캐시 크기를 설정하여 기능을 사용하여 필요한 경우 이를 제한할 수 있습니다. <span style="font-size:1px;"><a href="../../Asset_Management/Sprites/Sprite_Manipulation/sprite_set_cache_size_ext.htm"><span class="inline">sprite_set_cache_size()</span></a></span>.</p><p class="note"> <b>참고</b>: 이 함수는 스켈레톤 애니메이션 스프라이트를 사용할 때 예상대로 작동하지 않을 수 있으며 함수가 기본 포즈의 첫 번째 프레임만 그리는 것을 알 수 있습니다. 당신은 사용하고 있어야합니다 <span class="inline">draw_skeleton_*</span> 대신 기능.</p><p></p><h4> 통사론:</h4><p class="code">draw_sprite_ext( sprite, subimg, x, y, xscale, yscale, rot, colour, alpha );</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">sprite</span></td><td><span data-keyref="Type_Asset_Sprite"></span></td><td> <span class="notranslate">The index of the sprite to draw.</span></td></tr><tr><td> <span class="notranslate">subimg</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object).</span></td></tr><tr><td> <span class="notranslate">x</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The x coordinate of where to draw the sprite.</span></td></tr><tr><td> <span class="notranslate">y</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The y coordinate of where to draw the sprite.</span></td></tr><tr><td> <span class="notranslate">xscale</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc...</span></td></tr><tr><td> <span class="notranslate">yscale</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The vertical scaling of the sprite as a multiplier: 1 = normal scaling, 0.5 is half etc...</span></td></tr><tr><td> <span class="notranslate">rot</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The rotation of the sprite. 0=right way up, 90=rotated 90 degrees counter-clockwise etc...</span></td></tr><tr><td> <span class="notranslate">colour</span></td><td><span data-keyref="Type_Constant_Colour"></span></td><td> <span class="notranslate">The colour with which to blend the sprite. <span class="inline">c_white</span> is to display it normally.</span></td></tr><tr><td> <span class="notranslate">alpha</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque).</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Void"></span></p><p></p><h4> 예시:</h4><p class="code">draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);</p><p> 이것은 모든 기본값을 사용하여 스프라이트에 할당된 인스턴스를 그립니다(본질적으로 다음을 사용하는 것과 동일합니다). <span class="inline">draw_self</span> ). </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Sprites_And_Tiles.htm">스프라이트 및 타일</a></div><div style="float:right"> 다음: <a href="draw_sprite_general.htm"><span class="notranslate">draw_sprite_general</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
draw_sprite_ext
--><!-- TAGS
draw_sprite_ext
--></body>
</html>