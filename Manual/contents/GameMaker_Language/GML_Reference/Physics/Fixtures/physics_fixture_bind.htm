<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_bind</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="physical_fixture_bind에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="physics_fixture_bind" />
  <meta name="search-keywords" content="physics_fixture_bind" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>physics_fixture_bind</h1><p> 고정물을 정의한 후에는 인스턴스에 바인딩해야 합니다. 이것은 그 <i>속성</i> 이 <b>실제 조명기 자체가 아니라</b> 선택된 인스턴스로 전송된다는 것을 의미하므로 모두가 동일한 속성을 가지려면 하나의 조명기가 여러 인스턴스에 바인딩될 수 있습니다. 대상에 대한 객체 인덱스를 지정할 수 있으며 그 시간에 방에 있는 모든 인스턴스는 조명기 속성(나중에 생성된 객체의 새 인스턴스는 아님)을 수신하거나 특수 키워드 <i>other</i> 및 <i>all</i> 을 사용할 수 있습니다. 부모 개체를 지정할 수도 있으며 해당 부모가 있는 모든 자식 인스턴스도 조명기를 받습니다. 설비가 필요한 모든 인스턴스에 바인딩되면 더 이상 필요하지 않은 경우 삭제할 수 있으며 해당 설비 속성이 있는 인스턴스는 영향을 받지 않고 해당 속성을 유지합니다.</p><p> 고정 장치는 질량 중심이 인스턴스의 원점에 위치하도록 인스턴스에 바인딩되고 다각형 고정 장치는 원점을 <i>기준으로</i> 점의 위치를 기반으로 바인딩됩니다. 고정물이 원점 이외의 다른 지점에 바인딩되어야 하는 경우 다음을 사용해야 합니다.<a href="physics_fixture_bind_ext.htm"><span class="inline">physics_fixture_bind_ext()</span></a>.</p><p><img alt="Physics fixture binding example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_bind_image.png" /> 이 함수는 또한 <i>바인딩된</i> 고정 장치에 대해 고유한 &quot;id&quot; 값을 반환합니다( <b>고정 장치 자체가</b> 아님). 이 값은 함수를 사용하여 인스턴스에서 물리적 속성을 제거(&quot;결합 해제&quot;)하는 데 사용할 수 있습니다.<a href="physics_remove_fixture.htm"><span class="inline">physics_remove_fixture()</span></a>. 이를 통해 객체를 파괴하고 다시 생성하지 않고도 인스턴스에서 물리적 속성을 추가 및 제거할 수 있습니다.</p><p class="note"> <b>참고</b>: 더 이상 필요하지 않을 때 고정 장치를 삭제해야 합니다. 삭제하지 않으면 메모리 누수가 발생하여 속도가 느려지고 결국 게임이 중단될 수 있습니다.</p><p></p><h4> 통사론:</h4><p class="code">physics_fixture_bind(fixture, target)</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">fixture</span></td><td> <span data-keyref="Type_ID_PhyFixture">피직스 픽스처 ID</span></td><td> <span class="notranslate">The fixture that is to be bound</span></td></tr><tr><td> <span class="notranslate">target</span></td><td> <span data-keyref="Type_ID_Instance">인스턴스 ID</span> 또는 <span data-keyref="Type_Asset_Object">개체 자산</span></td><td> <span class="notranslate">The target instance that is to receive the fixture (can be an instance id, an object id, <i>other</i>, or <i>all</i> )</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Real">Real</span></p><p></p><h4> 예시:</h4><p class="code">var fix, inst;<br />
    fix = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(fix, 16);<br />
    physics_fixture_set_density(fix, 1.0);<br />
    inst = instance_create_layer(x, y, &quot;Instances&quot;, genericBodyObject);<br />
    my_fix = physics_fixture_bind(fix, inst);<br />
    physics_fixture_delete(fix);</p><p> 위의 코드는 고정물을 만들고 인덱스를 변수 &quot;fix&quot;에 할당합니다. 그런 다음 &quot;my_fix&quot; 변수에 저장된 <b>바인딩된</b> 고정 장치에 대한 인덱스로 생성된 인스턴스에 바인딩하기 전에 고정 장치의 모양과 밀도를 정의합니다. 마지막으로 조명기가 더 이상 필요하지 않으므로 메모리 누수를 방지하기 위해 삭제됩니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Fixtures.htm">비품</a></div><div style="float:right"> 다음: <a href="physics_fixture_bind_ext.htm"><span class="notranslate">physics_fixture_bind_ext</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_bind
-->
  <!-- TAGS
physics_fixture_bind
-->
</body>
</html>