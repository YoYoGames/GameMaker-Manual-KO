<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_pulley_create</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="physical_joint_pulley_create에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="physics_joint_pulley_create" />
  <meta name="search-keywords" content="physics_joint_pulley_create" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>physics_joint_pulley_create</h1><p> 도르래 조인트는 하나를 움직이면 다른 하나의 움직임에 직접적인 영향을 주는 방식으로 물리 세계 내에서 두 인스턴스를 연결하는 데 사용됩니다. 이러한 관절은 먼저 두 지점에서 표준 공간에 고정되며 각 지점은 질량 중심의 인스턴스에 연결됩니다. 이것은 인스턴스의 원점에 상대적인 로컬 앵커 x/y 좌표를 설정하여 변경할 수 있습니다. 즉, 인스턴스에서 물리적 세계 앵커 포인트까지의 실제 연결은 원점이 아닌 다른 곳에서 오프셋될 수 있습니다. 다음 이미지는 이를 보여줍니다.</p><p><img alt="Pulley joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/pulley_joint_image.png" /> inst2를 보면 로컬 앵커 포인트가 원점의 &quot;왼쪽&quot;으로 20픽셀 오프셋되었음을 알 수 있습니다(기억하십시오! 월드 앵커 포인트는 공간 좌표를 사용하여 정의되는 반면 로컬 앵커 포인트는 인스턴스의 출처). 또한 도르래 조인트에 대한 비율을 지정할 수 있습니다. 이 비율은 한쪽 또는 다른 쪽이 더 빠르게 움직이도록 지정합니다. 값이 1 미만이면 첫 번째 인스턴스가 더 빠르게 이동하고(EG 0.5는 두 배 빠르게 이동) 1보다 큰 값은 두 번째 인스턴스가 더 빠르게 이동합니다(EG 2는 두 배 빠르게 이동합니다).</p><p> 모든 관절과 마찬가지로 &quot;col&quot; 값을 다음으로 설정하면 <span class="inline">true</span> 두 인스턴스는 서로 상호 작용하고 충돌할 수 있지만 충돌 이벤트가 있는 경우 <i>에만</i> 가능합니다. <span class="inline">false</span>, 그들은 무슨 일이 있어도 충돌하지 않습니다.</p><p></p><h4> 통사론:</h4><p class="code">physics_joint_pulley_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, l_anchor1_x, l_anchor1_y, l_anchor2_x, l_anchor2_y, ratio, col)</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">inst1</span></td><td> <span data-keyref="Type_ID_Instance">인스턴스 ID</span></td><td> <span class="notranslate">The first instance to connect with the joint</span></td></tr><tr><td> <span class="notranslate">inst2</span></td><td> <span data-keyref="Type_ID_Instance">인스턴스 ID</span></td><td> <span class="notranslate">The second instance to connect with the joint</span></td></tr><tr><td> <span class="notranslate">w_anchor1_x</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The x coordinate where the first part of joint is anchored, within the game world</span></td></tr><tr><td> <span class="notranslate">w_anchor1_y</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The y coordinate where the first part of the joint is anchored, within the game world</span></td></tr><tr><td> <span class="notranslate">w_anchor2_x</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The x coordinate where the second part of the joint is anchored, within the game world</span></td></tr><tr><td> <span class="notranslate">w_anchor2_y</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The y coordinate where the second part of the joint is anchored, within the game world</span></td></tr><tr><td> <span class="notranslate">l_anchor1_x</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The local x coordinate where joint 1 is anchored to the first instance</span></td></tr><tr><td> <span class="notranslate">l_anchor1_y</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The local y coordinate where joint 1 is anchored to the first instance</span></td></tr><tr><td> <span class="notranslate">l_anchor2_x</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The local x coordinate where joint 2 is anchored to the second instance</span></td></tr><tr><td> <span class="notranslate">l_anchor2_y</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The local y coordinate where joint 2 is anchored to the second instance</span></td></tr><tr><td> <span class="notranslate">ratio</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">Set the velocity ratio between two instances</span></td></tr><tr><td> <span class="notranslate">col</span></td><td> <span data-keyref="Type_Bool">부울</span></td><td> <span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p><p></p><h4> 예시:</h4><p class="code">var t_fix, inst1, inst2;<br />
    t_fix = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(t_fix, 20);<br />
    inst1 = instance_create_layer(150, room_height - 90, &quot;Instances&quot;, obj_Block);<br />
    inst2 = instance_create_layer(300, room_height - 90, &quot;Instances&quot;, obj_block);<br />
    physics_fixture_bind(t_fix, inst1);<br />
    physics_fixture_bind(t_fix, inst2);<br />
    physics_joint_pulley_create(inst1, inst2, 150, room_height - 140, 300, room_height - 140, 0, 0, 0, 0, 2, 0);<br />
    physics_fixture_delete(t_fix);</p><p> 위의 코드는 새로운 픽스처를 생성 및 정의하고 &quot;obj_Block&quot;의 인스턴스 2개를 생성한 다음 이 픽스처를 바인딩합니다. 그런 다음 관절에 대한 오프셋 없이 2:1의 비율(inst2가 더 빠르게 이동함을 의미) 사이에 이러한 인스턴스 사이의 풀리 관절을 정의합니다. 도르래의 두 인스턴스 간에 충돌이 발생하지 않습니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 등: <a href="Joints.htm">관절</a></div><div style="float:right"> 다음: <a href="physics_joint_gear_create.htm"><span class="notranslate">physics_joint_gear_create</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_pulley_create
-->
  <!-- TAGS
physics_joint_pulley_create
-->
</body>
</html>