<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>network_create_server_raw</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="network_create_server_raw에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="network_create_server_raw,network_socket_tcp,network_socket_udp,network_socket_ws" />
  <meta name="search-keywords" content="network_create_server_raw,network_socket_tcp,network_socket_udp,network_socket_ws" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>network_create_server_raw</h1><p> 이 기능은 허용된 연결 프로토콜 중 하나를 사용하여 게임에 대한 새 네트워크 서버를 만드는 데 사용됩니다(아래 나열된 상수 참조). 서버 유형을 제공한 다음 사용할 포트를 제공하고 마지막으로 서버에 대해 한 번에 허용되어야 하는 최대 연결 수를 제공합니다(이 수는 사용자에게 달려 있지만 연결된 클라이언트가 너무 많으면 포화 상태가 됩니다. 네트워크 또는 장치 CPU는 해당 플레이어 수의 처리를 처리할 수 없으므로 주의해서 사용하십시오. 이 함수는 변수에 저장하고 모든 추가 네트워크 기능에서 서버를 식별하는 데 사용해야 하는 고유 <i>ID</i> 를 반환하거나 연결이 실패하면 0보다 작은 값을 반환합니다.</p><div data-conref="../../../assets/snippets/network_socket_types.hts"></div><p> 이렇게 하면 &quot;원시&quot; 서버가 생성되므로 통신을 위해 내장된 GameMaker 데이터 헤더를 수락하거나 사용하지 않으므로 다음 기능을 사용해야 합니다.<a href="network_send_raw.htm"><span class="inline">network_send_raw()</span></a> 그리고<a href="network_send_udp_raw.htm"><span class="inline">network_send_udp_raw()</span></a> 포맷되지 않은 데이터를 생성된 서버로 전송합니다.</p><p></p><h4> 통사론:</h4><p class="code">network_create_server_raw(type, port, max_client);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">type</span></td><td><span data-keyref="Type_Constant_Network_Socket_Type"></span></td><td> <span class="notranslate">The type of server to create (see the constants listed below).</span></td></tr><tr><td> <span class="notranslate">port</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The port that the server will use.</span></td></tr><tr><td> <span class="notranslate">max_client</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The maximum number of clients that can connect at once.</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_ID_Network_Socket">Network Socket ID</span></p><p></p><h4> 예시:</h4><p class="code">var port = 6510;<br />
    server = network_create_server_raw(network_socket_tcp, port, 32);<br />
    while (server &lt; 0 &amp;&amp; port &lt; 65535)<br />
    {<br />
        port++<br />
        server = network_create_server(network_socket_tcp, port, 32);<br />
    }</p><p> 위의 코드는 포트 6510을 통해 TCP를 사용하여 서버를 생성하려고 시도합니다. 해당 포트를 사용할 수 없는 경우 포트를 반복하여 해당 포트를 찾습니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Networking.htm">네트워킹</a></div><div style="float:right"> 다음: <a href="network_create_socket.htm"><span class="notranslate">network_create_socket</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
network_create_server_raw
network_socket_tcp
network_socket_udp
network_socket_ws
-->
  <!-- TAGS
network_create_server_raw
-->
</body>
</html>