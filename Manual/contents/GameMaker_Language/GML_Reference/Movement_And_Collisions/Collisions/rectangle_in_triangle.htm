<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>rectangle_in_triangle</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Rectangle_in_triangle 함수에 대한 개요를 제공하는 페이지" />
  <meta name="rh-index-keywords" content="rectangle_in_triangle" />
  <meta name="search-keywords" content="rectangle_in_triangle" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>rectangle_in_triangle</h1><p> 이 기능은 충돌하지 않는지, 완전히 대상 경계 내에 있는지 또는 정의된 삼각형 영역과 단순히 접촉하고 있는지 확인하기 위해 정의한 직사각형 영역을 확인합니다. 그것들이 전혀 접촉하지 않으면 함수는 0을 반환하고, 소스가 대상 내에 완전히 있으면 1을 반환하고, 단순히 겹치면 2를 반환합니다. 아래 이미지는 이를 보여줍니다.</p><p><img alt="Rectangle triangle collision example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_triangle.png" /></p><h4> 통사론:</h4><p class="code">rectangle_in_triangle(sx1, sy1, sx2, sy2, dx1, dy1, dx2, dy2, dx3, dy3);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">sx1</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The x coordinate of the left side of the source rectangle.</span></td></tr><tr><td> <span class="notranslate">sy1</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The y coordinate of the top side of the source rectangle.</span></td></tr><tr><td> <span class="notranslate">sx2</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The x coordinate of the right side of the source rectangle.</span></td></tr><tr><td> <span class="notranslate">sy2</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The y coordinate of the bottom side of the source rectangle.</span></td></tr><tr><td> <span class="notranslate">x1</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The x coordinate of the first side of the triangle to check.</span></td></tr><tr><td> <span class="notranslate">y1</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The y coordinate of the first side of the triangle to check.</span></td></tr><tr><td> <span class="notranslate">x2</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The x coordinate of the second side of the triangle to check.</span></td></tr><tr><td> <span class="notranslate">y2</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The y coordinate of the second side of the triangle to check.</span></td></tr><tr><td> <span class="notranslate">x3</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The x coordinate of the third side of the triangle to check.</span></td></tr><tr><td> <span class="notranslate">y3</span></td><td><span data-keyref="Type_Real"></span></td><td> <span class="notranslate">The y coordinate of the third side of the triangle to check.</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Real"></span></p><p></p><h4> 예시:</h4><p class="code">var inst = instance_nearest(x, y, obj_Player);<br />
    if instance_exists(inst)<br />
    {<br />
        var x1 = x + lengthdir_x(100, image_angle - 45);<br />
        var y1 = y + lengthdir_y(100, image_angle - 45);<br />
        var x2 = x + lengthdir_x(100, image_angle + 45);<br />
        var y2 = y + lengthdir_y(100, image_angle + 45);<br />
        if (rectangle_in_triangle(inst.bbox_left, inst.bbox_top, inst.bbox_right, inst.bbox_bottom, x, y, x1, y1, x2, y2) == 1) <br />
        {<br />
            can_see = true;<br />
        }<br />
    }</p><p> 위의 코드는 <span class="inline">rectangle_in_triangle</span> &quot;obj_player&quot;의 인스턴스를 확인하기 위해 &quot;시각 원뿔&quot;로 기능합니다. 전체 경계 상자가 주어진 삼각형 영역 내에 있으면 변수를 다음으로 설정합니다. <span class="inline">true</span>. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Collisions.htm">충돌</a></div><div style="float:right"> 다음: <a href="rectangle_in_circle.htm"><span class="notranslate">rectangle_in_circle</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
rectangle_in_triangle
-->
  <!-- TAGS
rectangle_in_triangle
-->
</body>
</html>