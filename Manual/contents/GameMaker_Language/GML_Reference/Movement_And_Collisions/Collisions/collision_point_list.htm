<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>collision_point_list</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Collision_point_list 함수에 대한 개요를 제공하는 페이지" />
  <meta name="rh-index-keywords" content="collision_point_list" />
  <meta name="search-keywords" content="collision_point_list" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>collision_point_list</h1><p> 이 기능은 다음과 같습니다.<a href="collision_point.htm"><span class="inline">collision_point()</span></a> 기능을 사용하면 한 번에 하나의 충돌 인스턴스만 감지하는 대신 여러 인스턴스를 감지합니다. 검사할 점의 x/y 위치를 제공하고 검사를 정밀하게 설정하고(이 경우 검사 중인 모든 인스턴스에는 <i>정확한</i> 충돌 마스크가 있어야 함) 검사에 호출 인스턴스가 포함되어야 하는지 여부를 설정할 수 있습니다.</p><p> <a href="../../Data_Structures/DS_Lists/DS_Lists.htm">DS 목록</a> 도 제공하므로 <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><span class="inline">id</span></a> 호출하는 인스턴스와 충돌하는 모든 인스턴스의 값은 지정된 목록의 끝에 추가됩니다. 이 함수 호출의 결과만 포함하도록 이 함수를 호출하기 전에 목록을 <a href="../../Data_Structures/DS_Lists/ds_list_clear.htm">지울</a> 수 있습니다. 또한 주어진 지점에서 원점까지의 거리를 기준으로 인스턴스를 정렬할 수 있습니다. 이 함수는 찾은 인스턴스의 수를 반환하거나 찾지 못한 경우 0을 반환합니다.</p><p> 객체 인덱스 대신 <a href="../../../GML_Overview/Instance_Keywords.htm">instance 키워드</a> 를 제공할 수 있습니다.<span class="inline">all</span>, 코드를 실행하는 인스턴스를 포함할 수 있는 현재 방의 모든 인스턴스를 확인하려면(에 따라 <span class="inline">notme</span> 논쟁).</p><p></p><h4> 통사론:</h4><p class="code">collision_point_list(x, y, obj, prec, notme, list, ordered);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">x</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The x coordinate of the point to check.</span></td></tr><tr><td> <span class="notranslate">y</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The y coordinate of the point to check.</span></td></tr><tr><td> <span class="notranslate">obj</span></td><td> <span data-keyref="Type_Asset_Object">개체 자산</span> 또는 <span data-keyref="Type_ID_Instance">인스턴스 ID</span></td><td> <span class="notranslate">The object to check for instance collisions.</span></td></tr><tr><td> <span class="notranslate">prec</span></td><td> <span data-keyref="Type_Bool">부울</span></td><td> <span class="notranslate">Whether the check is based on precise collisions (<span class="inline">true</span>, which is slower) or its bounding box in general (<span class="inline">false</span>, faster).</span></td></tr><tr><td> <span class="notranslate">notme</span></td><td> <span data-keyref="Type_Bool">부울</span></td><td> <span class="notranslate">Whether the calling instance, if relevant, should be excluded (<span class="inline">true</span> ) or not (<span class="inline">false</span> ).</span></td></tr><tr><td> <span class="notranslate">list</span></td><td> <span data-keyref="Type_ID_DS_List">DS 목록 ID</span></td><td> <span class="notranslate">The DS list to use to store the IDs of colliding instances.</span></td></tr><tr><td> <span class="notranslate">ordered</span></td><td> <span data-keyref="Type_Bool">부울</span></td><td> <span class="notranslate">Whether the list should be ordered by distance (<span class="inline">true</span> ) or not (<span class="inline">false</span> ).</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Real">Real</span> (The number of instances found to be in collision)</p><p></p><h4> 예시:</h4><p class="code">var _list = ds_list_create();<br />
    var _num = collision_point_list(x, y, obj_Enemy, false, true, _list, false);<br />
    if _num &gt; 0<br />
    {<br />
        for (var i = 0; i &lt; _num; ++i;)<br />
        {<br />
            instance_destroy(_list[| i]);<br />
        }<br />
    }<br />
    ds_list_destroy(_list);</p><p> 위의 코드는 &quot;obj_Enemy&quot; 인스턴스와의 충돌에 대해 호출 인스턴스의 위치를 확인합니다. 충돌이 있는 경우 미리 생성된 목록이 반복되고 충돌에 있었던 각 인스턴스가 소멸됩니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Collisions.htm">충돌</a></div><div style="float:right"> 다음: <a href="collision_rectangle.htm"><span class="notranslate">collision_rectangle</span></a> _사각형</div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
collision_point_list
-->
  <!-- TAGS
collision_point_list
-->
</body>
</html>