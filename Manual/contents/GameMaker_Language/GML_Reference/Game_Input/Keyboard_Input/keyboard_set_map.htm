<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>keyboard_set_map</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="keyboard_set_map에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="keyboard_set_map" />
  <meta name="search-keywords" content="keyboard_set_map" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>keyboard_set_map</h1><p> 때때로 게임을 만들 때 하나의 키가 다른 키와 동일하게 작동하기를 원할 수 있습니다. 예를 들어 많은 사람들이 WASD 키를 이동에 사용하지만 많은 사람들은 화살표 키 <i>도</i> 사용합니다! 그래서 뭐 할까? 음, 이동 시스템을 두 번 코딩할 <i>수</i> 있지만 이 기능을 사용하면 한 키를 다른 키에 &quot;매핑&quot;할 수 있으므로 어느 키의 입력도 동일한 것으로 해석되기 때문에 약간 복잡하고 고맙게도 중복됩니다. 이렇게 하려면 매핑하려는 키(key2 - 코드를 작성하는 키가 됨)와 매핑 <i>하려는</i> 키(key1)를 선택합니다. 그 후, 두 키 중 하나에 대한 키 누름은 <span data-keyref="GameMaker Name">GameMaker</span> 에 의해 key2에서 오는 것으로 해석됩니다. 또한 이 기능을 사용하여 사용자가 게임에 코딩한 키에 사용자 입력 키를 간단히 매핑하여 사용자가 자신만의 키를 정의할 수 있는 시스템을 설계할 수 있습니다.</p><p> 함수는 함수에서 반환된 키 코드 값을 취합니다.<a href="../../Strings/ord.htm"><span class="inline">ord()</span></a> (AZ의 <i>대문자</i> 또는 0-9의 숫자만), 또는 <span class="inline">vk_*</span> 기본 <a href="Keyboard_Input.htm">키보드 입력</a> 페이지에 나열된 상수.</p><p class="note"> <strong>중요한!</strong> 매핑하려는 키(key1)는 이 기능을 사용하면 실제 키 기호이므로 더 이상 사용할 수 없습니다. 예를 들어 위쪽 화살표를 &quot;W&quot;에 매핑하면 더 이상 &quot;W&quot; 키 누름을 &quot;W&quot;로 감지할 수 없으며 항상 위쪽 화살표로 간주됩니다. 이를 취소하려면 키를 자체에 매핑하거나 key1과 key2가 모두 <span class="inline">ord(&quot;W&quot;)</span> - 또는 기능을 사용 <span class="inline"><a href="keyboard_unset_map.htm">keyboard_unset_map()</a></span>.</p><p></p><h4> <b>통사론:</b></h4><p class="code">keyboard_set_map(key1, key2);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">key1</span></td><td><span data-keyref="Type_Constant_VK"></span></td><td> <span class="notranslate">This is the key that key1 is to be mapped to</span></td></tr><tr><td> <span class="notranslate">key2</span></td><td><span data-keyref="Type_Constant_VK"></span></td><td> <span class="notranslate">This is the key that is to be mapped</span></td></tr></tbody></table><p></p><h4> <b>보고:</b></h4><p class="code"><span data-keyref="Type_Bool"></span></p><p></p><h4> <b>예시:</b></h4><p class="code">keyboard_set_map(ord(&quot;A&quot;), vk_left);</p><p> 위의 예제 코드는 &quot;A&quot; 키를 왼쪽 화살표 키에 매핑합니다. 이것은 플레이어가 &quot;A&quot; <i>또는</i> 왼쪽 화살표 키를 사용할 수 있고 왼쪽 화살표에 대해 작성된 모든 코드가 대신 사용되는 &quot;A&quot; 키에도 응답함을 의미합니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Keyboard_Input.htm">키보드 입력</a></div><div style="float:right"> 다음: <a href="keyboard_get_map.htm"><span class="notranslate">keyboard_get_map</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
keyboard_set_map
-->
  <!-- TAGS
keyboard_set_map
-->
</body>
</html>