<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>variable_instance_get_names</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="variable_instance_get_names 함수를 설명하는 페이지" />
  <meta name="rh-index-keywords" content="variable_instance_get_names" />
  <meta name="search-keywords" content="variable_instance_get_names" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>variable_instance_get_names</h1><p> 이 함수를 사용하여 인스턴스의 <b>인스턴스</b> 변수 이름으로 채워진 배열을 검색하거나 게임의 <b>전역</b> 변수를 검색할 수 있습니다. 인스턴스 ID 값을 전달할 때 배열의 각 항목은 인스턴스에서 생성된 <a href="../../GML_Overview/Variables_And_Variable_Scope.htm">인스턴스 범위</a> 변수에 해당하는 변수 이름의 문자열이 됩니다. 그러나 키워드를 전달하면 <span class="inline">global</span>, 배열의 각 항목은 <a href="../../GML_Overview/Variables_And_Variable_Scope.htm">전역 범위</a> 변수에 해당하는 변수 이름의 문자열입니다.</p><p></p><h4> 통사론:</h4><p class="code">variable_instance_get_names(instance_id/global);</p><table><colgroup><col /><col /><col /></colgroup><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">instance_id/global</span></td><td> <span data-keyref="Type_ID_Instance">인스턴스 ID</span> 또는 <span class="inline">global</span></td><td> <span class="notranslate">The unique ID value of the instance to check or the keyword <span class="inline">global</span></span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Array">Array</span> (each entry is a string)</p><p></p><h4> 예시:</h4><p class="code">var str = &quot;&quot;;<br />
    var array = variable_instance_get_names(id);<br />
    show_debug_message(&quot;Variables for &quot; + object_get_name(object_index) + string(id));<br />
    for (var i = 0; i &lt; array_length(array); i++;)<br />
    {<br />
        str = array[i] + &quot;:&quot; + string(variable_instance_get(id, array[i]));<br />
        show_debug_message(str);<br />
    }</p><p> 위의 코드는 코드 블록을 실행하는 인스턴스에 대한 모든 인스턴스 범위 변수의 배열을 검색한 다음 디버그 출력에 값과 함께 표시합니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Variable_Functions.htm">변수 함수</a></div><div style="float:right"> 다음: <a href="variable_instance_names_count.htm"><span class="notranslate">variable_instance_names_count</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
variable_instance_get_names
-->
  <!-- TAGS
variable_instance_get_names
-->
</body>
</html>