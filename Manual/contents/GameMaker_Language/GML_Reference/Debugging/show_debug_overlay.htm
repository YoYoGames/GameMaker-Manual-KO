<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>show_debug_overlay</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="show_debug_overlay에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="show_debug_overlay" />
  <meta name="search-keywords" content="show_debug_overlay" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>show_debug_overlay</h1><p> 이 기능은 게임을 테스트할 때 표준 디버그 오버레이를 켜고 끄는 데 사용할 수 있으며 기본적으로 비활성화되어 있습니다. 디버그 오버레이는 현재 실제 fps 값, 텍스처 스왑 수 및 정점 배치 수와 함께 실제 게임 창 자체에 그래픽 CPU/GPU 사용량 표시줄을 표시합니다(텍스처 스왑 및 정점 배치는 절대 0이 아니며 일반적으로 2 또는 3의 값을 표시합니다. 빈 방이 있더라도 <span data-keyref="GameMaker Name">GameMaker</span> 는 여전히 객체를 그리고 배치해야 하기 때문입니다.</p><p><img alt="Debug overlay graphic" class="center" src="../../../assets/Images/QS_Guide/QS_Debug_Bar.png" /> 이 막대는 섹션으로 분할되며 각 섹션은 1/60초입니다. 위의 이미지에서 볼 수 있듯이 바는 다양한 색상으로 구성되어 있습니다.</p><ul class="colour"><li> <b>녹색</b> - 입력/출력 처리(예: 키보드, 마우스, 게임패드, 네트워킹 등...)</li><li> <b>빨간색</b> - 단계 이벤트의 업데이트 속도</li><li> <b>노란색</b> - 추첨 이벤트에 필요한 시간</li><li> <b>주황색</b> - 디버그 모듈을 사용할 때만 일반적으로 표시되는 디버그 업데이트 시간</li><li> <b>흰색</b> - GPU가 다음 프레임을 시작하기 전에 프레임 렌더링을 완료할 때까지 대기하는 데 소요된 시간입니다.</li><li> <b>Cyan</b> - 텍스트 렌더링 시간</li><li> <b>회색</b> - 각 그리기 단계에서 화면을 지우는 데 필요한 시간</li><li> <strong>파란색</strong> - <a href="../Garbage_Collection/Garbage_Collection.htm">Garbage Collector</a> 가 실행되는 데 필요한 시간</li><li> <b>진한 빨간색</b> - GPU 플러시(GPU가 메모리에서 이미지를 지우는 데 걸리는 시간)</li></ul><p> 이 기능을 사용하면 디버그 모드에 있든 없든 오버레이를 추가할 수 있으며, 이러한 방식으로 게임이 얼마나 효율적으로 실행되는지 확인하고 오버헤드 없이 사용 가능한 리소스를 어떻게 사용하고 있는지 시각적 신호를 얻을 수 있습니다. 함께 실행되는 디버거.</p><p class="note"> <b>참고</b>: 이 기능은 다른 모든 대상과 작동 방식이 다르기 때문에 HTML5 대상에서는 작동하지 않습니다.</p><p></p><h4> 통사론:</h4><p class="code">show_debug_overlay(enable);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">enable</span></td><td><span data-keyref="Type_Bool"></span></td><td> <span class="notranslate">switch on (<span class="inline">true</span> ) or off (<span class="inline">false<span class="inline">) the debug overlay.</span></span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Void"></span></p><p></p><h4> <b>예시:</b></h4><p class="code">if global.debug<br />
    {<br />
        show_debug_overlay(true);<br />
    }<br />
    else<br />
    {<br />
        show_debug_overlay(false);<br />
    }</p><p> 위의 코드는 전역 변수의 값에 따라 디버그를 켜거나 끕니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Debugging.htm">디버깅</a></div><div style="float:right"> 다음: <a href="code_is_compiled.htm"><span class="notranslate">code_is_compiled</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
show_debug_overlay
-->
  <!-- TAGS
show_debug_overlay
-->
</body>
</html>