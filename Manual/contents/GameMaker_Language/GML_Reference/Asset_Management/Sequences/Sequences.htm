<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>시퀀스</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="시퀀스와 관련된 다양한 기능 및 변수를 설명하는 페이지" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="시퀀스" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> 시퀀스</h1><p> 시퀀스는 일반적으로 <a href="../../../../The_Asset_Editors/Sequences.htm">시퀀스 편집기</a> 를 사용하여 IDE에서 생성되지만 코드를 사용하여 생성 및 편집할 수도 있습니다. 그러나 사용 가능한 기능을 살펴보기 전에 GameMaker에서 시퀀스가 정의되는 방식과 사용될 다양한 용어를 이해하는 것이 중요합니다.</p><p> 시작하려면 최상위 수준에 <b>시퀀스 요소</b> 가 있습니다. 이것은 방 편집기를 통해 또는 적절한 <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">레이어 기능</a> 을 사용하여 코드에서 방의 레이어에 배치하는 것입니다. 레이어 요소는 요소 ID 값 외에 실제 속성이 없지만 이 ID는 위에서 언급한 레이어 기능을 사용하여 시퀀스 재생을 변경하거나 시퀀스 데이터에 액세스하는 데 필요합니다.</p><p> 다음으로 일반 개체 및 인스턴스가 있는 것처럼 <b>시퀀스 개체</b> 와 <b>시퀀스 인스턴스</b> 가 있습니다. 시퀀스 <i>개체</i> 는 <b>자산 브라우저</b> 에서 생성하거나 함수를 사용하여 생성한 기본 리소스입니다.<a href="sequence_create.htm"><span class="inline">sequence_create()</span></a>, 그리고 시퀀스 <i>인스턴스</i> 는 레이어의 요소로 방에 배치된 시퀀스 개체의 &quot;사본&quot;입니다. 시퀀스 개체를 청사진으로 생각하고 시퀀스 인스턴스를 이러한 청사진에서 생성하는 것으로 생각하십시오. 시퀀스 개체와 인스턴스는 <a href="../../../GML_Overview/Structs.htm">구조체</a> 이며 - 일반 개체와 달리 시퀀스 개체 구조체는 런타임에 편집할 수 있으며, 이는 요소로 생성할 때 해당 시퀀스의 모든 추가 인스턴스에 영향을 미칩니다(그리고 시퀀스 개체에 수행된 편집은 재설정 <b>되지 않습니다</b>. 사용하여 게임이나 방을 다시 시작하여 <span class="inline">room_restart()</span> 또는 <span class="inline">game_restart()</span> 기능). 시퀀스 인스턴스 구조체에는 <b>시퀀스 데이터</b> 구조체뿐 아니라 재생 및 사물(아래에서 더 자세히 설명됨)을 제어하는 몇 가지 매개변수가 포함되어 있습니다.</p><p> 마지막으로 위에서 언급했듯이 또 다른 구조체인 <b>시퀀스 데이터</b> 가 있습니다. 이 구조체는 시퀀스에 대한 <i>모든</i> 데이터를 포함합니다. 포함된 트랙, 해당 트랙의 속성, 재생 속도 등. 이 구조체 콘텐츠의 정확한 세부 정보는 아래에 설명되어 있지만 기본적으로 시퀀스가 재생되는 동안 실제로 작업을 수행하기 위해 <b>키프레임 데이터</b> 를 사용하는 <b>자산 트랙</b> 구조체와 <b>매개변수 트랙</b> 구조체로 구성됩니다.</p><p> 시퀀스 요소는 룸 <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">레이어 기능</a> 을 사용하여 처리되지만 시퀀스 개체, 인스턴스 및 데이터의 경우 다음 기능이 있습니다.</p><p></p><ul class="colour"><li> <a href="sequence_exists.htm"><span class="notranslate">sequence_exists</span></a></li><li> <a href="sequence_create.htm"><span class="notranslate">sequence_create</span></a></li><li> <a href="sequence_destroy.htm"><span class="notranslate">sequence_destroy</span></a></li><li> <a href="sequence_get.htm"><span class="notranslate">sequence_get</span></a></li><li> <a href="sequence_track_new.htm"><span class="notranslate">sequence_track_new</span></a></li><li> <a href="sequence_keyframe_new.htm"><span class="notranslate">sequence_keyframe_new</span></a></li><li> <a href="sequence_keyframedata_new.htm"><span class="notranslate">sequence_keyframedata_new</span></a></li><li> <a href="sequence_get_objects.htm"><span class="notranslate">sequence_get_objects</span></a></li><li> <a href="sequence_instance_override_object.htm"><span class="notranslate">sequence_instance_override_object</span></a></li></ul><p></p><p> 또한 인스턴스가 시퀀스에서 사용되었는지 여부를 확인하는 데 사용할 수 있는 인스턴스와 연결된 <strong>내장 변수</strong> 가 있습니다.</p><p></p><ul class="colour"><li> <a href="in_sequence.htm"><span class="notranslate">in_sequence</span></a></li></ul><p class="note"> <strong>중요한!</strong> 시퀀스에 인스턴스가 있는 경우 이러한 인스턴스는<span class="inline"><span style="font-size:14px;">image_xscale</span> /<span class="inline"><span style="font-size:14px;">image_yscale</span> / <span class="inline"><span style="font-size:14px;">image_angle</span> /<span class="inline"><span style="font-size:14px;">x</span> /<span class="inline"><span style="font-size:14px;">y</span> 재생을 시작한 후 시퀀스가 각 단계를 업데이트할 때 변수를 덮어쓰게 됩니다.</p><p></p><p> 이러한 함수를 사용하여 시퀀스를 생성하거나 편집하기 전에 구조체 속성에 대한 아래의 자세한 설명을 읽는 것이 좋습니다. 새 시퀀스를 만드는 방법에 대한 일반적인 개요는 다음과 같습니다.</p><ul class="colour"><li> 함수를 사용하여 새 시퀀스 객체 생성 <span class="inline"><a href="sequence_create.htm">sequence_create()</a></span> 시퀀스 개체 인덱스를 변수에 저장합니다. 이 인덱스는 시퀀스 개체 구조체에 대한 액세스를 제공합니다.</li></ul><p class="code">myseq = sequence_create();</p><ul class="colour"><li> 길이, 재생 모드, 재생 속도 등과 같은 시퀀스 개체의 최상위 값을 설정합니다. 예를 들면 다음과 같습니다.</li></ul><p class="code">myseq.length = 120;<br />
    myseq.loopmode = seqplay_pingpong</p><ul class="colour"><li> 시퀀스 개체에 트랙을 추가하기 전에 트랙을 생성해야 하므로 이제 함수로 정의된 <i>자산</i> 트랙의 배열을 생성해야 합니다.<a href="sequence_track_new.htm"><span class="inline">sequence_track_new()</span></a>. 코드에서 에셋 트랙과 매개변수 트랙 사이에는 실제로 차이가 없습니다. 모두 단순히 트랙이며 작동 방식은 생성한 트랙 유형과 최상위 트랙에 하위 트랙으로 할당되었는지 여부에 따라 다릅니다. 아니다. 따라서 자산에 대한 트랙을 만든 다음 다른 매개변수에 대한 하위 트랙을 자산에 할당하면 이러한 하위 트랙이 자산에 대한 <i>매개변수</i> 트랙으로 작동합니다. 아래 예제는 나중에 시퀀스에 추가될 단일 그래픽 자산 트랙을 생성합니다.</li></ul><p class="code">var mytracks = array_create(1);<br />
    mytracks[0] = sequence_track_new(seqtracktype_graphic);</p><ul class="colour"><li> 각 에셋 트랙에는 시퀀스가 어떻게 보일지 또는 위치 등을 알려주는 데이터가 있어야 하며 이는 <i>키프레임</i> 형식으로 추가됩니다. 자산 트랙의 최상위 수준에서 다양한 항목에 대한 키프레임을 설정할 수 있습니다(아래의 트랙 구조 섹션에 나열됨). 그러나 이들은 자산 트랙 키프레임이므로 보간되지 않고 단순히 변경됩니다. 주어진 프레임에 도달했을 때 참조하는 값입니다. 각 키프레임은 배열에 추가되는 구조체이며 이 배열은 자산 트랙에 할당됩니다. 키프레임 구조체를 생성하기 위해 우리는 함수를 호출할 것입니다<a href="sequence_keyframe_new.htm"><span class="inline">sequence_keyframe_new()</span></a> 필요한 데이터로 키프레임을 채우려면 다음 함수를 사용합니다.<a href="sequence_keyframedata_new.htm"><span class="inline">sequence_keyframedata_new()</span></a>:</li></ul><p class="code">// Create a new keyframe struct for a graphics asset track and add it to an array (as you can have multiple keys in a frame)<br />
    var graphickeys = array_create(1);<br />
    graphickeys[0] = sequence_keyframe_new(seqtracktype_graphic);<br />
    // Set the graphics keyframe top level data for the keyframe position and length, etc.<br />
    graphickeys[0].frame = 0;<br />
    graphickeys[0].length = 1;<br />
    graphickeys[0].stretch = true;<br />
    graphickeys[0].disabled = false;<br />
    // Create the channel data that will go into this keyframe (again an array, as each key can have multiple channels of keyframe data)<br />
    var graphickeydata = array_create(1);<br />
    graphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic);<br />
    graphickeydata[0].spriteIndex = spr_Platform;<br />
    graphickeydata[0].channel = 0;<br />
    // Add the keyframe data channels to the graphics track keyframe<br />
    graphickeys[0].channels = graphickeydata;<br />
    // Add the definied keyframes to the track<br />
    mytracks[0].name = &quot;TestGraphicTrack&quot;;<br />
    mytracks[0].keyframes = graphickeys;</p><ul class="colour"><li> 이제 방금 만든 그래픽 트랙에 하위 트랙으로 할당할 매개변수 트랙을 만들어야 합니다. 이것은 위에 표시된 것과 유사한 방식으로 수행됩니다. 이제 트랙의 목적을 나타내는 이름을 지정해야 합니다. 이 경우 &quot;위치&quot;를 지정하여 이 트랙을 사용하여 코스에서 그래픽 트랙 트랙을 이동할 것입니다. 시퀀스 애니메이션 프레임:</li></ul><p class="code">// Create a new parameter track struct for the position of the graphic<br />
    var paramtracks = array_create(1);<br />
    paramtracks[0] = sequence_track_new(seqtracktype_real);<br />
    paramtracks[0].name = &quot;position&quot;;<br />
    paramtracks[0].interpolation = true;<br />
    // Create the keyframe struct to hold the parameter channel data and set the frame position for the keyframe<br />
    var paramkeys = array_create(2);<br />
    paramkeys[0] = sequence_keyframe_new(seqtracktype_real);<br />
    paramkeys[0].frame = 0;<br />
    paramkeys[1] = sequence_keyframe_new(seqtracktype_real);<br />
    paramkeys[1].frame = 120;<br />
    // Create the keyframe data structs<br />
    var paramkeydata1 = array_create(2);<br />
    paramkeydata1[0] = sequence_keyframedata_new(seqtracktype_real);<br />
    paramkeydata1[0].channel = 0; // Channel 0 for a position track is the X position<br />
    paramkeydata1[0].value = 0;<br />
    paramkeydata1[1] = sequence_keyframedata_new(seqtracktype_real);<br />
    paramkeydata1[1].channel = 1; // Channel 1 for a position track is the Y position<br />
    paramkeydata1[1].value = 0;<br />
    var paramkeydata2 = array_create(2);<br />
    paramkeydata2[0] = sequence_keyframedata_new(seqtracktype_real);<br />
    paramkeydata2[0].channel = 0;<br />
    paramkeydata2[0].value = room_width;<br />
    paramkeydata2[1] = sequence_keyframedata_new(seqtracktype_real);<br />
    paramkeydata2[1].channel = 1;<br />
    paramkeydata2[1].value = room_height;<br />
    // Assign the keyframe data structs to the channels for each key<br />
    paramkeys[0].channels = paramkeydata1;<br />
    paramkeys[1].channels = paramkeydata2;<br />
    // Assign the keys to the parameter track<br />
    paramtracks[0].keyframes = paramkeys;</p><ul class="colour"><li> 완료되면 마지막으로 매개변수 트랙을 처음에 만든 기본 그래픽 자산 트랙에 하위 트랙으로 할당한 다음 이 트랙을 시퀀스에 할당하여 방에서 인스턴스를 만들 수 있습니다.:</li></ul><p class="code">mytracks[0].tracks = paramtracks;<br />
    myseq.tracks = mytracks;<br />
    layer_sequence_create(&quot;Assets_1&quot;, 0, 0, myseq);</p><p> 위의 지침은 시퀀스의 (0, 0) 위치 <i>에</i> 스프라이트를 그린 다음 루프에서 오른쪽 하단 모서리로 이동한 다음 다시 이동하는 매우 간단한 시퀀스 개체를 만듭니다. 언급했듯이 시퀀스에 대한 데이터를 제공하거나 얻기 위해 다른 구조체에 액세스해야 하는 위치가 많이 있으며 아래 섹션에는 이러한 구조체에 포함된 다양한 속성이 모두 나열되어 있습니다.</p><ul class="colour"><li><a name="object"></a> <a href="Sequence_Structs/The_Sequence_Object_Struct.htm"><label for="1">시퀀스 객체 구조체</label></a></li><li><a name="instance"></a> <a href="Sequence_Structs/The_Sequence_Instance_Struct.htm"><label for="2">시퀀스 인스턴스 구조체</label></a></li><li><a name="track"></a> <a href="Sequence_Structs/The_Track_Struct.htm"><label for="3">트랙 구조</label></a></li><li><a name="keyframe"></a> <a href="Sequence_Structs/The_Keyframe_Struct.htm"><label for="4">키프레임 구조체</label></a></li><li><a name="keyframe_data"></a> <a href="Sequence_Structs/The_Keyframe_Data_Struct.htm"><label for="5">키프레임 데이터 구조체</label></a></li></ul><p></p><p> 마지막으로, <strong>이벤트</strong> 또는 <strong>브로드캐스트 메시지</strong> 로 트리거될 수 있는 코드를 시퀀스에 추가할 수 <strong>있습니다</strong>. 이것은 다음 페이지에 자세히 설명되어 있습니다.</p><ul class="colour"><li> <a href="Sequence_Events_Moments_Broadcast.htm">이벤트, 순간 및 브로드캐스트 메시지</a> </li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="../Asset_Management.htm">자산 관리</a></div><div style="float:right"> 다음: <a href="../Fonts/Fonts.htm">글꼴</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
Sequences
-->
  <!-- TAGS
sequence_functions
-->
</body>
</html>