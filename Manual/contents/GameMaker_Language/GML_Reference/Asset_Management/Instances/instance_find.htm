<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_find</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="instance_find 함수 개요 페이지" />
  <meta name="rh-index-keywords" content="instance_find" />
  <meta name="search-keywords" content="instance_find" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>instance_find</h1><p> 모든 인스턴스에는 고유 식별자(<a href="Instance_Variables/id.htm"><span class="inline">id</span></a> ) 게임이 실행되는 동안 수정하고 조작하는 데 사용할 수 있지만 특정 인스턴스의 id가 무엇인지 항상 알지 못할 수 있으므로 이 함수를 사용하여 모든 인스턴스를 반복하여 무엇을 찾을 수 있는지 도움이 될 수 있습니다. 당신은 필요합니다. 인스턴스를 찾고자 하는 객체와 숫자를 지정하고 인스턴스 목록의 해당 위치에 인스턴스가 있으면 해당 인스턴스의 id를 반환하고, 없으면 특수 <a href="../../../GML_Overview/Instance_Keywords.htm">키워드</a> 를 반환합니다. <span class="inline"><b>noone</b></span>. 키워드를 사용할 수도 있습니다. <span class="inline"><b>all</b></span> 방의 모든 인스턴스를 반복하고 상위/하위 계층 구조의 일부인 모든 인스턴스를 반복하는 상위 개체와 인스턴스를 지정할 수도 있습니다. <span class="inline">id</span> ) 현재 방에 실제로 존재하는지 확인합니다. 인스턴스는 <i>임의의</i> 방식으로 정렬되기 때문에 이 함수에서 인스턴스를 확인하는 방법에 대한 특정 순서는 없으며 모든 인스턴스는 임의의 위치에 있을 수 있습니다.</p><p> 이 함수에서 &quot;n&quot;의 최대값은 다음과 같습니다.</p><ul class="colour"><li> 키워드의 경우 <span class="inline"><b>all</b></span>:<a href="instance_count.htm"><span class="inline">instance_count - 1</span></a></li><li> 개체 인덱스의 경우:<a href="instance_number.htm"><span class="inline">instance_number(OBJ) - 1</span></a></li></ul><p></p><h4> <b>통사론:</b></h4><p class="code">instance_find(obj, n);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">obj</span></td><td> <span data-keyref="Type_Asset_Object">개체 자산</span></td><td> <span class="notranslate">The object to find the nth instance of</span></td></tr><tr><td> <span class="notranslate">n</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The number of the instance to find.</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_ID_Instance">Instance ID</span> or <span data-keyref="Type_ID_noone">noone</span></p><p></p><h4> 예시:</h4><p class="code">for (var i = 0; i &lt; instance_number(obj_Enemy); ++i;)<br />
    {<br />
        enemy[i] = instance_find(obj_Enemy,i);<br />
    }</p><p> 위의 코드는 <span class="inline">for</span> 루프를 사용하여 &quot;obj_Enemy&quot;의 모든 인스턴스를 반복하고 해당 <b>ID</b> 를 &quot;enemy[]&quot; 배열에 저장합니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Instances.htm">인스턴스</a></div><div style="float:right"> 다음: <a href="instance_furthest.htm"><span class="notranslate">instance_furthest</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instance_find
-->
  <!-- TAGS
instance_find
-->
</body>
</html>