<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_place_list</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="instance_place_list 함수를 설명하는 페이지" />
  <meta name="rh-index-keywords" content="instance_place_list" />
  <meta name="search-keywords" content="instance_place_list" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>instance_place_list</h1><p> 이 기능을 사용하면 검사용 코드를 실행하는 인스턴스의 충돌 마스크를 사용하여 개체의 모든 인스턴스와의 충돌 위치를 확인할 수 있습니다. 이것을 사용하면 <span data-keyref="GameMaker Name">GameMaker</span> 에 인스턴스를 새 위치로 이동하고 충돌을 확인한 다음 뒤로 이동하여 충돌이 발견되었는지 여부를 알려주도록 효과적으로 요청하는 것입니다. 이것은 정확한 충돌에 대해 작동하지만 확인 중인 개체의 인스턴스와 인스턴스 모두에 정확한 충돌 마스크가 선택되어 있는 경우에만, 그렇지 않으면 경계 상자 충돌만 적용됩니다.</p><p> <a href="../../Data_Structures/DS_Lists/DS_Lists.htm">DS 목록</a> 도 제공하므로<a href="Instance_Variables/id.htm"><span class="inline">id</span></a> 호출하는 인스턴스와 충돌하는 모든 인스턴스의 값은 지정된 목록의 끝에 추가됩니다. 이 함수 호출의 결과만 포함하도록 이 함수를 호출하기 전에 목록을 <a href="../../Data_Structures/DS_Lists/ds_list_clear.htm">지울</a> 수 있습니다. 또한 검사를 수행하는 인스턴스의 원점에서 충돌이 발견된 인스턴스의 원점까지의 거리를 기준으로 목록을 정렬할 수 있습니다.</p><p> 이 함수는 특수 키워드도 허용합니다.<a href="../../../GML_Overview/Instance_Keywords.htm"><b><span class="inline">all</span></b></a>, 이 경우 충돌하는 것으로 확인된 모든 인스턴스가 나열됩니다. 이 함수는 찾은 인스턴스의 수를 반환하거나 찾지 못한 경우 0을 반환합니다.</p><p></p><h4> 통사론:</h4><p class="code">instance_place_list(x, y, obj, list, ordered);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">x</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The x position to check for instances.</span></td></tr><tr><td> <span class="notranslate">y</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The y position to check for instances.</span></td></tr><tr><td> <span class="notranslate">obj</span></td><td> <span data-keyref="Type_Asset_Object">개체 자산</span> 또는 <span data-keyref="Type_ID_Instance">인스턴스 ID</span></td><td> <span class="notranslate">The object to check for instances of.</span></td></tr><tr><td> <span class="notranslate">list</span></td><td> <span data-keyref="Type_ID_DS_List">DS 목록 ID</span></td><td> <span class="notranslate">The DS list to use to store the IDs of colliding instances.</span></td></tr><tr><td> <span class="notranslate">ordered</span></td><td> <span data-keyref="Type_Bool">부울</span></td><td> <span class="notranslate">Whether the list should be ordered by distance (<span class="inline">true</span> ) or not (<span class="inline">false</span> ).</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Real">Real</span> (The number of instances found to be in collision)</p><p></p><h4> 예시:</h4><p class="code">var _list = ds_list_create();<br />
    var _num = instance_place_list(x, y, obj_Enemy, _list, false);<br />
    <br />
    if _num &gt; 0<br />
    {<br />
        for (var i = 0; i &lt; _num; ++i;)<br />
        {<br />
            instance_destroy(_list[| i]);<br />
        }<br />
    }<br />
    <br />
    ds_list_destroy(_list);
  </p><p> 위의 코드는 호출하는 인스턴스 위치에서 발견된 모든 인스턴스와의 충돌을 확인합니다. 이것들은 DS 목록에 추가되고, 충돌이 발생한 각 인스턴스를 파괴하기 위해 반복됩니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Instances.htm">인스턴스</a></div><div style="float:right"> 다음: <a href="instance_position.htm"><span class="notranslate">instance_position</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instance_place_list
-->
  <!-- TAGS
instance_place_list
-->
</body>
</html>