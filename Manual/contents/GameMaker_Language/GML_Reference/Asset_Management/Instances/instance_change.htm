<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_change</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="instance_change 함수를 설명하는 페이지" />
  <meta name="rh-index-keywords" content="instance_change" />
  <meta name="search-keywords" content="instance_change" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>instance_change</h1><p> 이 기능을 사용하여 한 개체의 인스턴스를 다른 개체의 다른 인스턴스로 변경할 수 있으며, 그렇게 하는 동안 초기 인스턴스 Destroy 및 Clean Up Events와 새 인스턴스 Create Event를 수행할지 여부를 결정할 수 있습니다. 이런 식으로 (예를 들어) 폭탄을 폭발로 변경할 수 있습니다. 이 경우 &quot;perf&quot; 인수는 폭탄이 Destroy Event 및 Clean Up Event 및 폭발을 사용하여 생성 이벤트를 수행하거나 플레이어 캐릭터를 다른 캐릭터로 변경할 수 있습니다. 이 경우 인스턴스가 생성 및 파괴/정리 이벤트를 수행하는 것을 원하지 않기 때문에 &quot;perf&quot; 인수가 거짓일 수 있습니다.</p><p> 인스턴스를 변경한다는 것은 다음 단계까지, 특히 변수 등에 액세스하려고 시도할 때까지 해당 인스턴스에 대해 더 이상 작업을 수행하지 않아야 한다는 것을 의미한다는 점에 유의할 가치가 있습니다. 그렇게 하면 오류가 발생하기 때문입니다. 기본적으로 인스턴스를 변경하지만 현재 단계가 끝날 때까지 실제로 사용할 수 없으므로 포함된 변수에 직접 액세스하려면(예: <span class="inline">obj_Changed.x</span> ) 작동 안 할 것이다.</p><p class="note"> <b>경고!</b> 물리 활성화 인스턴스를 변경할 때 물리적 속성은 변경되는 새 인스턴스로 <b>이월되지 않습니다</b>. 따라서 현재 인스턴스의 물리적 상태를 새 인스턴스로 &quot;전송&quot;하는 코드가 있거나 Create Event 또는 개체 편집기에서 새 인스턴스의 물리적 속성을 정의해야 합니다. 이러한 이유로 물리 활성화된 인스턴스와 함께 이 기능을 사용하지 말고 다음 조합을 사용하는 것이 좋습니다.<span style="font-size:1px;"><span class="inline">instance_destroy()</span></span> 그리고 <span><span style="font-size:1px;"><span class="inline">instance_create_layer()</span></span>.</span></p><p></p><h4> 통사론:</h4><p class="code">instance_change(obj, perf);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">obj</span></td><td> <span data-keyref="Type_Asset_Object">개체 자산</span></td><td> <span class="notranslate">The new object the calling object will change into.</span></td></tr><tr><td> <span class="notranslate">perf</span></td><td> <span data-keyref="Type_Bool">부울</span></td><td> <span class="notranslate">Whether to perform that new object&#39;s Create and Destroy events (true) or not (false).</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p></p><h4> 예시:</h4><p class="code">if keyboard_check(vk_enter)<br />
    {<br />
        instance_change(obj_Player_Swimming, false);<br />
        exit;<br />
    }</p><p> 위의 코드는 원래 인스턴스 파괴 이벤트를 수행하지 않고 호출 인스턴스를 &quot;obj_Player_Swimming&quot; 인스턴스로 변경하거나 사용자가 &quot;Enter&quot; 키를 누를 때 새 인스턴스가 이벤트를 생성하고 완료되면 코드 블록을 종료합니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Instances.htm">인스턴스</a></div><div style="float:right"> 다음: <a href="instance_copy.htm"><span class="notranslate">instance_copy</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instance_change
-->
  <!-- TAGS
instance_change
-->
</body>
</html>