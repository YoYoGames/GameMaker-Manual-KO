<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_place</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="instance_place 함수를 설명하는 페이지" />
  <meta name="rh-index-keywords" content="instance_place" />
  <meta name="search-keywords" content="instance_place" />
  <meta name="is_pure" content="true" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>instance_place</h1><p> 이 기능을 사용하면 검사용 코드를 실행하는 인스턴스의 충돌 마스크를 사용하여 다른 인스턴스 또는 객체의 모든 인스턴스와의 충돌 위치를 확인할 수 있습니다. 이것을 사용하면 <span data-keyref="GameMaker Name">GameMaker</span> 에 인스턴스를 새 위치로 이동하고, 충돌을 확인하고, 뒤로 이동하여 충돌이 발견되었는지 여부를 알려주도록 효과적으로 요청하는 것입니다.</p><p> 이것은 정확한 충돌에 대해 작동하지만 확인 중인 개체와 인스턴스 모두에 정확한 충돌 마스크가 선택되어 있는 경우에만 그렇지 않으면 경계 상자 충돌만 적용됩니다.</p><p> 이 함수는 고유한 인스턴스를 반환합니다.<a href="Instance_Variables/id.htm"><span class="inline">id</span></a> 충돌하는 객체의 경우, 필요하지 않은 경우 함수를 사용하는 것이 약간 더 빠릅니다. <a href="../../Movement_And_Collisions/Collisions/place_meeting.htm"><span class="inline">place_meeting()</span></a>. 이 기능은 특수 키워드도 허용합니다. <span class="inline"><b>all</b></span> 그리고 <span class="inline"><b>other</b></span> <a href="../../../GML_Overview/Instance_Keywords.htm">키워드</a> 를 반환합니다 <span class="inline"><b>noone</b></span> 충돌이 발생하지 않은 경우 또는 충돌이 발생한 경우 발견된 인스턴스의 고유한 인스턴스 ID 값입니다.</p><p></p><h4> 통사론:</h4><p class="code">instance_place(x, y, obj);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">x</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The x position to check for instances.</span></td></tr><tr><td> <span class="notranslate">y</span></td><td> <span data-keyref="Type_Real">진짜</span></td><td> <span class="notranslate">The y position to check for instances.</span></td></tr><tr><td> <span class="notranslate">obj</span></td><td> <span data-keyref="Type_Asset_Object">개체 자산</span> 또는 <span data-keyref="Type_ID_Instance">인스턴스 ID</span></td><td> <span class="notranslate">The object to check for instances of.</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_ID_Instance">Instance ID</span> or <span data-keyref="Type_ID_noone">noone</span></p><p></p><h4> 예시:</h4><p class="code">var _inst = instance_place(x, y, obj_Enemy);<br />
    if _inst != noone<br />
    {<br />
        hp -= _inst.dmg;<br />
        instance_destroy(_inst);<br />
    }</p><p> 위의 코드는 &quot;obj_Enemy&quot; 인스턴스와의 충돌을 확인하고 충돌이 있는 경우 충돌하는 인스턴스의 &quot;dmg&quot; 변수에 저장된 양만큼 &quot;hp&quot; 변수를 줄인 다음 충돌하는 인스턴스를 파괴합니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Instances.htm">인스턴스</a></div><div style="float:right"> 다음: <a href="instance_place_list.htm"><span class="notranslate">instance_place_list</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instance_place
-->
  <!-- TAGS
instance_place
-->
</body>
</html>