<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_async_group_end</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="buffer_async_group_end에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="buffer_async_group_end" />
  <meta name="search-keywords" content="buffer_async_group_end" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>buffer_async_group_end</h1><p> 이 함수는 버퍼 비동기 그룹의 정의를 마칩니다. 이전에 함수를 호출했어야 합니다.<a href="buffer_async_group_begin.htm"><span class="inline">buffer_async_group_begin()</span></a> 그룹을 시작한 다음 함수를 호출합니다.<a href="buffer_save_async.htm"><span class="inline">buffer_save_async()</span></a> 저장하려는 각 파일에 대해(또는 <span class="inline"><a href="buffer_load_async.htm">buffer_load_async()</a></span> 버퍼를 로드하기 위해). 마지막으로 이 함수를 호출하면 파일 저장이 시작됩니다. 이 함수는 저장에 대한 고유 ID 값을 반환하며, 이 값을 <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Save_Load.htm">비동기 저장/로드 이벤트</a> 에서 사용하여 <a href="../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="notranslate">async_load</span></a> DS 맵에서 결과를 구문 분석할 수 있습니다.</p><p></p><h4> 통사론:</h4><p class="code">buffer_async_group_end();</p><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_ID_Async_Event"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm">Async Request ID</a></span></p><p></p><h4> 확장된 예:</h4><p> 그만큼 <span class="inline">buffer_async_group_end()</span> 함수는 모든 이벤트에서 호출할 수 있으며 비동기식이므로 콜백은 거의 즉각적이거나 몇 초가 걸릴 수 있습니다. 함수를 호출하는 것은 간단하며 다음과 같이 보일 것입니다.</p><p class="code">buffer_async_group_begin(&quot;SaveGame&quot;);<br />
    save1 = buffer_save_async(buff1, &quot;Player_Save1.sav&quot;, 0, 16384);<br />
    save2 = buffer_save_async(buff2, &quot;Player_Save2.sav&quot;, 0, 16384);<br />
    save3 = buffer_save_async(buff3, &quot;Player_Save3.sav&quot;, 0, 16384);<br />
    save4 = buffer_save_async(buff4, &quot;Player_Save4.sav&quot;, 0, 16384);<br />
    save_id = buffer_async_group_end();</p><p> 위의 코드는 버퍼 그룹을 시작한 다음 4개의 파일을 비동기적으로 저장하도록 설정합니다. 그런 다음 그룹 정의가 종료되고(이 시점에서 저장이 시작됨) 함수 호출의 ID를 변수 &quot; <i>save_id</i> &quot;에 저장합니다. 저장이 완료되면 비동기 저장/로드 이벤트가 트리거되고 파일을 구문 분석할 수 있습니다. <span class="inline">async_load</span> 다음과 같이 함수의 올바른 ID에 대한 맵:</p><p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == saveid<br />
    {<br />
        if (ds_map_find_value(async_load, &quot;status&quot;) == false) <br />
        {<br />
            show_debug_message(&quot;Save failed!&quot;);<br />
        }<br />
    }</p><p> 위의 코드는 먼저 생성된 DS 맵의 ID를 확인한 다음 콜백 상태를 확인하고 문제가 있으면 디버그 메시지를 게시합니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Buffers.htm">버퍼</a></div><div style="float:right"> 다음: <a href="buffer_copy.htm"><span class="notranslate">buffer_copy</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_async_group_end
-->
  <!-- TAGS
buffer_async_group_end
-->
</body>
</html>