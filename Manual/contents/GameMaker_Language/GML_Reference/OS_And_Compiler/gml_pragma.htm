<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gml_pragma</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="gml_pragma에 대한 참조 페이지" />
  <meta name="rh-index-keywords" content="gml_pragma" />
  <meta name="search-keywords" content="gml_pragma" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>gml_pragma</h1><p> 그만큼 <span class="inline">gml_pragma</span> 함수는 주어진 대상이 코드를 컴파일하는 방법에 영향을 미치며 프로젝트의 최종 컴파일을 추가로 최적화하기 위해 다른 명령과 함께 호출되어야 합니다. 이러한 명령은 게임이 컴파일되기 전에 효과적으로 <i>사전 처리</i> 되므로 함수를 프로젝트의 어느 곳에나 배치할 수 있으며 게임이 완전히 컴파일되기 전에 계속 처리됩니다. 사용 가능한 명령은 다음과 같습니다.</p><ul class="colour"><li> &quot; <b>forceinline</b> &quot; - <b>스크립트 함수</b> 에서 &quot;forceinline&quot; pragma를 사용하여 함수를 호출하면 YYC는 참조가 아닌 인라인 함수로 프로젝트를 컴파일합니다. 이렇게 하면 처리 성능이 더 향상되지만, 특히 인라인 코드가 크거나 여러 위치에서 사용되는 경우 최종 실행 파일 크기도 부풀릴 수 있으므로 사용할 때 주의해야 합니다. 컴파일 시간. 이 pragma는 <b>YYC를 사용하여 빌드할 때만 유효합니다</b>.</li><li> &quot; <b>global</b> &quot;, &quot; <b>[gml code]</b> &quot; - &quot;global&quot; pragma를 사용하면 게임의 첫 번째 방이 실행되기 전에 컴파일 시간에 <b>전역</b> 범위에서 문자열 형식의 일부 GML 코드를 호출할 수 있습니다. 예를 들어:<p class="code">gml_pragma(&quot;global&quot;, &quot;Init()&quot;);</p> 이것은 게임의 첫 번째 방이 실행되기 전에 스크립트 함수 &quot;초기화&quot;를 호출합니다. 두 번째 인수로 제공되는 GML <b>은 컴파일 시간 상수여야 하며</b>, 이 pragma를 사용하여 인스턴스를 생성하거나 공간(또는 방에 있는 모든 것)이 작동해야 하는 작업을 수행할 수 없습니다.</li><li> &quot; <b>PNGCrush</b> &quot; - &quot;PNGCrush&quot; 프라그마는 생성된 각 텍스처에 <a href="https://pmt.sourceforge.io/pngcrush/" target="_blank">PNGCrush</a> 프로그램을 사용합니다. 이렇게 하면 게임을 컴파일하는 데 걸리는 시간이 크게 늘어날 수 있으므로 최종 파일 크기를 크게 줄일 수는 있지만 항상 켜고 싶지는 않습니다. 이 옵션은 PNG 형식을 사용하는 텍스처 그룹에만 적용됩니다( <a data-xref="{text}" href="../../../Settings/Texture_Groups.htm#h">그룹 설정</a> 참조).</li><li> &quot; <b>Texgroup.Scale</b> &quot;, &quot; <b>[TextureGroupName]</b> &quot;, &quot; <b>[Scale Divisor]</b> &quot; - &quot;Texgroup.Scale&quot;은 컴파일 시 주어진 텍스처 그룹의 크기를 조정합니다. 여기에 추가로 두 개의 인수를 제공해야 합니다. &quot;[TexGroupName]&quot;은 스케일할 텍스처 그룹의 이름(문자열)이고, &quot;[Scale Divisor]&quot;(역시 문자열)는 제수입니다. 스케일링에 사용하려는 경우, 즉:<p class="code">gml_pragma(&quot;Texgroup.Scale&quot;, &quot;level1&quot;, &quot;2&quot;);</p> 이것은 &quot;level1&quot; 텍스처 그룹의 모든 텍스처를 절반으로 만듭니다.</li><li> &quot; <b>UnityBuild</b> &quot;, &quot; <b>[enable/disable]</b> &quot; - 이 pragma로 함수를 호출하고 enable/disable 인수를 다음으로 설정하는 경우 <span class="inline">true</span> 그런 다음 컴파일할 때 프로젝트의 모든.cpp 파일을 단일 파일로 축소한 다음 모든 것을 빌드하는 데 사용합니다. 예를 들면 다음과 같습니다.<p class="code">gml_pragma(&quot;UnityBuild&quot;, &quot;true&quot;);</p> Unity 빌드를 수행하는 이점은 빌드가 더 빠르다는 것이지만 단점은 매번 <i>전체</i> 빌드를 수행하므로 코드의 한 부분을 변경하더라도 캐시된 파일을 사용하지 않고 모든 것을 다시 빌드한다는 점입니다. 이것은 YYC를 사용하는 Xbox One 내보내기를 위해 특별히 추가되었지만 다른 빌드( <b>YYC만 해당</b> )에 대해 호출할 수 있습니다. Unity 빌드에 대한 자세한 내용은 <a href="http://buffered.io/posts/the-magic-of-unity-builds/" target="_blank">여기</a> 를 참조하세요.</li></ul><p class="note"> <b>참고</b>: 첫 번째 인수는 <span class="inline">gml_pragma</span> 함수는 변수가 아니라 <b>컴파일 시간 문자열 상수여야 합니다</b>.</p><p></p><h4> 통사론:</h4><p class="code">gml_pragma(command, [optional...]);</p><table><tbody><tr><th> 논쟁</th><th> 유형</th><th> 설명</th></tr><tr><td> <span class="notranslate">command</span></td><td> <span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">끈</a></span></td><td> <span class="notranslate">A string with one of the commands listed above.</span></td></tr><tr><td> <span class="notranslate">[optional]</span></td><td> <span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">끈</a></span></td><td> <span class="notranslate">Some of the available commands require an optional argument or arguments. These are explained above for each command.</span></td></tr></tbody></table><p></p><h4> 보고:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p></p><h4> 예시:</h4><p class="code">gml_pragma(&quot;forceinline&quot;);</p><p> 위의 예제 코드는 컴파일 시 인라인되는 데 사용되는 스크립트 함수를 강제 실행합니다. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="OS_And_Compiler.htm">OS와 컴파일러</a></div><div style="float:right"> 다음: <a href="parameter_count.htm"><span class="notranslate">parameter_count</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gml_pragma
-->
  <!-- TAGS
gml_pragma
-->
</body>
</html>