<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>제스처 이벤트</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="제스처 이벤트를 자세히 설명하는 페이지입니다." />
  <meta name="rh-index-keywords" content="개체 - 제스처 이벤트,event_data" />
  <meta name="search-keywords" content="영화,팬,회전,몸짓,제스처 이벤트,수도꼭지" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> 제스처 이벤트</h1><p><img alt="The Gesture Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Gesture.png" /></p><p> Gesture Event 카테고리의 이벤트는 <span data-keyref="GameMaker Name">GameMaker</span> 가 마우스의 &quot;제스처&quot; 또는 터치 스크린 이벤트를 감지할 때마다 트리거됩니다(이러한 제스처 이벤트는 모바일 사용을 위해 특별히 설계되었지만 마우스를 감지하기 위해 다른 대상에서도 사용할 수 있습니다. 이 경우 다중 터치를 감지하지 않습니다.) 제스처 시스템의 목표는 직접 마우스\터치 읽기 기능보다 높은 수준에서 입력을 시도하고 인식하는 것이며 터치 기반 장치에서 일반적으로 사용되는 입력의 구현을 단순화하도록 설계되었습니다.</p><p class="note"> <span class="note">참고</span> 이러한 이벤트는 해당 플랫폼에서 이러한 이벤트를 사용하는 멀티터치에 대한 지원이 부족하기 때문에 HTML5 플랫폼에서 트리거되지 않습니다. 해당 대상에서 제스처를 찾고 있다면 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/Device_Input.htm">장치 기능</a> 을 사용해야 합니다.</p><p> <strong>인스턴스</strong> 제스처 또는 <strong>전역</strong> 제스처를 감지하도록 선택할 수 있습니다. 여기서 인스턴스 제스처 이벤트는 최초 터치/클릭이 룸 내의 인스턴스에 있을 때만 트리거됩니다. 이 이벤트가 트리거되려면 인스턴스에 유효한 충돌 마스크가 있어야 합니다(자세한 내용 <a href="../Sprites.htm">은 스프라이트 편집기 - 충돌 마스크</a> 및 <a href="../Objects.htm">개체 편집기 - 충돌 마스크</a> 섹션 참조). 그러나 전역 이벤트는 게임 룸 내의 아무 곳이나 터치하거나 클릭하면 그리고 이벤트가 있는 모든 인스턴스에 대해 트리거됩니다.</p><p> 제스처가 인식되면 사용 가능한 이벤트 중 하나 이상을 트리거하고 트리거된 이벤트는 감지된 제스처 유형에 따라 달라집니다. 그러나 모든 경우에 <a href="../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> 이 생성되어 내장 변수에 저장됩니다. <span class="inline">event_data</span>. 사용 가능한 키는 생성된 이벤트의 종류에 따라 달라지며 아래의 각 하위 섹션에 표시됩니다.</p><p class="note"> <strong>참고</strong>: 변수 <span class="inline">event_data</span> 가리키는 DS 맵은 이벤트 시작 시 자동으로 생성된 다음 종료 시 다시 소멸되며 이 변수는 다른 모든 시간에 -1 값으로 재설정되기 때문에 이러한 이벤트에서만 유효합니다.</p><p> 터치되는 위치 아래에 여러 인스턴스가 있고 모두 제스처 이벤트가 있는 경우 &quot;최상위&quot; 인스턴스뿐만 아니라 <em>모든</em> 인스턴스가 트리거됩니다. 또한 여러 카메라 보기를 사용하고 인스턴스를 드래그할 때 반환되는 값은 초기 터치/클릭이 수신되었을 때 있었던 보기를 기반으로 합니다. 이는 해당 인스턴스에 대한 해당 제스처의 모든 후속 이벤트에 적용됩니다. 따라서 한 보기에서 인스턴스를 터치하고 드래그한 다음 다른 보기에서 터치를 놓으면 제스처가 처음 감지된 초기 보기와 관련된 값이 반환됩니다.</p><p></p><p><img height="20" src="../../assets/Images/Icons/Icon_Tap.png" style="margin-left:0px" width="20" /><img src="../../assets/Images/Icons/Icon_Drag.png" /><img src="../../assets/Images/Icons/Icon_Flick.png" /> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">탭, 드래그 및 플릭 이벤트</a></p><div class="droptext" data-targetname="drop-down"><p class="dropspot"> &quot;Tap&quot;, &quot;Drag&quot; 및 &quot;Flick&quot; 이벤트는 모두 화면에 대한 단일 터치 또는 마우스 클릭을 기반으로 하며 <span class="inline">event_data</span> DS Map에는 다음 키가 포함됩니다.</p><ul class="dropspotlist"></ul><table class=" cke_show_border"><tbody><tr><th> 열쇠</th><th> 설명</th></tr><tr><td> <span class="notranslate">&quot;<span class="inline">gesture</span> &quot;</span></td><td><br /> 재생 중인 제스처에 <i>고유한</i> ID 값입니다. 이를 통해 여러 부분으로 구성된 제스처(예: 드래그 시작, 드래그 및 드래그 종료)의 서로 다른 부분을 함께 연결할 수 있습니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">touch</span> &quot;</span></td><td><br /> 이것은 제스처에 사용되는 터치의 인덱스입니다. 일반적으로 이것은 0에서 시작하여 누르고 있는 각 손가락에 대해 증가하고 모든 손가락을 떼면 다시 0으로 재설정되지만 다른 터치에 의해 이 이벤트가 트리거될 때 사용자가 다른 곳에서 화면을 터치하는 경우 값 0보다 클 것입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">posX</span> &quot;</span></td><td><br /> 터치의 방 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">posY</span> &quot;</span></td><td><br /> 이것은 터치의 공간 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">rawposX</span> &quot;</span></td><td><br /> 이것은 터치의 <i>원시</i> 창 공간 X 위치입니다(다음을 사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><span class="inline">device_mouse_raw_x()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">rawposY</span> &quot;</span></td><td><br /> 이것은 터치의 <i>원시</i> 창 공간 Y 위치입니다(다음을 사용하여 마우스 위치를 얻는 것과 같습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><span class="inline">device_mouse_raw_y()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">guiposX</span> &quot;</span></td><td><br /> 이것은 터치의 gui-space X 위치입니다(사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><span class="inline">device_mouse_x_to_gui()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">guiposY</span> &quot;</span></td><td><br /> 이것은 터치의 gui-space Y 위치입니다(사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><span class="inline">device_mouse_y_to_gui()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">diffX</span> &quot;</span></td><td><br /> 이것은 현재 터치 위치와 이 제스처에서 마지막 터치 위치 간의 공간 공간 X 차이입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">diffY</span> &quot;</span></td><td><br /> 이것은 이 제스처에서 현재 터치의 위치와 마지막 터치의 위치 사이의 공간 공간 Y 차이입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">rawdiffX</span> &quot;</span></td><td><br /> 이것은 현재 터치 위치와 이 제스처에서 마지막 터치 위치 간의 원시 X 차이입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">rawdiffY</span> &quot;</span></td><td><br /> 이것은 현재 터치 위치와 이 제스처에서 마지막 터치 위치 간의 원시 Y 차이입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">guidiffX</span> &quot;</span></td><td><br /> 이것은 현재 터치 위치와 이 제스처에서 마지막 터치 위치 간의 gui-space X 차이입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">guidiffY</span> &quot;</span></td><td><br /> 이것은 현재 터치 위치와 이 제스처에서 마지막 터치 위치 간의 gui-space Y 차이입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">viewstartposX</span> &quot;</span></td><td><br /> 이것은 현재 제스처의 룸 X 시작 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">viewstartposY</span> &quot;</span></td><td><br /> 이것은 현재 제스처의 룸 Y 시작 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">rawstartposX</span> &quot;</span></td><td><br /> 이것은 현재 제스처의 원시 X 시작 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">rawstartposY</span> &quot;</span></td><td><br /> 이것은 현재 제스처의 원시 Y 시작 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">guistartposX</span> &quot;</span></td><td><br /> 이것은 현재 제스처의 gui-space X 시작 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">guistartposY</span> &quot;</span></td><td><br /> 이것은 현재 제스처의 gui-space Y 시작 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;<span class="inline">isflick</span> &quot;</span></td><td> <b><br />드래그 엔드 이벤트에서만 사용할 수 있습니다</b>. 드래그의 끝이 플릭으로 감지되면 1로 설정됩니다. 즉, 어쨌든 드래그를 처리하는 경우 별도의 <b>플릭 이벤트</b> 가 필요하지 않습니다.</td></tr></tbody></table><p></p><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">수도꼭지</a></p><div class="droptext" data-targetname="drop-down11"><p class="dropspot"> Tap 이벤트는 인스턴스가 터치되거나 클릭되었을 때 또는 - 글로벌 이벤트인 경우 - 게임이 방의 아무 곳이나 터치 또는 클릭을 등록할 때 트리거됩니다. 탭은 빠른 터치 및 해제로 간주되며 터치가 너무 오래 지속되면 드래그로 간주됩니다(탭 이벤트 대신 드래그 제스처 이벤트를 트리거함). 이 이벤트는 <span class="inline">event_data</span> 이벤트에 대한 정보를 얻는 데 사용할 수 있는 DS 맵. 예를 들어:</p><h4> 이벤트 생성</h4><p class="code">x_goto = x;<br /> y_goto = y;</p><h4> 탭 이벤트</h4><p class="code">x_goto = event_data[? &quot;posX&quot;];<br /> y_goto = event_data[? &quot;posY&quot;];</p><h4> 단계 이벤트</h4><p class="code">var _pd = point_distance(x, y, x_goto, y_goto);<br /> move_towards_point(x_goto, y_goto, clamp(_pd, 0, 5);</p><p class="dropspot"> 위의 코드는 화면의 탭을 감지한 다음 탭의 위치를 가져와 인스턴스를 해당 위치로 이동합니다. 탭 감지 시간을 더 길거나 짧게 하려면 기능으로 설정할 수 있습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_time.htm"><span class="inline">gesture_drag_time()</span></a>. 이것은 초기 감지와 탭이 드래그가 되는 사이의 시간을 설정하므로 탭 감지를 길게 하려면 더 높은 값으로 설정하고 더 짧게 하려면 더 낮은 값으로 설정하십시오(값은 초 단위이며 기본값은 0.16).</p><p class="dropspot"></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">더블 탭</a></p><div class="droptext" data-targetname="drop-down6"><p class="dropspot"> Double Tap 이벤트는 인스턴스가 연속해서 빠르게 두 번 터치되거나 클릭될 때 트리거됩니다(또는 - 글로벌 이벤트인 경우 - 게임이 방의 아무 곳이나 두 번의 빠른 터치 또는 클릭을 등록할 때). 더블 탭은 두 번의 빠른 터치 및 해제로 간주되지만 터치 중 하나라도 너무 오래 지속되면 드래그로 간주됩니다(더블 탭 이벤트 대신 드래그 제스처 이벤트 트리거). 이 이벤트는 <span class="inline">event_data</span> 이벤트에 대한 정보를 얻는 데 사용할 수 있는 DS 맵. 예를 들어:</p><h4> 이벤트 생성</h4><p class="code">x_goto = x;<br /> y_goto = y;</p><h4> 더블 탭 이벤트</h4><p class="code">instance_destroy();</p><p class="dropspot"> 위의 코드는 단순히 더블 탭을 감지한 다음 인스턴스를 파괴합니다. 기능을 사용하여 두 번 탭을 트리거하도록 탭 사이의 시간을 설정할 수 있습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_double_tap_time.htm"><span class="inline">gesture_double_tap_time()</span></a> (초 단위의 기본값은 0.16)이며 기능을 사용하여 탭 사이의 감지 거리를 설정할 수도 있습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_double_tap_distance.htm"><span class="inline">gesture_double_tap_distance()</span></a> (이 거리 밖에서 두 번째 탭이 감지되면 일반 탭 이벤트로 간주됩니다.)</p><p class="dropspot"></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">드래그 시작</a></p><div class="droptext" data-targetname="drop-down7"><p class="dropspot"> 드래그 시작 이벤트는 사용자가 손을 떼지 않고 터치 또는 클릭을 유지하면 트리거됩니다. 초기 터치 후 설정 시간(기본값 0.16초)이 경과하면 한 번 트리거됩니다(이 기능을 사용하여 초 단위로 다른 값으로 설정할 수 있지만 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_time.htm"><span class="inline">gesture_drag_time()</span></a> ). 이 이벤트가 트리거된 후 사용자가 터치/클릭을 누르고 있으면 터치/클릭이 해제될 때까지 모든 단계에서 Dragging 이벤트가 트리거됩니다. 이 이벤트는 <span class="inline">event_data</span> 이벤트에 대한 정보를 얻는 데 사용할 수 있는 DS 맵. 예를 들어:</p><h4> 이벤트 생성</h4><p class="code">drag_offsetX = 0;<br /> drag_offsetY = 0;</p><h4> 드래그 시작 이벤트</h4><p class="code">drag_offsetX = x - event_data[?&quot;posX&quot;];<br /> drag_offsetY = y - event_data[?&quot;posY&quot;];</p><p class="dropspot"> 위의 코드는 드래그 시작 이벤트를 사용하여 터치/클릭의 위치를 가져오고 이를 사용하여 x 및 y 축에 대한 오프셋 값을 설정합니다. 그런 다음 인스턴스를 드래그하여 터치/클릭이 감지된 위치로 &quot;점프&quot;하지 않도록 할 수 있습니다(이 예제에 대한 계속되는 아래의 Dragging 이벤트 참조).</p><p class="dropspot"></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">질질 끄는</a></p><div class="droptext" data-targetname="drop-down8"><p class="dropspot"> Dragging 이벤트는 Drag Start 이벤트 이후에 트리거되며, 사용자가 인스턴스(또는 글로벌 이벤트인 경우 화면)에 대한 터치/클릭을 유지하고 정의된 드래그 임계값 이상으로 이동하는 모든 단계에 대해 트리거됩니다. 이 거리는 기본적으로 0.1인치이지만 기능을 사용하여 설정할 수 있습니다.<a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_distance.htm"><span class="inline">gesture_drag_distance()</span></a>. 움직임이 없거나 움직임이 정의된 임계값 미만이면 이벤트가 트리거되지 않습니다. 이 이벤트는 <span class="inline">event_data</span> 이벤트에 대한 정보를 얻는 데 사용할 수 있는 DS 맵. 예를 들어:</p><h4> 이벤트 생성</h4><p class="code">drag_offsetX = 0;<br /> drag_offsetY = 0;</p><h4> 드래그 시작 이벤트</h4><p class="code">drag_offsetX = x - event_data[?&quot;posX&quot;];<br /> drag_offsetY = y - event_data[?&quot;posY&quot;];</p><h4> 드래그 이벤트</h4><p class="code">x = event_data[?&quot;posX&quot;] + drag_offsetX;<br /> y = event_data[?&quot;posY&quot;] + drag_offsetY;</p><p class="dropspot"> 위의 예제 코드는 Drag Start 이벤트에 설정된 오프셋 변수를 사용하여 Dragging 이벤트가 트리거될 때 인스턴스를 이동합니다.</p><p class="dropspot"></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">드래그 엔드</a></p><div class="droptext" data-targetname="drop-down9"><p class="dropspot"> Drag End 이벤트는 사용자가 인스턴스(또는 이벤트가 전역인 경우 화면)에서 터치/클릭을 놓을 때 트리거됩니다. 이 이벤트는 <span class="inline">event_data</span> 이벤트에 대한 정보를 얻는 데 사용할 수 있는 DS 맵이지만 이 경우 맵에 추가 키가 있습니다. &quot;<span class="inline">isflick</span> &quot;. 플릭은 드래그가 발생한 초당 거리로 계산되며 &quot;<span class="inline">isflick</span> &quot; 키는 정의된 초당 거리 값보다 크면 true이고 그렇지 않으면 false입니다. 기본값은 초당 2인치이지만 함수를 사용하여 다른 값으로 설정할 수 있습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_flick_speed.htm"><span class="inline">gesture_flick_speed()</span></a>. 또한 &quot;isflick&quot; 변수가 true인 경우에도 트리거되는 전용 Flick 이벤트가 있습니다. 사용 예는 다음과 같습니다.</p><h4> 이벤트 생성</h4><p class="code">flickVelX = 0.0;<br /> flickVelY = 0.0;</p><h4> 드래그 종료 이벤트</h4><p class="code">isFlick = event_data[?&quot;isflick&quot;];<br /> if (isFlick)<br />     {<br />     flickVelX = event_data[?&quot;diffX&quot;];<br />     flickVelY = event_data[?&quot;diffY&quot;];<br />     }<br /> else
        <br />     {<br />     flickVelX = 0;<br />     flickVelY = 0;<br />     }
      </p><h4> 단계 이벤트</h4><p class="code">x += flickVelX;<br /> y += flickVelY;<br /> flickVelX *= 0.7;<br /> flickVelY *= 0.7;</p><p class="dropspot"> 위의 코드는 단순히 마지막 Dragging 이벤트와 현재 Drag End 이벤트의 x 및 y 위치의 차이를 가져오고 이동이 플릭 임계값보다 큰 경우 인스턴스를 이동하는 데 사용되는 일부 변수를 설정합니다. 스텝 이벤트.</p><p class="dropspot"></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">영화</a></p><div class="droptext" data-targetname="drop-down10"><p class="dropspot"> Flick 이벤트는 터치/클릭을 누른 상태에서 드래그한 다음 떼고 마지막 드래그 위치와 해제 위치 사이의 거리가 초당 2인치보다 큰 경우에만 트리거됩니다(변경할 수 있지만 기본 설정입니다. 기능을 사용하여 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_flick_speed.htm"><span class="inline">gesture_flick_speed()</span></a> ). 이 이벤트는 <span class="inline">event_data</span> 이벤트에 대한 정보를 얻는 데 사용할 수 있는 DS 맵. 예를 들어:</p><h4> 이벤트 생성</h4><p class="code">flickVelX = 0.0;<br /> flickVelY = 0.0;</p><h4> 플릭 이벤트</h4><p class="code">flickVelX = event_data[?&quot;diffX&quot;];<br /> flickVelY = event_data[?&quot;diffY&quot;];</p><h4> 단계 이벤트</h4><p class="code">x += flickVelX;<br /> y += flickVelY;<br /> flickVelX *= 0.7;<br /> flickVelY *= 0.7;</p><p class="dropspot"> 위의 코드는 단순히 마지막 Dragging 이벤트와 현재 Flick 이벤트의 x 및 y 위치의 차이를 가져오고, 움직임이 flick 임계값보다 크면 단계에서 인스턴스를 이동하는 데 사용되는 일부 변수를 설정합니다. 이벤트.</p></div><p></p></div><p><img src="../../assets/Images/Icons/Icon_Pinch.png" style="margin-left: 60px" /> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">핀치 이벤트</a></p><div class="droptext" data-targetname="drop-down2"><p class="dropspot"> &quot;핀치&quot; 이벤트는 한 번에 인식되는 장치 화면에 대한 두 번의 터치를 기반으로 하며 하나(또는 둘 다)가 특정 거리 이상 이동했습니다. 각 터치의 움직임과 함께 터치의 움직임 각도는 핀치 또는 회전 이벤트의 감지를 결정합니다. 여기서 (핀치 이벤트 유형의 경우):</p><ul class="dropspotlist"><li class="dropspot"> 터치 중 하나가 움직이지 않으면 다른 하나는 임계 각도(함수를 사용하여 설정할 수 있음) 내에서 터치 쪽으로 이동하거나 멀어져야 합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_towards.htm"><span class="inline">gesture_pinch_angle_towards()</span></a> 그리고 - <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_away.htm"><span class="inline">gesture_pinch_angle_away()</span></a> ).</li><li class="dropspot"> 두 터치가 모두 움직이는 경우 속도는 대략 반대 방향이어야 하며 터치가 대략적인 정렬로 움직이는지 확인하기 위해 동일한 각도 임계값 검사도 수행됩니다.</li></ul><p class="dropspot"> 위의 기준으로 두 번의 터치와 움직임이 감지되면 핀치 이벤트가 발생하고 각 이벤트에서 <span class="inline">event_data</span> DS Map은 다음 키로 채워집니다.</p><ul class="dropspotlist"></ul><table class=" cke_show_border"><tbody><tr><th> 열쇠</th><th> 설명</th></tr><tr><td> <span class="notranslate">&quot;gesture&quot;</span></td><td><br /> 재생 중인 제스처에 <i>고유한</i> ID 값입니다. 이를 통해 여러 부분으로 구성된 제스처(예: 드래그 시작, 드래그 및 드래그 종료)의 서로 다른 부분을 함께 연결할 수 있습니다.</td></tr><tr><td> <span class="notranslate">&quot;touch1&quot;</span></td><td><br /> 핀치 제스처의 일부로 사용되는 첫 번째 터치의 인덱스입니다. 일반적으로 이것은 0이지만 이 이벤트가 다른 터치에 의해 트리거될 때 사용자가 다른 곳에서 화면을 터치하는 경우 값은 0보다 큽니다.</td></tr><tr><td> <span class="notranslate">&quot;touch2&quot;</span></td><td><br /> 핀치 제스처의 일부로 사용되는 두 번째 터치의 인덱스입니다. 일반적으로 이것은 touch1의 값보다 1이 더 크지만 다른 곳에서 감지되는 터치의 수에 따라 다른 값이 될 수도 있습니다.</td></tr><tr><td> <span class="notranslate">&quot;posX1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 공간 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;posY1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 공간 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawposX1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 <i>원시</i> 창 공간 X 위치입니다(다음을 사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><span class="inline">device_mouse_raw_x()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;rawposY1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 <i>원시</i> 창 공간 Y 위치입니다(다음을 사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><span class="inline">device_mouse_raw_y()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;guiposX1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 gui-space X 위치입니다(사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><span class="inline">device_mouse_x_to_gui()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;guiposY1&quot;</span></td><td><br /> 이것은 두 번째 터치의 gui 공간 Y 위치입니다(다음을 사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><span class="inline">device_mouse_y_to_gui()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;posX2&quot;</span></td><td><br /> 이것은 두 번째 터치의 공간 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;posY2&quot;</span></td><td><br /> 이것은 두 번째 터치의 공간 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawposX2&quot;</span></td><td><br /> 이것은 첫 번째 터치의 <i>원시</i> 창 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawposY2&quot;</span></td><td><br /> 이것은 두 번째 터치의 <i>원시</i> 창 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;guiposX2&quot;</span></td><td><br /> 두 번째 터치의 gui-space X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;guiposY2&quot;</span></td><td><br /> 이것은 두 번째 터치의 gui 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;midpointX&quot;</span></td><td><br /> 공간 공간에서 두 터치 사이의 중간점의 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;midpointY&quot;</span></td><td><br /> 공간 공간에서 두 터치 사이의 중간 지점의 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawmidpointX&quot;</span></td><td><br /> 이것은 중간 지점의 원시 창 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawmidpointY&quot;</span></td><td><br /> 이것은 중간 지점의 원시 창 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;guimidpointX&quot;</span></td><td><br /> 이것은 중간 지점의 gui-space X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;guimidpointY&quot;</span></td><td><br /> 이것은 중간 지점의 gui 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;relativescale&quot;</span></td><td><br /> 이것은 이 제스처의 마지막 이벤트와 비교한 스케일의 차이입니다(따라서 <b>핀치 인</b> 이벤트의 경우 이것은 항상 1.0보다 작을 것이고 <b>핀치 아웃</b> 이벤트의 경우 항상 1.0보다 클 것입니다)</td></tr><tr><td> <span class="notranslate">&quot;absolutescale&quot;</span></td><td><br /> 이것은 제스처가 시작되었을 때 손가락이 있었던 위치와 비교한 척도입니다(따라서 손가락 사이의 거리가 반으로 줄어들면 0.5가 되고 거리가 두 배인 경우 2.0이 됨).</td></tr></tbody></table><p class="dropspot"></p><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">핀치 시작</a></p><div class="droptext" data-targetname="drop-down12"><p class="dropspot"> Pinch Start 이벤트는 인스턴스(또는 이벤트가 전역인 경우 화면)가 두 개의 &quot;손가락&quot;으로 터치되고(터치가 유지됨) &quot;손가락&quot; 중 하나 또는 둘 모두가 이동될 때 트리거됩니다. 터치가 최소 확인 거리(기본적으로 0.1인치이지만 기능을 사용하여 설정할 수 있음) 이상으로 서로 멀어지거나 서로를 향해 이동하는 경우 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_distance.htm"><span class="inline">gesture_pinch_distance()</span></a> ), 그리고 그들 사이의 각도는 정의된 값 내에 있습니다(기본값은 45°이지만 다음을 사용하여 설정할 수 있습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_towards.htm"><span class="inline">gesture_pinch_angle_towards()</span></a> 그리고 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_away.htm"><span class="inline">gesture_pinch_angle_away()</span></a> ), 핀치 시작 이벤트가 트리거됩니다. 이 경우 나중에 사용할 수 있도록 변수를 설정하거나 위치 날짜를 저장할 수 있습니다. 예를 들어:</p><h4> 핀치 시작 이벤트</h4><p class="code">pinching = true;<br /> pinch_x = event_data[? &quot;midpointX&quot;]; pinch_y = event_data[? &quot;midpointY&quot;];</p><p class="dropspot"> 위의 코드는 핀치를 감지하고 해당 핀치의 중간점 위치를 저장합니다.</p><p class="dropspot"></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#">핀치 인 / 핀치 아웃</a></p><div class="droptext" data-targetname="drop-down13"><p class="dropspot"> 핀치 인 및 핀치 아웃 이벤트는 핀치를 구성하는 두 터치 사이의 거리가 최소 임계값(기본적으로 +/- 0.1인치로 설정되지만 함수 제스처_pinch_distance를 사용하여 변경할 수 있음)을 초과하여 변경되는 모든 단계에서 트리거됩니다.. 핀치 터치의 움직임이 없으면 이러한 이벤트가 트리거되지 않습니다. 이러한 이벤트는 <span class="inline">event_data</span> 이벤트에 대한 정보를 얻는 데 사용할 수 있는 DS 맵. 예를 들어:</p><h4> 글로벌 핀치인/핀치아웃 이벤트</h4><p class="code">var _scale = event_data[? &quot;relativescale&quot;];<br /> var _w = camera_get_view_width(view_camera[0]);<br /> var _h = camera_get_view_height(view_camera[0]);<br /> var _x = camera_get_view_x(view_camera[0]) + (_w / 2);<br /> var _y = camera_get_view_y(view_camera[0])
        + (_h / 2);<br />
        <br /> _w *= _scale;<br /> _h = _w * (room_height / room_width);<br /> _x -= _w / 2;<br /> _y -= _h / 2;<br />
        <br /> camera_set_view_pos(view_camera[0], _x, _y);<br /> camera_set_view_size(view_camera[0], _w, _h);
      </p><p class="dropspot"> 위의 코드는 핀치 터치의 상대적인 크기를 기반으로 보기의 크기를 조정합니다.</p><p class="dropspot"></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#">핀치 엔드</a><strong></strong></p><div class="droptext" data-targetname="drop-down14"><p class="dropspot">Pinch End 이벤트는 사용자가 장치에서 터치 중 하나(또는 둘 다)를 놓을 때 트리거됩니다. 이 이벤트는 <span class="inline">event_data</span> 이벤트에 대한 정보를 얻는 데 사용할 수 있는 DS 맵. 예를 들어:</p><h4> 핀치 엔드 이벤트</h4><p class="code">var _pinchx = event_data[? &quot;midpointX&quot;];<br /> var _pinchy = event_data[? &quot;midpointY&quot;];<br /> var _w = camera_get_view_width(view_camera[0]);<br /> var _h = camera_get_view_height(view_camera[0]);<br /> var _x = _pinchx - (_w / 2);<br /> var _y = _pinchy - (_h / 2);<br />
        <br /> camera_set_view_pos(view_camera[0], _x, _y);
      </p><p class="dropspot"> 위의 코드는 터치가 해제될 때 핀치를 구성한 두 터치의 중간점을 중심으로 보기 위치를 설정합니다.</p><p><strong></strong></p></div><p class="dropspot"></p></div><p><img src="../../assets/Images/Icons/Icon_Rotate.png" style="margin-left: 56px" /> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down15" href="#">이벤트 회전</a></p><div class="droptext" data-targetname="drop-down15"><p class="dropspot"> &quot;회전&quot; 이벤트는 한 번에 인식되는 장치 화면에 대한 두 번의 터치를 기반으로 하며 특정 시간 내에 둘 사이에 일정한 각도 회전이 있었던 경우입니다. 각 터치의 움직임과 함께 터치의 움직임 각도는 핀치 또는 회전 이벤트의 감지를 결정합니다. 여기서 (회전 이벤트 유형의 경우):</p><ul class="dropspotlist"><li class="dropspot"> 지정된 최소 시간 동안 두 번 터치를 누르고 있어야 합니다(기본 시간은 0.16초이지만 기능을 사용하여 변경할 수 있습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_time.htm"><span class="inline">gesture_rotate_time()</span></a> ).</li><li class="dropspot"> 이 최소 시간 내에 일관된 방향으로 회전해야 합니다(회전 방향이 해당 시간 내에 변경되면 회전이 시작되지 않음).</li><li class="dropspot"> 회전량은 최소 임계 각도(기본적으로 5°로 설정되어 있지만 기능을 사용하여 변경할 수 있음)를 초과해야 합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a> ).</li></ul><p class="dropspot"> 위의 기준으로 두 번의 터치와 움직임이 감지되면 회전 이벤트가 발생하고 각 이벤트에서 <span class="inline">event_data</span> DS Map은 다음 키로 채워집니다.</p><ul class="dropspotlist"></ul><table class=" cke_show_border"><tbody><tr><th> 열쇠</th><th> 설명</th></tr><tr><td> <span class="notranslate">&quot;gesture&quot;</span></td><td><br /> 재생 중인 제스처에 <i>고유한</i> ID 값입니다. 이렇게 하면 여러 부분으로 구성된 제스처(예: 끌기 시작, 끌기 및 끌기 끝)의 다른 부분을 함께 연결할 수 있습니다.</td></tr><tr><td> <span class="notranslate">&quot;touch1&quot;</span></td><td><br /> 핀치 제스처의 일부로 사용되는 첫 번째 터치의 인덱스입니다. 일반적으로 이것은 0이지만 이 이벤트가 다른 터치에 의해 트리거될 때 사용자가 다른 곳에서 화면을 터치하는 경우 값은 0보다 큽니다.</td></tr><tr><td> <span class="notranslate">&quot;touch2&quot;</span></td><td><br /> 핀치 제스처의 일부로 사용되는 두 번째 터치의 인덱스입니다. 일반적으로 이것은 touch1의 값보다 1이 더 크지만 다른 곳에서 감지되는 터치의 수에 따라 다른 값이 될 수도 있습니다.</td></tr><tr><td> <span class="notranslate">&quot;posX1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 공간 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;posY1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 공간 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawposX1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 <i>원시</i> 창 공간 X 위치입니다(다음을 사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><span class="inline">device_mouse_raw_x()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;rawposY1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 <i>원시</i> 창 공간 Y 위치입니다(다음을 사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><span class="inline">device_mouse_raw_y()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;guiposX1&quot;</span></td><td><br /> 이것은 첫 번째 터치의 gui-space X 위치입니다(사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><span class="inline">device_mouse_x_to_gui()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;guiposY1&quot;</span></td><td><br /> 이것은 두 번째 터치의 gui 공간 Y 위치입니다(다음을 사용하여 마우스 위치를 얻는 것과 동일합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><span class="inline">device_mouse_y_to_gui()</span></a> ).</td></tr><tr><td> <span class="notranslate">&quot;posX2&quot;</span></td><td><br /> 이것은 두 번째 터치의 공간 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;posY2&quot;</span></td><td><br /> 이것은 두 번째 터치의 공간 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawposX2&quot;</span></td><td><br /> 이것은 첫 번째 터치의 <i>원시</i> 창 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawposY2&quot;</span></td><td><br /> 이것은 두 번째 터치의 <i>원시</i> 창 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;guiposX2&quot;</span></td><td><br /> 두 번째 터치의 gui-space X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;guiposY2&quot;</span></td><td><br /> 이것은 두 번째 터치의 gui 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;pivotX&quot;</span></td><td><br /> 룸 공간에서 회전 피벗점의 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;pivotY&quot;</span></td><td><br /> 룸 공간에서 회전 피벗점의 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawpivotX&quot;</span></td><td><br /> 이것은 회전 피벗 포인트의 원시 창 공간 X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;rawpivotY&quot;</span></td><td><br /> 이것은 회전 피벗 포인트의 원시 창 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;guipivotX&quot;</span></td><td><br /> 이것은 회전 피벗 포인트의 gui-space X 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;guipivotY&quot;</span></td><td><br /> 이것은 회전 피벗 포인트의 gui 공간 Y 위치입니다.</td></tr><tr><td> <span class="notranslate">&quot;relativeangle&quot;</span></td><td><br /> 이것은 도 단위로 측정된 이 제스처의 마지막 이벤트와 비교한 회전의 차이입니다.</td></tr><tr><td> <span class="notranslate">&quot;absoluteangle&quot;</span></td><td><br /> 이것은 제스처가 시작될 때 손가락이 있었던 위치와 비교한 각도의 차이로 도 단위로 측정됩니다. 예를 들어 제스처가 시작된 이후 손가락이 1/4원을 회전했다면 이 값은 회전 방향에 따라 90° 또는 -90°가 됩니다.</td></tr></tbody></table><p></p><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down16" href="#">회전 시작</a></p><div class="droptext" data-targetname="drop-down16"><p class="dropspot"> 회전 시작 이벤트는 인스턴스(또는 이벤트가 전역인 경우 화면)에 두 개의 &quot;손가락&quot;이 터치되고(터치가 유지됨) &quot;손가락&quot; 중 하나 또는 둘 모두가 처음부터 회전할 때 트리거됩니다. 위치. 터치의 회전은 짧은 시간(기본값은 0.16초이지만 기능을 사용하여 설정할 수 있음) 내에 시작해야 합니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_time.htm"><span class="inline">gesture_rotate_time()</span></a> ) 최소 각도 임계값보다 커야 합니다(기본값은 5°이지만 기능을 사용하여 변경할 수 있습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a> ). 이러한 검사가 참이면 회전 시작 이벤트가 트리거되고 이를 사용하여 나머지 회전 이벤트에 사용할 값을 저장하거나 변수를 설정할 수 있습니다. 예를 들어:</p><h4> 이벤트 생성</h4><p class="code">rotating = false;<br /> view_a = camera_get_view_angle(view_camera[0]);</p><h4> 회전 시작 이벤트</h4><p class="code">rotating = true;</p><p class="dropspot"> 위의 코드는 단순히 뷰 카메라 회전을 위한 몇 가지 변수를 설정한 다음 회전 시작 이벤트에서 그 중 하나를 true로 설정합니다.</p><p class="dropspot"></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down17" href="#">회전</a></p><div class="droptext" data-targetname="drop-down17"><p class="dropspot"> 회전 이벤트는 움직임이 최소 각도 임계값(기본적으로 5°이지만, 이 기능을 사용하여 변경할 수 있는 한), 화면의 터치가 서로 회전하는 모든 단계에서 트리거됩니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a> ). 이 이벤트는 변수를 설정하고 인스턴스를 조작하는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p><h4> 회전 이벤트</h4><p class="code">var _relangle = event_data[?&quot;relativeangle&quot;];<br /> var _a = camera_get_view_angle(view_camera[0]);<br /> _a += _relangle;<br /> camera_set_view_angle(view_camera[0], _a);</p><p class="dropspot"> 위의 코드는 이벤트에서 터치의 회전 움직임에 따라 카메라 뷰를 회전합니다.</p><p class="dropspot"><strong></strong></p></div><p class="dropspot"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down18" href="#">회전 끝</a><strong></strong></p><div class="droptext" data-targetname="drop-down18"><p class="dropspot"> 회전 종료 이벤트는 제스처를 구성하는 하나(또는 둘 다) 터치가 장치 화면에서 해제될 때 트리거됩니다. 이 이벤트는 변수를 설정하고 인스턴스를 조작하는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p><h4> 종료 이벤트 회전</h4><p class="code">rotating = false;</p><h4> 단계 이벤트</h4><p class="code">if !rotating<br />     {<br />     var _a = camera_get_view_angle(view_camera[0]);<br />     var _adif = angle_difference(view_a, _a);<br />     _a += median(-5, _adif, 5);<br />     camera_set_view_angle(view_camera[0], _a);<br />     }</p><p class="dropspot"> 위의 코드는 사용자가 제스처를 중지한 다음 변수를 설정하는 시점을 감지하기 위해 회전 종료 이벤트를 사용합니다. 그런 다음 이 변수는 뷰 카메라를 원래 위치로 다시 회전하기 위해 단계 이벤트에서 사용됩니다. </p><p class="dropspot"></p></div><p class="dropspot"></p></div><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Object_Events.htm">개체 이벤트</a></div><div style="float:right"> 다음: <a href="Event_Order.htm">이벤트 순서</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Gesture Events
Flick Events
Pan Events
Rotate Events
Tap Events
Gestures
-->
  <!-- TAGS
gesture_events
-->
</body>
</html>