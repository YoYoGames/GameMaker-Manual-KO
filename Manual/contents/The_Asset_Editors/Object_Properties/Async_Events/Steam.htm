<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>증기</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Steam 비동기 이벤트를 자세히 설명하는 페이지입니다." />
  <meta name="rh-index-keywords" content="개체 - 비동기 Steam 이벤트" />
  <meta name="search-keywords" content="증기,ev_web_steam,ugc_item_installed,ugc_item_subscribed,ugc_item_unsubscribed" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> 증기</h1><p><img alt="Steam Event" class="center" src="../../../assets/Images/Asset_Editors/Async_Steam.png" /> 이 이벤트는 일부 <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam.htm">Steam 확장</a> 기능 <span class="glossextra">의</span> <a class="glossterm" data-glossterm="콜백" href="#">콜백</a> 에 의해서만 트리거될 수 있으며 변수에 저장된 <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> 을 반환합니다. <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>, 이벤트를 트리거한 함수의 콜백에 따라 다른 키/값 쌍을 포함합니다. 지도에는 항상 키 &quot;<span class="inline">event_type</span> &quot; 그런 다음 구문 분석하여 이벤트를 트리거한 함수 유형을 찾고 그에 맞게 필요한 코드를 변경할 수 있습니다.</p><p> 이 이벤트를 트리거하는 함수를 호출하면 async_load 맵이 항상 ID 키를 포함하므로 변수에 저장하고 확인해야 하는 고유한 비동기 ID 값을 생성합니다. 올바른 이벤트. 사실, 지도는 비동기 응답을 생성하는 데 사용된 Steam 기능에 관계없이 항상 다음 키를 보유합니다.</p><ul class="colour"><li> &quot;<span class="inline">id</span> &quot; - 이벤트를 트리거한 함수가 반환한 비동기 ID</li><li> &quot;<span class="inline">result</span> &quot; - 연산 결과(실제 값). 이것은 GML 상수이거나 <span class="inline">ugc_result_success</span> 또는 다른 실수. 호출이 성공했는지 확인하기 위해 이 상수를 확인해야 하며 다른 값이 반환되면 올바르게 작동하지 않은 것입니다. 반환된 나머지 가능한 값은 Steam &quot;의 결과로 표시됩니다.<span class="inline">EResult</span> &quot; 값을 확인해야 합니다. <span class="inline">steamclientpublic.h</span> 가능한 모든 값에 대한 SDK 헤더에서.</li><li> &quot;<span class="inline">event_type</span> &quot; - 이벤트 유형을 나타내는 문자열(자세한 내용은 아래 참조)</li></ul><p></p><h2> 데이터 업로드</h2><p> 순위표를 업로드하기 위해 Steam 기능을 사용할 때(또는 <span class="inline">steam_upload_score()</span> 또는 <span class="inline">steam_upload_score_buffer()</span> ) 반환된 DS 맵에는 다음 키/값 쌍이 있습니다.</p><ul class="colour"><li> &quot;<span class="inline">event_type</span> &quot; - 이 키는 값을 유지합니다 &quot;<span class="inline">leaderboard_upload</span> &quot;</li><li> &quot;<span class="inline">post_id</span> &quot; - 이 키는 업로드 호출 함수에서 반환된 ID 값과 일치해야 합니다.</li><li> &quot;<span class="inline">lb_name</span> &quot; - 이 키는 게시된 리더보드의 이름을 보유합니다.</li><li> &quot;<span class="inline">success</span> &quot; - 포스트가 성공하면 1, 실패하면 0</li><li> &quot;<span class="inline">updated</span> &quot; - 리더보드 점수가 실제로 업데이트된 경우(예: 새 점수가 더 나은 경우) 1이 되고 그렇지 않은 경우 0이 됩니다.</li><li> &quot;<span class="inline">score</span> &quot; - 이 키는 게시된 점수를 보유합니다.</li></ul><p> 점수 업로드 기능 페이지에서 이에 대한 예를 볼 수 있습니다.</p><p></p><h2> 리더보드 다운로드</h2><p> 순위표 다운로드를 위해 Steam 기능을 사용할 때(<span class="inline">steam_download_scores()</span>, <span class="inline">steam_download_scores_around_user()</span> 또는 <span class="inline">steam_download_friends_scores()</span> ) 반환된 DS 맵에는 다음 키/값 쌍이 있습니다.</p><ul class="colour"><li> &quot;<span class="inline">event_type</span> &quot; - 이 키는 값을 유지합니다 &quot;<span class="inline">leaderboard_download</span> &quot;</li><li> &quot;<span class="inline">id</span> &quot; - 이 키는 다운로드 호출 함수에서 반환된 ID 값과 일치해야 합니다.</li><li> &quot;<span class="inline">status</span> &quot; - 콜백의 상태입니다. 여기서 -1은 실패 또는 반환된 결과가 없고 0은 성공입니다.</li><li> &quot;<span class="inline">lb_name</span> &quot; - 이 키는 게시된 리더보드의 이름을 보유합니다.</li><li> &quot;<span class="inline">numEntries</span> &quot; - 반환되는 리더보드 데이터의 &quot;행&quot; 수입니다.</li><li> &quot;<span class="inline">entries</span> &quot; - 키를 포함할 다른 DS 맵을 포함하는 JSON 개체 문자열 &quot;<span class="inline">default</span> &quot;(결과가 포함되어 있지 않음을 나타냄) 또는 키 &quot; <span class="inline">entries</span> &quot;, 그러면 값을 얻을 수 있습니다. 이 반환된 값은 &quot;<span class="inline">entries</span> &quot;는 순위표의 각 순위를 포함하는 <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Lists/DS_Lists.htm">DS 목록</a> 이 됩니다. 여기서 목록의 각 항목은 키를 포함할 다른 DS 맵을 참조하게 됩니다.<span class="inline">name</span> &quot;, &quot;<span class="inline">score</span> &quot; 그리고 &quot; <span class="inline">rank</span> &quot;를 포함할 수도 있습니다.<span class="inline">data</span> &quot; 키 업로드에 사용된 기능에 따라 다릅니다.</li></ul><p> 주어진 순위표에 대한 상위 10개 순위를 요청하고 Steam 비동기 이벤트에서 결과를 구문 분석하여 점수 데이터 다운로드가 작동하는 방법의 예를 보여줍니다(업로드 예는 해당 기능 페이지 참조). 시작하려면 다음 코드로 점수를 요청해야 합니다.</p><p class="code">score_get = steam_download_scores(&quot;Game Scores&quot;, 1, 10);</p><p> 그러면 순위표 &quot;게임 점수&quot;에서 점수에 대한 요청을 Steam 서버로 보내고 변수 &quot;에 요청의 비동기 ID를 저장합니다.<span class="inline">score_get</span> &quot;. 그러면 <strong>Steam 비동기 이벤트</strong> 에서 다음과 같이 처리됩니다.</p><p class="code">var async_id = ds_map_find_value(async_load, &quot;id&quot;);<br />
    if async_id == score_get<br />
       {<br />
       var entries = ds_map_find_value(async_load, &quot;entries&quot;);<br />
       var map = json_decode(entries);<br />
       if ds_map_exists(map, &quot;default&quot;)<br />
        {<br />
          ds_map_destroy(map);<br />
          exit;<br />
          }<br />
       else<br />
          {<br />
          var list = ds_map_find_value(map, &quot;entries&quot;);<br />
          var len = ds_list_size(list);<br />
          var entry;<br />
          for(var i = 0; i &lt; len; i++;)<br />
             {<br />
             entry = ds_list_find_value(list, i );<br />
             steam_name[i] = ds_map_find_value(entry, &quot;name&quot;);<br />
             steam_score[i] = ds_map_find_value(entry, &quot;score&quot;);<br />
       steam_rank[i] = ds_map_find_value(entry, &quot;rank&quot;);<br />
             if (ds_map_exists(entry, &quot;data&quot;))<br />
                {<br />
                var data = ds_map_find_value(entry, &quot;data&quot;);<br />
                var buffId = buffer_base64_decode(data);<br />
              var message = buffer_read(buffId, buffer_string);<br />
                show_debug_message( &quot; -- attached message: &quot; + string(message));<br />
                buffer_delete(buffId);<br />
                }<br />
             ds_map_destroy(entry);<br />
           }<br />
          ds_list_destroy(list)<br />
          }<br />
       ds_map_destroy(map)<br />
       }</p><p> 여기서 우리가 하는 일은 먼저 &quot;<span class="inline">id</span> &quot; 특수 async_load 맵의 키입니다. 이 값이 원래 콜백 함수의 값(&quot;<span class="inline">score_get</span> &quot; 변수) 그런 다음 계속해서 데이터를 처리합니다. 가장 먼저 하는 일은 구문 분석하는 것입니다. <span class="inline">async_load</span> 키에 대한 DS 맵 &quot;<span class="inline">entries</span> &quot; 리더보드 데이터를 포함하는 JSON 개체를 포함합니다. 그런 다음 이 JSON 개체가 디코딩됩니다(참조 <a href="../../../GameMaker_Language/GML_Reference/File_Handling/Encoding_And_Hashing/json_decode.htm"><span class="inline">json_decode()</span></a> )를 다른 DS Map으로 만들고 이 새 맵 ID는 &quot;<span class="inline">map</span> &quot;.</p><p> 이 지도는 &quot;<span class="inline">default</span> &quot; 그리고 그것이 발견되면 지도가 파괴되고 이벤트가 종료됩니다. 그렇지 않으면 &quot;<span class="inline">default</span> &quot; 키가 발견되면 코드는 지도를 구문 분석하여 리더보드에 대한 필요한 정보를 추출합니다. 먼저 &quot;<span class="inline">entries</span> &quot; DS Map의 키를 누른 다음 목록의 각 항목을 반복하여 <span class="inline">name</span>, <span class="inline">score</span> 그리고 <span class="inline">rank</span> 각 항목의. 그런 다음 이 값을 배열에 저장한 다음 추가 &quot;<span class="inline">data</span> &quot; 키가 있는 경우(즉: 추가 데이터 패키지와 함께 점수가 업로드된 경우) 버퍼를 파괴하고 계속해서 맵을 파괴하기 전에 디버깅을 위해 이를 구문 분석하고 컴파일러 콘솔로 보냅니다. &quot; <span class="inline">data</span> &quot; 키가 포함되어 있으므로 다음을 사용하여 디코딩해야 합니다. <a href="../../../GameMaker_Language/GML_Reference/Buffers/buffer_base64_decode.htm"><span class="inline">buffer_base64_decode()</span></a> 제대로 읽을 수 있기 전에 기능.</p><p> 루프가 완료되면 항목 목록은 가져온 맵과 마찬가지로 파괴됩니다. 파괴할 필요가 없다. <span class="inline">async_load</span> <span data-keyref="GameMaker Name">GameMaker</span> 에서 처리하므로 DS Map입니다.</p><p></p><h2> UGC(사용자 생성 콘텐츠) 다운로드</h2><p> 사용자 생성 콘텐츠(UGC)를 다운로드하기 위해 Steam 기능을 사용할 때 많은 기능이 이 이벤트를 트리거합니다. 그러나 각 기능은 다음을 생성합니다. <span class="inline">async_load</span> 키/값 쌍이 다른 DS 맵(항상 일반 &quot;<span class="inline">id</span> &quot;, &quot;<span class="inline">result</span> &quot; 그리고 &quot;<span class="inline">event_type</span> &quot; 키)이므로 자세한 내용과 예제는 사용 중인 기능에 대한 페이지를 참조하십시오.</p><p></p><h2> 고유 UGC 이벤트</h2><p> Steam 비동기 이벤트는 사용자가 게임 외부의 항목을 구독할 때도 트리거될 수 있습니다. 예를 들어 사용자가 브라우저로 탭을 이동하고 새 항목을 구독한 다음 다시 게임으로 탭을 이동하는 경우입니다. 이러한 경우 <span class="inline">async_load</span> 지도에는 다음 세부 정보만 포함됩니다(이 페이지 상단에 나열된 기본값은 없음).</p><ul class="colour"><li> &quot;<span class="inline">event_type</span> &quot; - 이 키는 상수를 유지합니다 <span class="inline">ugc_item_installed</span>.</li><li> &quot;<span class="inline">published_file_id</span> &quot; - 새로 설치된 UGC 항목의 ID(기능을 사용할 수 있습니다. <span class="inline">steam_ugc_get_item_install_info()</span> 설치된 항목의 경로를 얻으려면)</li></ul><p> Steam Async 이벤트는 앱 내에서 또는 워크샵 브라우저 외부에서 워크샵 항목을 구독할 때 트리거될 수도 있습니다. 이러한 경우에는 <span class="inline">async_load</span> 맵에는 다음 키/값 쌍이 포함됩니다.</p><ul class="colour"><li> &quot;<span class="inline">event_type</span> &quot; - 이 키는 상수를 유지합니다 <span class="inline">ugc_item_subscribed</span>.</li><li> &quot;<span class="inline">published_file_id</span> &quot;: 이 키는 새로 가입한 항목의 게시된 파일 ID를 갖습니다.</li></ul><p> 이벤트는 항목이 구독 취소된 경우에도 트리거되며 DS 맵에는 다음이 포함됩니다.</p><ul class="colour"><li> &quot;<span class="inline">event_type</span> &quot; - 이 키는 상수를 유지합니다 <span class="inline">ugc_item_unsubscribed</span>.</li><li> &quot;<span class="inline">published_file_id</span> &quot;: 이 키는 구독하지 않은 항목의 게시된 파일 ID를 가지고 있습니다. </li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="../Async_Events.htm">비동기 이벤트</a></div><div style="float:right"> 다음: <a href="System.htm">시스템</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Steam Event
async_load
ugc_result_success
ugc_item_installed
ev_web_steam
ugc_item_subscribed
ugc_item_unsubscribed
-->
  <!-- TAGS
ev_web_steam
-->
</body>
</html>