<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>이벤트 뽑기</title>
  <meta name="generator" content="Adobe RoboHelp 2020"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="추첨 이벤트를 자세히 설명하는 페이지입니다."/>
  <meta name="rh-index-keywords" content="개체 - 이벤트 그리기"/>
  <meta name="search-keywords" content="추첨 이벤트,무승부 시작,무승부,사전 추첨,포스트 무승부,GUI 그리기,무승부"/>
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css"/>
  <script src="../../assets/scripts/main_script.js"></script>
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> 추첨 이벤트</h1><p><img alt="The Draw Event" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png"/> 그리기 이벤트 범주는 게임을 실행할 때 화면에 표시되는 내용을 제어하는 모든 이벤트가 있는 범주입니다. 게임에 대한 다양한 그리기 요구 사항을 더 잘 처리하기 위해 다양한 개별 이벤트로 분할되며 아래 이미지는 각 이벤트가 수행되는 순서를 보여줍니다.</p><p><img alt="Object Editor Draw Diagram" class="center" src="../../assets/Images/Asset_Editors/Editor_Events_DrawOrder.png"/> 일반 그리기 이벤트는 <strong>그리기 시작</strong>, 표준 <strong>그리기</strong> 및 <strong>그리기 종료</strong> 이벤트의 세 가지 하위 유형으로 나뉩니다. 일반적으로 표준 그리기 이벤트만 사용하면 되며 방의 모든 인스턴스는 게임의 각 단계에서 이 이벤트를 트리거하므로 인스턴스에 <strong>표시</strong> 되는 이벤트가 있는 한 항상 이 이벤트가 호출됩니다. 플래그가 true로 설정되었습니다. 객체 속성에서 이 하위 이벤트에 대해 아무 것도 정의하지 않았더라도(예: 코드나 작업 없음) <em>객체에 할당된 스프라이트가 있는 경우 여전히 트리거될 그리기 이벤트가 있음</em> 을 이해하는 것이 중요합니다. <span data-keyref="GameMaker Name">GameMaker</span> 에는 Draw 이벤트에서 두 가지 방법으로 사물을 그릴 수 있기 때문입니다.</p><ul class="colour"><li> <strong>기본 그리기</strong> 는 개체 속성에서 스프라이트를 정의하고 일반 그리기 이벤트에 작업이나 코드를 배치하지 않는 경우이며 이 경우 <span data-keyref="GameMaker Name">GameMaker</span> 는 할당된 스프라이트를 자동으로 그립니다. 이미지 스케일, 인덱스, 블렌딩 등을 변경하기 위해 다른 이벤트에서 수행하는 모든 변환은 그리기 이벤트가 비어 있는 한 반영됩니다.</li><li> <strong>사용자 지정 그리기</strong>, 그리기 이벤트에 코드 또는 작업을 배치할 때입니다. 이것은 <span data-keyref="GameMaker Name">GameMaker</span> 에게 &quot; <em>이 개체의 인스턴스에 대해 그리는 것을 제어하고 싶습니다&quot;라고</em> 알려주고 기본 그림을 완전히 재정의합니다. 예를 들어, 스프라이트가 할당된 개체를 가질 수 있으며 텍스트를 그리도록 그리기 이벤트를 설정할 수 있으며 텍스트는 화면에 그려 <span data-keyref="GameMaker Name">지지만 GameMaker</span> 에 그리도록 지시하지 <em>않았기</em> 때문에 스프라이트는 그려지지 않습니다. 텍스트와 함께 말이죠.</li></ul><p> 나머지 추첨 이벤트는 아래 나열된 섹션에 설명되어 있습니다.</p><p></p><p> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">그리기 시작 및 그리기 끝</a></p><div class="droptext" data-targetname="drop-down"><p class="dropspot"> 기본 그리기 이벤트 외에도 <strong>그리기 시작</strong> 및 <strong>그리기 종료</strong> 이벤트도 있습니다. 이것은 표준 Draw 이벤트와 정확히 동일하게 작동하지만(즉, 게임의 모든 단계와 모든 뷰포트에 대해 입력한 모든 것을 그릴 것입니다), 명시적으로 추가되지 않은 경우 아무 것도 &quot;기본 그리기&quot;하지 않습니다. 개체이며 항상 표준 그리기 이벤트 전후에 실행됩니다. 따라서 게임이 실행 중일 때 <em>항상</em> 모든 인스턴스에 대해 Draw Begin 이벤트가 발생하고 모든 인스턴스에 대해 Draw 이벤트가 발생하고 마지막으로 모든 인스턴스에 대해 Draw End 이벤트가 발생합니다.</p><p class="dropspot"> 이런 식으로 하나의 인스턴스에서 그리기 시작 단계에서 사물을 그리거나 그리기 속성을 설정할 수 있으며 표준 그리기 이벤트 또는 그리기 끝 이벤트가 있는 모든 인스턴스가 이러한 속성을 사용하거나 첫 번째 인스턴스가 그린 것 위에 그릴 수 있습니다. 기본적으로 <strong>시작 단계</strong> 및 <strong>종료 단계</strong> 이벤트와 마찬가지로 특정 시간에 특정 항목이 그려지도록 보장하는 확실한 방법입니다.</p><p class="dropspot"> 그리는 스프라이트든 셰이더든 3D 버퍼든 <span data-keyref="GameMaker Name">GameMaker</span> 에서 무언가를 그릴 때 주의해야 할 몇 가지 사항이 있습니다.</p><ul class="colour"><li class="dropspot"> 추첨 이벤트는 가장 많은 시간과 자원을 소모하는 이벤트 중 하나라는 점에서 매우 집중적인 이벤트입니다. 이를 위해 추첨 이벤트에서 그리기 이외의 어떤 것도 하지 않는 것이 좋습니다. 따라서 단계 이벤트 또는 알람 또는 기타 이벤트에 맞는 큰 코드 또는 복잡한 작업을 저장하고 그리기 이벤트를 가장 잘 수행하는 그리기 이벤트로 두십시오.</li><li class="dropspot"> 객체의 가시적 매개변수가 <em>off</em> 로 설정되어 있으면(객체의 인스턴스가 그려지지 않도록) <strong>모든 그리기 이벤트는 건너뜁니다</strong> ( <strong>크기 조정</strong> 이벤트 제외). 즉, 인스턴스를 보이지 않게 하면 이러한 이벤트에 배치된 모든 코드의 실행이 중지되므로 표시되지 않을 경우 그리기 이벤트에 필수 코드를 넣지 마십시오.</li><li class="dropspot"> 그리는 것은 개체 속성과 개체에 제공된 스프라이트(또는 마스크)에 의해 정의된 대로 선택한 충돌 엔진(전통 또는 물리학)과 아무 관련이 없습니다.</li></ul><p class="dropspot"></p></div><p> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">GUI 그리기</a></p><div class="droptext" data-targetname="drop-down1"><p class="dropspot"> 그리기 GUI 이벤트 유형은 그리기 이벤트 범주에 속하며 뷰 카메라 크기 또는 회전의 영향을 받지 않는 <a class="glossterm" data-glossterm="GUI" href="#">GUI</a> 요소를 그리기 위해 특별히 설계되었습니다. 즉, 방 내의 인스턴스 위치 또는 현재 카메라 뷰의 위치에 요소의 모든 위치를 지정할 필요 없이 인스턴스가 <a class="glossterm" data-glossterm="HUD" href="#">HUD</a> 또는 사용자 인터페이스에 대한 모든 요소를 그리도록 할 수 있습니다.</p><p class="dropspot"> 이러한 이벤트에서 그릴 때 카메라 보기가 활성화된 경우에도 그리기 좌표가 변경되지 않고 (0,0)이 <em>항상</em> 응용 프로그램 표면 또는 디스플레이의 왼쪽 상단 모서리임을 이해하는 것이 중요합니다(참고: 이 섹션의 하단)이며 기본 너비와 높이는 응용 프로그램 표면과 1:1입니다. <strong>Draw GUI Begin</strong> 이벤트가 모든 인스턴스를 먼저 그린 다음 이벤트 자체 내에서도 다른 레이어의 서로 다른 인스턴스 간에 깊이 순서가 유지됩니다. 표준 <strong>Draw GUI</strong> 는 그 위에 있는 모든 인스턴스에 대해 그릴 것이고 마지막으로 <strong>Draw Gui End</strong> 이벤트가 트리거됩니다.</p><p class="dropspot"> 이런 식으로 하나의 인스턴스에서 Draw GUI Begin에서 사물을 그리거나 그리기 속성을 설정할 수 있으며 표준 Draw GUI 또는 Draw GUI End 이벤트가 있는 모든 인스턴스가 이러한 속성을 사용하거나 첫 번째 인스턴스가 그린 것 위에 그릴 수 있는지 확인합니다. 기본적으로 <strong>시작 단계</strong> 및 <strong>종료 단계</strong> 이벤트와 마찬가지로 특정 시간에 특정 항목이 그려지도록 보장하는 확실한 방법입니다.</p><p class="dropspot"> 이러한 이벤트는 일반 그리기 이벤트와 함께 사용할 수도 있습니다(일반적으로 카메라 보기 위치, 크기 및 회전의 영향을 받습니다). 그리기 이벤트는 없지만 그리기 GUI 이벤트가 있는 경우 <span data-keyref="GameMaker Name">GameMaker</span> 는 여전히 기본적으로 인스턴스(있는 경우)에 대한 스프라이트를 정상적으로 그립니다.</p><p class="dropspot"> 다른 그리기 이벤트와 관련하여 그리기 GUI 이벤트는 항상 일반 그리기 이벤트에서 그려지는 모든 것 위에 그려집니다. 따라서 Draw GUI 이벤트가 있는 하위 레이어에 인스턴스가 있는 경우 일반 그리기 이벤트로 상위 레이어에 있는 인스턴스 위에 그립니다. 두 인스턴스에 모두 그리기 GUI 이벤트가 있는 경우 레이어 순서가 적용됩니다.</p><p class="note"> <strong>참고</strong>: 이 이벤트는 기본적으로 응용 프로그램 표면 크기와 1:1로 그립니다. 일반적으로 방 또는 뷰 포트의 크기입니다. 즉, 게임 옵션에서 <strong>화면 비율 수정</strong> 을 켜면 GUI가 게임을 &quot;레터박스&quot;하는 검은색 막대 위에 그려지지 않습니다. 이 동작은 <a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_maximise.htm"><span style="font-size:14px;"><span class="inline" style="font-size: 14px">display_set_gui_maximise()</span></span></a> 함수를 사용하여 끌 수 있으며 GUI 이벤트를 특정 크기로 잠글 수도 있습니다. 그러면 <a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_size.htm"><span class="inline" style="font-size: 14px">display_set_gui_size</span></a> () 함수를 사용하여 디스플레이 또는 애플리케이션 표면 치수에 맞게 자동으로 크기가 조정됩니다.</p><p class="dropspot"></p></div><p> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">사전 및 사후 추첨</a></p><div class="droptext" data-targetname="drop-down2"><p class="dropspot"> 사전 추첨 및 사후 추첨 이벤트는 추첨 이벤트 카테고리의 일부입니다. 그러나 다른 그리기 이벤트와 달리 이들은 <a class="glossterm" data-glossterm="디스플레이 버퍼" href="#">디스플레이 버퍼</a> 에 <em>직접</em> 그립니다. 이 버퍼는 현재 보이는 모든 뷰포트에 대한 결합된 화면 공간의 크기 <em>이거나</em> 하나의 뷰포트만 사용하거나 전혀 사용하지 않는 경우 창 크기입니다. 아래 이미지는 이를 보여줍니다.</p><p class="dropspot"><img alt="Object Editor Post Draw" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_PostDraw.png"/> 따라서 사전 또는 사후 그리기 이벤트를 사용하는 경우 모든 뷰포트가 맞춰진 창과 동일한 크기를 갖는 전체 화면 렌더 대상(디스플레이 버퍼)에 그리는 것입니다. 활성화된 뷰포트가 없으면 대신 창 자체의 크기로 설정됩니다.</p><p class="dropspot"> Pre Draw 이벤트는 다른 그리기 이벤트보다 먼저 트리거되며, 이 이벤트에서 값을 설정하고 그리기 속성을 설정하고 뷰포트나 GUI 레이어의 크기에 대해 걱정하지 않고 사물을 그릴 수도 있습니다(GUI 레이어 크기는 화면 버퍼이지만 코드에서 GUI 해상도를 설정할 수 있으므로 그렇지 않을 수 있음).</p><p class="dropspot"> 이 이벤트는 일반 드로잉을 위해 디스플레이 버퍼가 지워 <em>지기 전에</em> 발생한다는 점에 유의할 가치가 있습니다. 즉, 룸 편집기에서 보기 지우기를 끄지 않으면 첫 번째 뷰포트 그리기로 Pre Draw 이벤트에서 그려진 아무 것도 표시되지 않습니다. 클리어합니다. 뷰포트 자체를 통해 볼 수 있기를 원하거나 뷰포트를 전혀 사용하지 않는 경우 <strong><a href="../Rooms.htm">룸 편집기</a></strong> 에서 배경색을 알파 0으로 설정해야 합니다.</p><p class="note"> <strong>참고</strong>: 이 옵션을 끄면 게임을 테스트할 때 화면에 원치 않는 인공물이 그려지는 것을 알 수 있습니다(예: 인스턴스의 &quot;자취&quot;). 지워지지 않고 디스플레이 버퍼의 이전 프레임 위에 직접 그리기 때문입니다. 그러나 <span class="inline" style="font-size: 14px"><a href="../../GameMaker_Language/GML_Reference/Drawing/Colour_And_Alpha/draw_clear_alpha.htm">draw_clear_alpha()</a></span> 를 사용하여 직접 수행할 수 있습니다.</p><p class="dropspot"> Post Draw 이벤트는 모든 표준 그리기 이벤트 <em>이후</em> 에 발생하지만 Draw GUI 이벤트 <em>전에</em> 발생합니다. Pre Draw 이벤트와 마찬가지로 디스플레이 버퍼의 크기를 기준으로 하며, Draw GUI 이벤트보다 먼저 배치되어 <a class="glossterm" data-glossterm="HUD" href="#">HUD</a> 에 간섭하지 않고 간단하고 쉽게 전체 화면에서 후처리 효과 및 기타 작업을 수행할 수 있습니다. / 게임에 있을 수 있는 <a class="glossterm" data-glossterm="GUI" href="#">GUI</a> 요소.</p><p class="dropspot"></p></div><p> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">창 크기 조정</a></p><div class="droptext" data-targetname="drop-down3"><p class="dropspot"> 이 이벤트 유형은 이벤트 그리기 범주에 속하며 실제로 아무 것도 그리지 않지만 디스플레이 버퍼의 변경 사항에 반응합니다. 특히 게임 창이 표시될 때 UWP 디스플레이 버퍼 크기의 변경 사항에 반응하도록 설계되었습니다. &quot;스냅&quot;됩니다.</p><p class="dropspot"> UWP 대상 플랫폼에서는 게임 창의 &quot;스냅&quot;에서 디스플레이 버퍼의 크기 조정을 파악하는 것이 중요합니다(예: 사용자가 창을 디스플레이 측면으로 끌 때). 이 이벤트는 바로 그 작업을 수행하고 창이 변경될 때마다 트리거되어 필요에 따라 뷰의 크기를 조정하거나 <a class="glossterm" data-glossterm="HUD" href="#">HUD</a> 요소의 위치를 변경하는 사용자 정의 코드를 여기에 추가할 수 있습니다. 이 기능은 이러한 사항을 항상 확인하는 단계 이벤트 코드가 없도록 하는 편리한 방법으로 제공됩니다.</p><p class="note"> <strong>참고</strong>: 이 이벤트에는 추첨을 할 수 없습니다! 창의 크기를 조정하여 트리거되며 이 변경 사항을 포착하기 위한 것입니다... 수행해야 하는 모든 그리기는 여전히 다른 그리기 이벤트 중 하나에 있어야 합니다. </p><p class="dropspot"></p></div><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="Object_Events.htm">개체 이벤트</a></div><div style="float:right"> 다음: <a href="Async_Events.htm">비동기 이벤트</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
Draw Events
Pre Draw Event
Post Draw Event
Draw Begin Event
Draw End Events
Draw GUI Events
Draw GUI Begin Event
Draw GUI End Event
Pre Draw Event
Post Draw Event
Window Resize Event
-->
  <!-- TAGS
draw_events
-->

</body></html>