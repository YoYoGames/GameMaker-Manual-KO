<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>셰이더</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <script src="../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="셰이더 편집기 작동 방식을 자세히 설명하는 페이지" />
  <meta name="rh-index-keywords" content="셰이더 편집기" />
  <meta name="search-keywords" content="셰이더,셰이더,오픈 GL,오픈 GL ES" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> 셰이더 편집기</h1><p><img alt="Shader Editor" class="center" src="../assets/Images/Asset_Editors/Editor_Shaders.png" /> 셰이더는 게임이 화면에 렌더링하는 그래픽을 조작하는 데 사용할 수 있는 매우 강력한 도구로, 예를 들어 스프라이트에 미묘한 색조를 추가하는 것부터 전체 화면 왜곡 효과에 이르기까지 매우 빠른 효과를 허용합니다.. 그러나 셰이더는 무엇입니까?</p><p> 셰이더는 기본적으로 그래픽 카드 자체에서 직접 실행되는 두 부분으로 구성된 프로그램으로, GPU가 모든 작업을 수행하고 게임 코드에 대한 CPU 주기를 확보하기 때문에 매우 빠르게 만듭니다. 전체 셰이더는 정점 셰이더 프로그램과 프래그먼트 셰이더 프로그램(픽셀 셰이더라고도 함)으로 구성됩니다. 이 두 개의 작은 프로그램은 그래픽 카드가 화면에 렌더링하는 것을 조작하기 위해 함께 작동합니다. 그러면 <a class="glossterm" data-glossterm="디스플레이 버퍼" href="#">디스플레이 버퍼</a> 에 실제로 <a class="glossterm" data-glossterm="렌더링" href="#">렌더링</a> 되는 위치, 색상 및 알파 값을 실시간으로 조작할 수 있습니다.</p><p> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">정점 셰이더</a></p><div class="droptext" data-targetname="drop-down"><p class="dropspot"> 정점 셰이더는 개별 정점(이미지를 렌더링하는 데 사용되는 삼각형의 점) 처리를 처리하는 렌더링 파이프라인의 프로그래밍 가능한 셰이더 단계이며, 스프라이트 또는 표면과 같은 형상을 렌더링할 때 <span data-keyref="GameMaker Name">GameMaker</span> 는 정점의 흐름 - <strong>정점 버퍼</strong> 라고 하는 - 이 삼각형의 기하학을 정의합니다. 예를 들어 스프라이트는 &quot;쿼드&quot;를 형성하기 위해 함께 렌더링되는 두 개의 삼각형(일반적으로 <em>폴리곤</em> 이라고 함)의 지오메트리를 갖습니다. 정점 버퍼의 이 정점 스트림은 정점 데이터를 프로그래밍 가능한 방식으로 처리할 수 있는 정점 셰이더에 대한 입력으로 제공됩니다. 정점 셰이더 출력은 GPU에서 삼각형을 조합하는 데 사용되며, 삼각형은 적절하게 잘려서 뷰 포트와 뷰 카메라로 컬링된 다음 GPU의 래스터라이저 블록으로 보내져 다음으로 구성된 새 출력 스트림을 생성합니다. <strong>파편</strong>. 이들은 각각 화면에 나타나는 단일 픽셀에 상대적인 작은 데이터 구조입니다.</p></div><p> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">조각 셰이더</a></p><div class="droptext" data-targetname="drop-down1"><p class="dropspot"> 프래그먼트 셰이더는 렌더링 파이프라인에서 프로그래밍 가능한 셰이더 단계로 &quot;프래그먼트&quot;(주어진 폴리곤을 텍스처링하는 데 사용되는 보간 픽셀)를 처리하며 렌더링된 각 삼각형 픽셀의 최종 픽셀 색상을 출력하는 역할을 합니다. 기본적으로 다음과 같이 작동합니다. Fragment Shader는 Vertex Shader에 의해 파이프라인을 따라 전달된 모든 조각(렌더링되는 삼각형의 개별 픽셀)을 입력으로 받습니다. 그런 다음 이러한 조각을 처리하여 화면에 그려질 최종 대상 픽셀의 색상과 알파를 변경할 수 있습니다.</p></div><p></p><p> 셰이더가 실제로 작동하는 방식과 그래픽 파이프라인에서 셰이더가 차지하는 위치에 대한 전체 개요는 이 범위를 벗어나지만 여기에서 간단한 가이드를 찾을 수 있습니다.</p><ul class="colour"><li> <a href="../Additional_Information/Guide_To_Using_Shaders.htm">셰이더 사용 가이드</a></li></ul><p></p><h2> 언어 지원</h2><p> <span data-keyref="GameMaker Name">GameMaker</span> 는 다음 셰이더 언어를 지원합니다.</p><table><tbody><tr><th> 셰이더 언어</th><th> 대상 플랫폼</th></tr><tr><td> <strong>GLSL ES 1.0</strong></td><td> 모든 대상 플랫폼</td></tr><tr><td> <strong>GLSL</strong></td><td> 맥과 우분투(리눅스)</td></tr><tr><td> <strong>HLSL 11</strong></td><td> Windows, UWP, Xbox One 및 시리즈 S/X</td></tr><tr><td> <strong>PSSL</strong></td><td> 플레이스테이션 4 및 5</td></tr></tbody></table><p> GLSL ES 셰이더를 작성할 때 일부 대상 플랫폼은 다른 플랫폼보다 더 엄격할 수 있으므로 오류를 피하기 위해 가능한 한 <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/GLSL_ES_Specification_1.00.pdf" title="GLSL ES 1.0 사양">공식 언어 사양</a> 을 따르는 것이 좋습니다(예: HTML5 및 Opera GX 대상은 다른 플랫폼보다 더 제한적일 수 있음 언어 제한과 관련하여 Windows, macOS 등).</p><p></p><h2> 셰이더 만들기</h2><p> 셰이더 리소스를 만들려면 마우스 오른쪽 버튼을 클릭하기만 하면 됩니다.<img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png" /> <a href="../Introduction/The_Asset_Browser.htm">자산 브라우저</a> 내에서 <em>만들기 -&gt; 셰이더</em> 를 선택합니다. 기본 셰이더를 만든 후에는 마우스 오른쪽 버튼을 사용할 수 있습니다.<img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png" /> 코드 편집을 계속하기 전에 새 리소스의 메뉴에서 셰이더 유형을 선택합니다.</p><p><img alt="Shader Editor RMB Menu" class="center" src="../assets/Images/Asset_Editors/Editor_Shader_RMBMenu.png" /> 코드 편집기 자체는 새 셰이더를 생성할 때 두 개의 &quot;프로그램&quot;(정점 및 조각)으로 분할되며 각 프로그램은 편집기 상단의 탭에서 사용할 수 있습니다. 두 <em>부분이 없으면 셰이더를 생성할 수</em> 없기 때문에 둘 다 한 번에 생성됩니다. 프래그먼트 셰이더만 사용하려는 경우에도 &quot;통과&quot; 꼭짓점 셰이더를 먼저 만들어야 하므로 기본적으로 새로 생성되는 모든 셰이더에는 이미 코딩된 꼭짓점 및 프래그먼트 통과 셰이더가 있습니다. 페이지 상단의 스크린샷에서 코드 편집기 창 보기를 사용하여 두 가지를 나란히 표시한 것을 볼 수 있습니다. 두 셰이더 프로그램을 함께 작업할 때 유용합니다.</p><p> <em>모든</em> 대상 플랫폼에서 GLSL ES 셰이더를 사용할 수 있지만 <strong>HTML5</strong> 대상 플랫폼에서 작동하려면 <a href="../Settings/Game_Options/HTML5.htm">HTML5 게임 옵션</a> 에서 WebGL을 활성화해야 합니다. 그렇지 않으면 작동하지 않습니다.</p><p> 셰이더 기능과 <span data-keyref="GameMaker Name">GameMaker</span> 에서 사용하는 방법에 대한 자세한 내용은 다음 페이지를 참조하십시오.</p><ul class="colour"><li> <a href="../GameMaker_Language/GML_Reference/Asset_Management/Shaders/Shaders.htm">셰이더 함수</a> - 셰이더에 대한 GML 참조 섹션입니다.</li><li> <a href="../GameMaker_Language/GML_Reference/Asset_Management/Shaders/Shader_Constants.htm">셰이더 상수</a> - 셰이더를 작성할 때 사용할 수 있는 <span data-keyref="GameMaker Name">GameMaker</span> 에 내장된 상수입니다.</li><li> <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/GLSL_ES_Specification_1.00.pdf">GLSL ES 1.0 사양</a> - <span data-keyref="GameMaker Name">GameMaker에서</span> 사용하는 OpenGL ES 1.0 셰이더 언어용 PDF 파일입니다.</li><li> <a href="https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-reference">HLSL 언어 참조</a> - HLSL 사용을 위한 Microsoft 참조 페이지입니다.</li><li><a href="http://twvideo01.ubm-us.net/o1/vault/gdceurope2013/Presentations/825424RichardStenson.pdf">PSSL 언어 프레젠테이션</a> - 프레젠테이션 형식의 PSSL 언어 개요. </li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="The_Asset_Editors.htm">자산 편집자</a></div><div style="float:right"> 다음: <a href="Sounds.htm">소리</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 판권 소유</span></h5>
  </div>
  <!-- KEYWORDS
The Shader Editor
Shaders
OpenGL ES
HLSL
PSSL
-->
  <!-- TAGS
shader_editor
-->
</body>
</html>