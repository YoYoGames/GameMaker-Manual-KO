<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>iOS / tvOS 확장</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="iOS 확장 프로그램의 작동 방식을 자세히 설명하는 페이지" />
  <meta name="rh-index-keywords" content="확장 - iOS / tvOS 확장 만들기" />
  <meta name="search-keywords" content="iOS 확장,iOS,tvOS 확장,tvOS" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> iOS / tvOS 확장</h1><p> iOS 또는 tvOS용 확장 프로그램을 만들려면 두 부분으로 해야 합니다. 첫 번째 부분은 필요한 파일과 함께 확장자 자체를 추가하는 것이고 두 번째 부분은 확장에 필요한 함수와 매크로/상수를 만드는 것입니다.</p><p> 함수와 상수는 함께 그룹화하기 위해 <strong>자리 표시자</strong> 파일을 사용하여 추가되므로 자리 표시자를 추가한 다음 <a href="Creating_An_Extension.htm">여기</a> 섹션에 설명된 대로 함수와 매크로를 정의합니다. 나머지 파일을 추가하려면 먼저 편집기의 <strong>추가 기능</strong> 섹션에서 <em>iOS</em> 및/또는 <em>tvOS</em> 확인란을 선택하여 관련 <strong>확장 속성</strong> 창을 열어야 합니다(아래 이미지는 iOS 속성 창을 보여주지만 tvOS 창은 정확히 동일함):</p><p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p><p> 여기에서 다음 세부 정보를 제공할 수 있습니다.</p><ul class="colour"><li class="dropspot"> <strong>컴파일러 플래그/링커 플래그</strong>: 일부 프레임워크 및 타사 SDK가 작동하려면 추가 링커 플래그 및 컴파일러 플래그를 추가해야 하며 이는 여기에서 지정할 수 있습니다(자세한 내용은 해당 SDK 또는 프레임워크와 함께 제공되는 설명서 참조).</li><li class="dropspot"> <strong>클래스 이름</strong>: 확장에는 여러 클래스가 있을 수 있으며 각 클래스에는 고유한 기능과 상수가 있으므로 목적을 반영하는 이름을 지정해야 합니다.</li><li class="dropspot"> <strong>앱 대리자 클래스 이름</strong>: 사용자 지정 앱 대리자 클래스의 이름입니다. 이를 설정하면 확장 프로그램이 핵심 앱 기능을 재정의/확장할 수 있습니다. 이 기능을 사용하려면 다음을 수행해야 합니다.<ol><li> 대리자 소스 파일의 이름이 대리자 클래스와 동일한지 확인합니다(예: <span class="inline">@interface MyCustomAppDelegate</span> &quot;에 정의되어야 합니다. <span class="inline">MyCustomAppDelegate.h</span> &quot;)</li><li> 추가 <span class="inline">${YYExtAppDelegateIncludes}</span> 앱 델리게이트 헤더 파일 상단의 환경 변수. 이것은 컴파일 타임에 부모 대리자 클래스에 대한 관련 포함 파일로 대체됩니다.</li><li> 사용 <span class="inline">${YYExtAppDelegateBaseClass}</span> 환경 변수를 사용자 지정 앱 대리자의 기본 클래스로 사용합니다. 이것은 컴파일 타임에 올바른 기본 대리자 클래스로 대체됩니다.<br /><br /> 확장이 사용자 지정 앱 대리자를 사용하는 다른 확장과 함께 작동하도록 하려면 자식 클래스의 재정의된 메서드에서 기본 클래스 메서드를 호출해야 합니다. 슈퍼클래스 메서드를 호출하기 전에 오류를 피하기 위해 클래스 계층에서 구현되었는지 확인해야 합니다. 예를 들면 다음과 같습니다.</li></ol><p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br />
        {<br />
            // Check if any superclasses implement this method and call it<br />
            if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br />
              return [super application:application willFinishLaunchingWithOptions:launchOptions];<br />
            else<br />
                return TRUE;<br />
        }</p></li><li class="dropspot"> <strong>시스템 프레임워크</strong>: 여기에서 모든 iOS 시스템 <a class="glossterm" data-glossterm="뼈대" href="#">프레임워크</a> <span class="glossextra">를</span> 확장에 추가할 수 있습니다. 클릭하면 추가됩니다.<img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18" /> 두 번 클릭하여 편집할 수 있는 자리 표시자 프레임워크를 추가하는 버튼<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" /> 그 위에. <a href="https://developer.apple.com/documentation/">여기에서</a> 사용 가능한 시스템 프레임워크에 대해 자세히 알아볼 수 있습니다. 시스템 프레임워크를 제거하려면 간단히 선택한 다음<img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png" /> 단추.<br /><br /><img class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS_Weak_Reference.png" /> 프레임워크의 확인란을 활성화하여 &quot; <strong>약한 참조</strong> &quot;로 표시할 수 있습니다. 이것은 Xcode의 &quot; <strong>Build Phases -&gt; Link Binary with Libraries</strong> &quot; 섹션에 &quot; <strong>필수</strong> &quot; 프레임워크(기본 동작)와 반대되는 &quot; <strong>선택적인</strong> &quot; 프레임워크로 추가합니다.</li><li class="dropspot"> <strong>타사 프레임워크 + 번들</strong>: 이 섹션은 타사 및 SDK 번들을 추가하기 위한 것입니다. 시스템 프레임워크와 마찬가지로<img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18" /> 버튼을 클릭하여 추가한 다음 두 번 클릭<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" /> 편집하고 선택한 다음<img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png" /> 제거합니다(프레임워크 이름에 대한 정보는 선택한 SDK와 함께 제공된 설명서 참조).<br /><br /> 여기에서 프레임워크를 포함 <strong>하지 않음</strong>, <strong>포함 및 서명</strong> 또는 <strong>서명 없이 포함</strong> 을 선택할 수 있습니다.<br /><img class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS_Embed_Framework.png" /> 이것은 Xcode의 &quot; <strong>Frameworks, Libraries and Embedded Content</strong> &quot; 아래에 추가된 프레임워크에 대한 동일한 옵션을 반영합니다.</li><li class="dropspot"> <strong>Mac에서 프레임워크 경로 입력</strong>: 프로젝트를 빌드하는 데 사용되는 Mac에 파일이 있는 확장에 프레임워크를 추가하려는 경우 해당 프레임워크(빌드 머신에서)의 경로를 이 필드에 입력한 다음 클릭<img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18" /> 버튼을 눌러 추가합니다.<br /><br /> 경로는 다음을 가리켜야 합니다. <span class="inline">.framework</span> 로 압축될 파일 <span class="inline">.zip</span> 그리고 에 넣었다 <span class="inline">iOSSourceFromMac</span> 확장 디렉토리 아래의 폴더 마우스 오른쪽 버튼을 클릭하면 언제든지 쉽게 열 수 있습니다.<img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" /> 확장 <em>에서 Open in Explorer</em> 를 선택합니다.</li><li class="dropspot"> <strong>소스 추가</strong>: 확장 기능이 작동하는 데 필요한 소스 파일을 추가하는 데 사용할 수 있습니다. 추가된 파일은 <span class="inline">iOSSource</span> 확장 디렉토리 내의 폴더.</li><li class="dropspot"> <b>코드 삽입</b>: 테스트 또는 최종 릴리스를 위해 게임을 빌드할 때 iOS 애플리케이션에 삽입(추가)할 코드를 추가할 수 있습니다. 게임을 스토어에 제출하기 전에 이 사항(및 귀하의 권한)을 주의 깊게 수정해야 합니다. 잘못된 설정으로 인해 게임이 제출되지 않을 수 있기 때문입니다.</li></ul><h2> 코드 주입</h2><p> 코드 삽입은 Android 확장 페이지에 설명된 것과 동일한 방식으로 iOS/tvOS 확장에 사용할 수 있습니다. <a data-xref="{text}" href="Android_Extensions.htm#h">코드 삽입</a> 참조.</p><p> iOS 및 tvOS 플랫폼에서 사용할 수 있는 태그는 다음과 같습니다.</p><p class="code">YYIosPlist<br />
    YYIosEntitlements<br />
    YYIosCocoaPods<br />
    YYIosCocoaPodsDependencies<br />
    YYIosBuildRules<br />
    YYIosBuildSettingsInjection<br />
    YYIosScriptPhase<br />
    YYIosCFBundleURLSchemesArray<br />
    YYIosLSApplicationQueriesSchemesArray<br />
    <br />
    YYTvosPlist<br />
    YYTvosEntitlements<br />
    YYTvosCocoaPods<br />
    YYTvosCocoaPodsDependencies<br />
    YYTvosBuildRules<br />
    YYTvosBuildSettingsInjection<br />
    YYTvosScriptPhase<br />
    YYTvosCFBundleURLSchemesArray<br />
    YYTvosLSApplicationQueriesSchemesArray
  </p><p> 코드가 주입되는 런타임 위치는 태그 유형에 따라 다릅니다. </p><table><colgroup><col style="width: 174px;" /><col style="width: 760px;" /></colgroup><tbody><tr><th style=""> 태그 유형</th><th style=""> 주입 경로</th></tr><tr><td style=""> <b>권한</b></td><td style=""> {런타임}\ios\TemplateProject\${YYXCodeProjName}\<br /> <span>${YYXCodeProjName}.자격</span></td></tr><tr><td style=""> <b>info.plist</b></td><td style=""> {런타임}\ios\TemplateProject\${YYXCodeProjName}\<br /> 지원 파일\ <span>${YYXCodeProjName}-Info.plist</span></td></tr><tr><td style=""> <strong>infoPlist.strings</strong></td><td style=""> {런타임}\ios\TemplateProject\${YYXCodeProjName}\<br /> en.lproj\InfoPlist.strings</td></tr><tr><td style=""> <strong>project.pbxproj</strong></td><td style=""> {런타임}\ios\TemplateProject\${YYXCodeProjName}.xcodeproj\<br /> project.pbxproj</td></tr><tr><td style=""> <strong>xcscheme</strong></td><td style=""> {런타임}\ios\TemplateProject\${YYXCodeProjName}.xcodeproj\<br /> xcshareddata\xcschemes\${YYXCodeProjName}.xcscheme</td></tr></tbody></table><p class="note"><strong></strong> <span class="note">참고</span> 이 경로는 VM 전용입니다. YYC의 경우 주입된 코드는 <span class="inline">{RUNTIME}\yyc\</span> 여기서 경로는 VM의 경로와 동일하거나 동일하지 않을 수 있습니다.</p><p> <a href="../../Settings/Game_Options/iOS.htm">iOS용</a> 게임 옵션과 <a href="../../Settings/Game_Options/tvOS.htm">tvOS</a> 용 게임 옵션이 있습니다. <span class="inline">Podfile.lock</span> 이 섹션에서 <span data-keyref="GameMaker Name">CocoaPods</span> 종속성을 추가하는 경우 필요합니다.</p><h2> 추가 정보</h2><p> 확장에 시스템 프레임워크 또는 타사 프레임워크가 추가된 경우 이제 <strong>확장 속성</strong> 창에 나열되며 각 프레임워크 옆에 확인란이 있습니다. 확인란을 선택하면 약한 링크가 활성화되어 포함된 라이브러리의 모든 기호를 고유한 값으로 &quot;재정의&quot;해야 할 때 유용하지만 그렇게 하면 링크 속도가 느려진다는 점에 유의해야 합니다.</p><p> iOS용 기본 확장 생성에 대한 정보는 <a href="Extended_Examples.htm">소스 예제</a> 를 참조하십시오. 확장에서 CocoaPods를 사용하는 방법에 대한 정보는 다음 가이드를 참조하세요.</p><ul class="colour"><li> <a href="https://help.yoyogames.com/hc/en-us/articles/360008958858">iOS 및 tvOS: Cocoa Pod 사용</a> </li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="../Extensions.htm">확장 편집기</a></div><div style="float:right"> 다음: <a href="Extended_Examples.htm">소스 예</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
iOS Extensions
tvOS Extensions
-->
  <!-- TAGS
extensions_ios
-->
</body>
</html>