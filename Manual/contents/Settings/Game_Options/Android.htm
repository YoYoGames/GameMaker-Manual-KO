<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>기계적 인조 인간</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Android 게임 옵션을 자세히 설명하는 페이지" />
  <meta name="rh-index-keywords" content="게임 옵션 - 안드로이드" />
  <meta name="search-keywords" content="안드로이드 게임 옵션" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> 안드로이드 게임 옵션</h1><p> 이 섹션에서는 Android 게임 프로젝트가 컴파일되는 방법을 제어하는 데 사용할 수 있는 다양한 옵션에 대해 설명합니다. 다른 섹션은 다음과 같습니다.</p><p></p><h2> 일반적인</h2><p><img alt="General Android Game Options 1" class="center" src="../../assets/Images/Settings/Android_General1_Options.png" /> <strong>일반</strong> 섹션의 첫 번째 부분은 <strong>제품 정보</strong> 및 <strong>빌드 설정</strong> 전용입니다. <strong>도메인</strong>, <strong>회사</strong> 및 <strong>제품</strong> 으로 구성된 프로젝트 <strong>표시 이름</strong>, 패키지 정보를 포함하는 제품 정보를 입력해야 합니다. 패키지 정보는 AZ의 문자와 0-9의 숫자로만 구성할 수 있으며 기호나 기타 특수 문자를 전혀 사용하지 않으며 대문자도 사용해서는 안 됩니다. 이러한 세부 정보는 &quot; 형식의 패키지 ID를 생성하는 데 사용됩니다.<span class="inline">com.company.myappname</span> &quot;.</p><p> 그런 다음 <strong>빌드 도구</strong> 와 <strong>대상</strong>, <strong>최소</strong> 및 <strong>컴파일 SDK</strong> 버전을 설정해야 합니다.</p><p class="note"> <strong>참고</strong>: 사용할 &quot; <strong>지원 라이브러리</strong> &quot; 버전에 대한 옵션도 있습니다. <span data-keyref="GameMaker Name">GameMaker</span> v2.2.4 이상에서는 더 이상 필요하지 않으며 여기에 사용된 모든 값은 무시됩니다. 설정은 2.2.4보다 이전 런타임이 필요한 레거시 프로젝트와 함께 사용하기 위해 유지됩니다.</p><p> 빌드 도구(및 필요한 경우 지원 라이브러리)는 <span data-keyref="GameMaker Name">GameMaker</span> 가 Android 대상용 게임을 빌드할 때 사용되며 Android Studio를 사용하여 설치한 도구를 기반으로 적절한 값으로 설정해야 합니다.</p><ul class="colour"><li> <strong>Target SDK</strong> 는 여기에서 지정한 버전(최대 및 포함)에서 앱을 테스트했음을 나타냅니다. 이것은 단순히 Android OS가 OS 기능 측면에서 앱을 처리하는 방법에 대한 아이디어를 제공하기 위한 것입니다. 모든 실제적인 목적을 위해 대부분의 앱은 Target SDK를 최신 릴리스 버전의 API(컴파일 SDK 설정에서 사용)로 설정하려고 합니다. 이렇게 하면 최신 Android 기기에서 앱이 가능한 한 좋게 표시됩니다. 2019년 11월부터 Google은 API 레벨 28을 필수 대상으로 지정했습니다.</li><li> <strong>최소 SDK</strong> 버전은 프로젝트를 실행할 최소 API 레벨입니다. 2019년 11월부터 Google은 API 레벨 16을 절대 최소 요구 사항으로 만들었지만 확장을 추가하면 더 높은 최소 API 레벨이 필요할 수 있습니다.</li><li> <strong>컴파일 SDK</strong> 버전은 프로젝트가 컴파일되는 API 버전입니다. 즉, 해당 API 버전에 포함된 Android API 기능을 사용할 수 있습니다. 예를 들어 API 16 기능을 시도하고 사용하지만 컴파일 SDK 15를 설정하면 컴파일 오류가 발생합니다. 그러나 Compile SDK를 28로 설정하면 API 26 기기(및 다른 모든 이전 버전)에서 앱을 계속 실행할 수 있습니다.</li></ul><p> 선택한 API 수준에 <strong>SDK 값 미리 채우기</strong> 버튼을 클릭하여 사전 정의된 대상 설정 중 하나를 선택할 수 있습니다. 그러면 선택할 수 있는 다양한 API 목록이 열립니다. 그 중 하나를 선택하면 모든 SDK 파일이 적절한 값으로 채워지며 필요에 따라 사용하거나 편집할 수 있습니다.</p><p class="note"> <strong>참고</strong>: 프로젝트를 올바르게 컴파일하려면 Android SDK 관리자 또는 Android Studio를 통해 적절한 API를 설치해야 합니다.</p><p><img alt="Android General Options Part 2" class="center" src="../../assets/Images/Settings/Android_General2_Options.png" /></p><p> <strong>일반</strong> 섹션의 두 번째 부분에서는 다음 옵션을 사용할 수 있는 빌드 대상 CPU 아키텍처를 다룹니다(모두 선택하거나 필요한 것만 선택할 수 있지만 각 옵션은 컴파일된 APK의 최종 크기에 추가됩니다).:</p><ul class="Disc"><li> ARMV5용 빌드(기본적으로 선택됨)</li><li> ARMV7용 빌드(기본적으로 선택됨)</li><li> x86용 빌드(기본적으로 선택됨)</li><li> Mips용 빌드(기본적으로 선택됨)</li><li> ARM64용 빌드</li><li> x86_64용 빌드</li></ul><p> 설정한 후 최고의 사용자 경험을 위해 게임을 실행할 수 있는 다양한 방향을 선택할 수 있습니다. 사용 가능한 옵션은 다음과 같습니다.</p><ul class="Disc"><li> 초상화</li><li> 세로 뒤집힌</li><li> 풍경</li><li> 가로로 뒤집힌</li></ul><p> 마지막으로 다음과 같은 기타 옵션이 있습니다.</p><ul class="colour"><li> <strong>블루투스/iCade 지원 활성화</strong>: 블루투스 또는 iCade 게임패드 지원을 게임 프로젝트에 추가합니다. 이것은 기본적으로 켜져 있습니다.</li><li> <strong>린트 코드 분석 실행</strong>: 이 옵션에 플래그가 지정되면 빌드 도구가 프로젝트가 빌드될 때 린트 코드 분석을 실행하여 더 심층적인 오류 검사를 제공하고 프로젝트가 컴파일될 때 출력 창에 더 많은 정보를 표시합니다(로그 파일도 생성되며, 컴파일이 끝날 때 파일 경로가 <a href="../../Introduction/The_Output_Window.htm">출력 창</a> 에 표시됨). 린트 분석에 의해 오류로 표시된 모든 항목이 반드시 게임에 문제가 되는 것은 아니며, 이 기능을 활성화하면 게임이 꺼져 있어도 컴파일 및 실행이 잘되지만 더 이상 컴파일되지 않을 수 있습니다. 기본적으로 이것은 디버깅 전용이며 옵션은 기본적으로 꺼져 있습니다.</li><li> <strong>설치 위치</strong>: 여기에서 게임의 기본 설치 위치를 설정할 수 있습니다. 이것은 사용자가 장치에서 선택한 위치에 게임을 설치하는 <strong>자동</strong> 으로 설정하거나 항상 장치의 외부 저장소에 게임을 설치하려고 시도하는 <strong>외부 선호</strong> 로 설정할 수 있습니다..</li></ul><p> 여기에서 Android <strong>Sleep Margin</strong> 을 설정할 수도 있습니다. 이 옵션은 특정 시스템에서 게임을 실행할 때 끊김 현상을 줄이는 것과 관련이 있습니다. 기본적으로 게임이 실내 속도보다 빠르게 실행되는 경우 <span data-keyref="GameMaker Name">GameMaker</span> 는 남은 시간 동안 &quot;절전&quot;하지만 이 절전 모드는 매우 정확하지 않을 수 있으며 종종 필요한 것보다 더 오래 절전 모드를 종료하여 프레임이 더 오래 걸리게 되어 끊김 현상이 발생할 수 있습니다.. 이 문제를 해결하기 위해 우리는 더 짧은 시간 동안 잠을 잔 다음 더 정확하게 만들기 위해 나머지 시간 동안 빡빡한 루프에 앉아 있을 수 있습니다. 루프에 앉아 있을 때의 문제는 CPU 사용량을 증가시켜 결과적으로 CPU 온도가 올라가고 장치가 더 많은 배터리를 사용하게 됩니다. 기본적으로 이 값은 4로 설정되어 있으며 99.99%의 경우에는 문제가 없지만 저가형 장치나 백그라운드 프로세스가 많이 실행되는 장치의 경우 이 값이 이상적인 솔루션과 값이 아닐 수 있습니다. 5에서 10까지 필요할 수 있습니다. 이것은 매우 장치별 구성이며 빌드 장치에서 작동하는 것이 다른 사용자에게는 적합하지 않을 수 있으므로 의심스러운 경우 4로 설정한 상태로 두십시오.</p><p></p><h2> 적응형 아이콘</h2><p><img alt="Android Adaptive Icons Options" class="center" src="../../assets/Images/Settings/Android_AdaptiveIcons_Options.png" /> Android 8.0(API 레벨 26)에는 게임용 <strong>적응형 실행기 아이콘</strong> 이 도입되었으며 이러한 아이콘은 다양한 기기 모델에서 다양한 모양을 표시할 수 있습니다. 이 문제를 처리하려면 아이콘을 다양한 크기로 표시할 수 있는 여러 전경 및 배경 이미지를 제공해야 합니다. 이러한 아이콘 크기는 다음과 같습니다.</p><ul class="Disc"><li> 81x81픽셀(LDPI)</li><li> 108x108 픽셀 MDPI)</li><li> 162x162픽셀(HDPI)</li><li> 216x216픽셀(XHDPI)</li><li> 324x324픽셀(XXHDPI)</li><li> 432x432픽셀(XXXHDPI)</li></ul><p> 각 전경 및 배경 이미지를 개별적으로 제공하거나 파일에서 아이콘 생성을 선택할 수 있습니다. 즉, <span data-keyref="GameMaker Name">GameMaker</span> 는 기본(XXXHDPI) 파일에서 필요한 아이콘 이미지를 생성합니다. 전경과 배경 각각에 대해 하나의 이미지를 제공해야 하고 생성이라고 표시된 버튼을 클릭하면 아이콘이 생성됩니다. 이미지가 모두 있어야 합니다. <span class="inline">*.png</span> 체재.</p><p> 적응형 아이콘은 지정된 장치에서 마스킹될 수 있으므로 적응형 아이콘 <strong>미리보기</strong> 메뉴에서 이러한 마스크와 함께 어떻게 보이는지 확인할 수 있는 옵션이 있음을 이해하는 것이 중요합니다.</p><p><img alt="Android Adaptive Mask Preview" class="center" src="../../assets/Images/Settings/Android_AdaptiveIcons_Masks.gif" /> 이것은 단순히 선택한 마스크로 아이콘 <em>이</em> 어떻게 보일지 미리 보기이며, 설정은 아이콘을 내보내고 표시하는 방법에 영향을 미치지 않습니다. 설정은 게임이 실행될 장치와 OS에 달려 있기 때문입니다. 또한 이러한 아이콘은 <a href="../../IDE_Tools/Project_Image_Generator.htm">프로젝트 이미지 생성기</a> 도구를 사용할 때 수행되는 이미지 생성의 일부로 생성 <strong>되지 않습니다</strong>.</p><p></p><h2> 제도법</h2><p><img alt="Android Graphics Options" class="center" src="../../assets/Images/Settings/Android_Graphics_Options.png" /> 여기에서 다음 옵션을 사용하여 게임이 표시되는 방식과 관련된 다음 세부 정보를 변경할 수 있습니다.</p><ul class="colour"><li> <strong>픽셀 간 색상 보간</strong>: 기본적으로 픽셀을 &quot;매끄럽게&quot;하는 <a class="glossterm" data-glossterm="선형 보간">선형 보간</a> 을 켭니다. 선명한 픽셀 그래픽의 경우 꺼져 있어야 하지만 멋진 알파 블렌드와 부드러운 가장자리 그래픽이 있는 경우 켜진 상태로 두는 것이 좋습니다. 이것은 기본적으로 켜져 있습니다.</li><li> <strong>Screen Color Depth</strong>: 16비트 또는 24비트로 렌더링할 색상 깊이를 설정하는 데 사용할 수 있습니다. 이는 24비트로 설정된 경우 일부 구형 장치와의 호환성에 영향을 미치며 필요한 <em>ashmem</em> 도 증가합니다(AmazonFire 장치의 공유 메모리).</li><li> <strong>장치 지원</strong>: 이 옵션은 전용 GPU가 있는 장치만 지원할 것인지 아니면 모든 장치를 지원할 것인지 설정합니다. 기본적으로 게임에 알파 블렌딩, 추가 블렌딩, 표면 등과 같은 고급 그리기 기능이 있는 경우 GPU가 있는 장치로 제한해야 합니다. 그래픽 오류 또는 구형 장치의 충돌.</li><li> <strong>크기 조정</strong>: 여기에서 장치 화면 내에서 종횡비를 유지하면서 그리기 캔버스의 크기를 조정하도록 선택할 수 있습니다. 화면에 맞게 가장자리 주위에 &quot;패딩&quot;을 추가하거나, 장치 화면에 맞게 그리기 캔버스를 늘리도록 선택할 수 있습니다.</li></ul><p> 마지막으로 <a class="glossterm" data-glossterm="텍스처 페이지" href="macOS.htm#">텍스처 페이지</a> 의 크기를 설정하는 옵션이 있습니다. 기본(그리고 가장 호환되는) 크기는 2048x2048이지만 256x256에서 최대 8192x8192 사이에서 선택할 수 있습니다. 이 플랫폼에 대한 텍스처 페이지를 생성한 다음 창을 열어 어떻게 보이는지 확인할 수 있는 <strong>미리보기</strong> 라고 표시된 버튼도 있습니다. 이것은 텍스처 페이지가 어떻게 구성되어 있는지 확인하고 텍스처 페이지가 필요 이상으로 크거나 작은 것을 방지하려는 경우 매우 유용할 수 있습니다. 텍스처 페이지에 대한 자세한 내용은 <a href="../Texture_Information/Texture_Pages.htm">여기</a> 를 참조하십시오.</p><p class="note"> <strong>참고</strong>: 텍스처 페이지의 크기가 클수록 게임이 다른 브라우저 및 장치와 덜 호환된다는 점에 유의하십시오.</p><p></p><h2> 아이콘</h2><p><img alt="Android Icons Options" class="center" src="../../assets/Images/Settings/Android_Icons_Options.png" /> 이 섹션에서는 프로젝트에 다양한 상점 페이지 및 장치에 필요한 다양한 <strong>아이콘</strong> 이미지를 추가할 수 있습니다. 모든 아이콘 이미지는 24비트로 생성되어야 합니다. <span class="inline">*.png</span> 주어진 적절한 크기의 파일.</p><p> <span data-keyref="GameMaker Name">GameMaker</span> 에는 게임이 컴파일되는 다양한 대상 플랫폼에 필요한 모든 이미지를 자동으로 생성하는 데 사용할 수 있는 <a href="../../IDE_Tools/Project_Image_Generator.htm">프로젝트 이미지 생성기</a> 도구가 있습니다. 이 도구를 사용하는 경우 생성된 이미지를 수정하여 필요한 이미지인지 확인해야 합니다. 이 도구는 아이콘과 이미지를 생성합니다(아래 섹션 참조).</p><p></p><h2> 이미지</h2><p><img alt="Android Images Options" class="center" src="../../assets/Images/Settings/Android_Images_Options.png" /> 여기에서 전체 화면을 채우도록 설정되지 않은 시작 화면의 배경으로 사용할 <strong>테두리 색상</strong> 을 설정할 수 있습니다. 또한 <em>가로</em> 및 <em>세로</em> 모드 모두에 대해 최종 게임 파일에 <strong>스플래시 화면</strong> 을 추가할 수 있습니다. 이 화면은 게임이 장치에 로드되는 동안 표시됩니다. 이 화면은 24비트여야 합니다. <span class="inline">*.png</span> 파일이며 게임의 첫 번째 방(또는 보기)과 동일한 크기를 권장합니다. 특정 시간 동안 시작 화면을 표시해야 하는 경우 여기에서 0에서 10초로 설정할 수도 있습니다(기본 시간 0은 자산 로드 기간 동안만 표시됨을 의미합니다). 다음 옵션에서 시작 화면이 표시되는 방식을 설정할 수도 있습니다.</p><ul class="colour"><li> <strong>종횡비</strong> 유지: 장치 화면과 비교하여 이미지의 종횡비를 유지하고 필요한 경우 가장자리 주위에 &quot;패딩&quot;을 추가합니다.</li><li> <strong>자르기</strong>: 장치 화면과 이미지를 1:1로 유지하고 필요에 따라 가장자리를 자릅니다(또는 채움).</li><li> <strong>늘이기</strong>: 장치 화면을 채우도록 이미지를 늘립니다(표시된 이미지가 왜곡될 수 있음).</li></ul><p> 마지막으로 24비트인 Android TV 장치에서 게임의 <strong>배너 이미지</strong> 를 설정할 수 있습니다.<span class="inline">*.png</span>.</p><p></p><h2> 포장</h2><p><img alt="Android Packaging Options" class="center" src="../../assets/Images/Settings/Android_Packaging_Options.png" /></p><p> Android 게임에 Google Play를 사용하는 기능 중 하나는 게임에 <strong>라이선스</strong> 를 부여하는 기능입니다. 이는 귀하의 게임이 Google에 의해 제어되어 마켓을 통해 게임을 다운로드한 사람들만 게임을 할 수 있도록 하여 불법적인 제품 사본이 배포되는 것을 방지할 수 있음을 의미합니다.</p><p> 게임에서 이 기능을 활성화하려면 <strong>공개 키</strong> 를 <strong>Google 라이선스 공개 키</strong> 상자에 복사해야 합니다. 이 라이선스는 <a href="https://play.google.com/apps/publish">Google Play 개발자 페이지</a> 로 이동한 다음 수정하려는 게임을 선택하여 찾을 수 있습니다. 게임 프로필 페이지에서 &quot; <em>서비스 및 API</em> &quot; 섹션으로 스크롤하면 이 기능을 활성화하는 데 필요한 공개 키를 찾을 수 있습니다.</p><p> 활성화되면 게임을 소유할 권한이 없는 사람이 게임을 하려고 하면 장치에서 라이선스를 찾을 수 없음을 알리는 팝업 메시지 상자가 표시되고 다시 시도할 수 있는 옵션이 제공됩니다. 다시 테스트하거나 게임을 종료합니다.</p><p> 라이선스의 또 다른 기능은 게임에서 <strong>APK 확장</strong> 을 사용할 수 있다는 것입니다. 이것은 Google Play(및 Google Play에만 해당)에서 부과하는 최대 애플리케이션 크기 50MB를 우회하는 방법입니다. 두 부분으로 게임을 생성합니다. <span class="inline">*.apk</span> 파일 및 더 큰 <span class="inline">*.zip</span> 스토어에 업로드되는 모든 게임 자산을 보관할 파일입니다. 사용자가 게임을 처음 실행하면 zip이 다운로드되고 압축이 풀립니다. 이 옵션에 대한 자세한 내용은 <a href="https://help.yoyogames.com/hc/en-us/articles/115002418632-Android-Using-APK-Expansions-With-Google-Play">여기에서</a> 확인할 수 있습니다.</p><p> 또한 Google Dynamic Asset Delivery를 사용하여 최대 1GB의 앱 번들을 생성할 수 있습니다.<span class="inline">*.aab</span> 내보내기 옵션. 이것은 모든 게임 자산을 앱 자체와 함께 설치되는 &quot;설치 시간&quot; 자산으로 패키징합니다. 이 기능에 대한 자세한 내용은 <a href="https://developer.android.com/guide/playcore/asset-delivery" title="자산 전달">여기</a> 에서 확인할 수 있습니다.</p><p> 마지막으로 최종 앱 패키지를 <strong>Android TV</strong> 게임으로 준비할 수 있는 옵션이 있습니다(게임이 <a href="https://developer.android.com/training/tv/games/">Android TV 지침</a> 을 준수하는 경우에만 선택해야 함).</p><p></p><h2> 권한</h2><p><img alt="Android Permission Options" class="center" src="../../assets/Images/Settings/Android_Permissions_Options.png" /> 이 탭에서 게임이 Android 매니페스트 내에서 요청할 수 있는 일부 권한을 변경할 수 있습니다. <span data-keyref="GameMaker Name">GameMaker</span> 는 게임에서 사용하는 기능에 따라 필요에 따라 권한을 자동으로 할당하지만, 게임에 대해 올바르게 할당되지 않은 권한이 필요할 수 있습니다(예: 사용자 지정 확장 프로그램을 사용하는 경우) 이 경우 필수 권한을 선택하십시오 상자.</p><p> 아래 목록에는 사용 가능한 권한이 요약되어 있습니다.</p><ul class="colour"><li><span class="inline">WRITE_EXTERNAL_STORAGE</span>: 게임이 외부 저장소에 쓸 수 있도록 허용합니다.</li><li><span class="inline">READ_PHONE_STATE</span>: 전화 상태에 대한 읽기 전용 액세스를 허용합니다.</li><li><span class="inline">ACCESS_NETWORK_STATE</span>: 게임이 네트워크 정보에 접근할 수 있도록 허용합니다.</li><li><span class="inline">INTERNET</span>: 게임이 네트워크 소켓을 열도록 허용합니다.</li><li><span class="inline">BLUETOOTH</span>: 게임이 페어링된 Bluetooth 장치에 연결되도록 허용합니다.</li><li><span class="inline">RECORD_AUDIO</span>: 게임에서 마이크의 오디오 입력을 녹음하도록 허용합니다.</li></ul><p class="note"> <strong>참고</strong>: 이러한 항목이 필요한지 확실하지 않은 경우 기본적으로 선택하지 않은 상태로 두고 <span data-keyref="GameMaker Name">GameMaker</span> 가 게임에 대한 권한을 처리하도록 해야 합니다.</p><p> Android 권한 섹션에는 <strong>Android 애플리케이션 태그</strong> 에 권한을 삽입할 수 있는 영역도 있습니다. <span class="inline">Androidmanifest.xml</span>. Android 설명서에서 사용 가능한 태그의 전체 목록은 여기에서 찾을 수 있습니다.</p><ul class="colour"><li> <a href="https://developer.android.com/guide/topics/manifest/application-element">Android 개발자: 애플리케이션 태그</a></li></ul><p> 대상 API 28 이상에서는 더 이상 &quot;<span class="inline">http</span> &quot; - &quot;<span class="inline">https</span> 다음 태그를 추가하지 않는 한 &quot;이 대신 필요합니다.</p><p class="code">android:usesCleartextTraffic=&quot;true&quot;</p><p></p><h2> 사회의</h2><p><img class="center" src="../../assets/Images/Settings/Android_Social_Options.png" /> 이 섹션은 Android 게임에서 다양한 <strong>소셜</strong> 기능을 활성화하기 위한 것입니다. 다음 옵션을 선택할 수 있습니다.</p><ul class="colour"><li> <strong>Google</strong> - <strong>클라우드 저장 활성화</strong>: 이 옵션을 선택하면 Google 클라우드 저장이 활성화되고 <a href="../../Introduction/The_Marketplace.htm">Marketplace</a> 에서 관련 확장 프로그램을 다운로드하여 설치하라는 메시지가 표시됩니다. <a href="../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm">비동기 함수</a> 페이지에서 클라우드 저장 섹션을 참조하세요.</li><li> <strong>Google - Google 서비스 ID</strong>: 앱의 Google 서비스 ID를 입력할 수 있습니다. </li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> 뒤로: <a href="../Game_Options.htm">게임 옵션</a></div><div style="float:right"> 다음: <a href="iOS.htm">iOS</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Android Game Options
-->
  <!-- TAGS
android_options
-->
</body>
</html>